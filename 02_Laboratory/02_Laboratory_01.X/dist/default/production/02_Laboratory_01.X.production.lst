

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Sep 02 13:05:05 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ADRESH	set	4036
    50  0000                     _ADCON2bits	set	4032
    51  0000                     _ADCON0bits	set	4034
    52  0000                     _PORTD	set	3971
    53  0000                     _PORTEbits	set	3972
    54  0000                     _PORTB	set	3969
    55  0000                     _PORTAbits	set	3968
    56  0000                     _TRISEbits	set	3990
    57  0000                     _TRISD	set	3989
    58  0000                     _TRISB	set	3987
    59  0000                     _TRISAbits	set	3986
    60  0000                     _ADCON1	set	4033
    61  0000                     _OSCCONbits	set	4051
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  007DC4                     __pcinit:
    67                           	callstack 0
    68  007DC4                     start_initialization:
    69                           	callstack 0
    70  007DC4                     __initialization:
    71                           	callstack 0
    72  007DC4                     end_of_initialization:
    73                           	callstack 0
    74  007DC4                     __end_of__initialization:
    75                           	callstack 0
    76  007DC4  0100               	movlb	0
    77  007DC6  EF3D  F03F         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80  000001                     __pcstackCOMRAM:
    81                           	callstack 0
    82  000001                     ?___awdiv:
    83                           	callstack 0
    84  000001                     ?___awmod:
    85                           	callstack 0
    86  000001                     ___awdiv@dividend:
    87                           	callstack 0
    88  000001                     ___awmod@dividend:
    89                           	callstack 0
    90                           
    91                           ; 2 bytes @ 0x0
    92  000001                     	ds	2
    93  000003                     ___awdiv@divisor:
    94                           	callstack 0
    95  000003                     ___awmod@divisor:
    96                           	callstack 0
    97                           
    98                           ; 2 bytes @ 0x2
    99  000003                     	ds	2
   100  000005                     ___awdiv@counter:
   101                           	callstack 0
   102  000005                     ___awmod@counter:
   103                           	callstack 0
   104                           
   105                           ; 1 bytes @ 0x4
   106  000005                     	ds	1
   107  000006                     ___awdiv@sign:
   108                           	callstack 0
   109  000006                     ___awmod@sign:
   110                           	callstack 0
   111                           
   112                           ; 1 bytes @ 0x5
   113  000006                     	ds	1
   114  000007                     ___awdiv@quotient:
   115                           	callstack 0
   116                           
   117                           ; 2 bytes @ 0x6
   118  000007                     	ds	2
   119  000009                     ??_main:
   120                           
   121                           ; 1 bytes @ 0x8
   122  000009                     	ds	2
   123  00000B                     main@conv:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0xA
   127  00000B                     	ds	2
   128                           
   129 ;;
   130 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   131 ;;
   132 ;; *************** function _main *****************
   133 ;; Defined at:
   134 ;;		line 13 in file "newmain.c"
   135 ;; Parameters:    Size  Location     Type
   136 ;;		None
   137 ;; Auto vars:     Size  Location     Type
   138 ;;  conv            2   10[COMRAM] int 
   139 ;; Return value:  Size  Location     Type
   140 ;;                  1    wreg      void 
   141 ;; Registers used:
   142 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   143 ;; Tracked objects:
   144 ;;		On entry : 0/0
   145 ;;		On exit  : 0/0
   146 ;;		Unchanged: 0/0
   147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   148 ;;      Params:         0       0       0       0       0       0       0       0       0
   149 ;;      Locals:         2       0       0       0       0       0       0       0       0
   150 ;;      Temps:          2       0       0       0       0       0       0       0       0
   151 ;;      Totals:         4       0       0       0       0       0       0       0       0
   152 ;;Total ram usage:        4 bytes
   153 ;; Hardware stack levels required when called:    1
   154 ;; This function calls:
   155 ;;		___awdiv
   156 ;;		___awmod
   157 ;; This function is called by:
   158 ;;		Startup code after reset
   159 ;; This function uses a non-reentrant model
   160 ;;
   161                           
   162                           	psect	text0
   163  007E7A                     __ptext0:
   164                           	callstack 0
   165  007E7A                     _main:
   166                           	callstack 30
   167  007E7A                     
   168                           ;newmain.c: 14:     ADCON2bits.ADCS=1;;newmain.c: 15:     ADCON2bits.ADFM=0;
   169  007E7A  0E70               	movlw	112
   170  007E7C  12D3               	iorwf	211,f,c	;volatile
   171                           
   172                           ;newmain.c: 16: 
   173  007E7E  0E0E               	movlw	14
   174  007E80  6EC1               	movwf	193,c	;volatile
   175  007E82                     
   176                           ;newmain.c: 17:     while (1){
   177  007E82  8092               	bsf	146,0,c	;volatile
   178                           
   179                           ;newmain.c: 18:         ADCON0bits.CHS=0x00;
   180  007E84  0E00               	movlw	0
   181  007E86  6E93               	movwf	147,c	;volatile
   182                           
   183                           ;newmain.c: 19:         ADCON0bits.GO_DONE=1;
   184  007E88  0E00               	movlw	0
   185  007E8A  6E95               	movwf	149,c	;volatile
   186  007E8C                     
   187                           ;newmain.c: 20:         conv = (ADRESH*50)/255;
   188  007E8C  9096               	bcf	150,0,c	;volatile
   189  007E8E                     
   190                           ;newmain.c: 21:         PORTD=ADRESH;
   191  007E8E  9080               	bcf	128,0,c	;volatile
   192                           
   193                           ;newmain.c: 22:         PORTB = ((conv/10)*16)+(conv%10);
   194  007E90  0E00               	movlw	0
   195  007E92  6E81               	movwf	129,c	;volatile
   196  007E94                     
   197                           ;newmain.c: 23: 
   198  007E94  9084               	bcf	132,0,c	;volatile
   199                           
   200                           ;newmain.c: 24:         if(conv>25){
   201  007E96  0E00               	movlw	0
   202  007E98  6E83               	movwf	131,c	;volatile
   203  007E9A                     
   204                           ;newmain.c: 25:            PORTEbits.RE0=1;
   205  007E9A  80C2               	bsf	194,0,c	;volatile
   206                           
   207                           ;newmain.c: 26:         }
   208  007E9C  50C0               	movf	192,w,c	;volatile
   209  007E9E  0BC7               	andlw	-57
   210  007EA0  0920               	iorlw	32
   211  007EA2  6EC0               	movwf	192,c	;volatile
   212                           
   213                           ;newmain.c: 27:         else{
   214  007EA4  50C0               	movf	192,w,c	;volatile
   215  007EA6  0BF8               	andlw	-8
   216  007EA8  0901               	iorlw	1
   217  007EAA  6EC0               	movwf	192,c	;volatile
   218  007EAC                     
   219                           ;newmain.c: 28:            PORTEbits.RE0=0;
   220  007EAC  9EC0               	bcf	192,7,c	;volatile
   221  007EAE                     l31:
   222                           
   223                           ;newmain.c: 31:     return;
   224  007EAE  0EC3               	movlw	-61
   225  007EB0  16C2               	andwf	194,f,c	;volatile
   226  007EB2                     
   227                           ;newmain.c: 32: }
   228  007EB2  82C2               	bsf	194,1,c	;volatile
   229  007EB4  50C4               	movf	196,w,c	;volatile
   230  007EB6  0D32               	mullw	50
   231  007EB8  CFF3 F001          	movff	prodl,___awdiv@dividend
   232  007EBC  CFF4 F002          	movff	prodh,___awdiv@dividend+1
   233  007EC0  0E00               	movlw	0
   234  007EC2  6E04               	movwf	(___awdiv@divisor+1)^0,c
   235  007EC4  6803               	setf	___awdiv@divisor^0,c
   236  007EC6  EC9E  F03F         	call	___awdiv	;wreg free
   237  007ECA  C001  F00B         	movff	?___awdiv,main@conv
   238  007ECE  C002  F00C         	movff	?___awdiv+1,main@conv+1
   239  007ED2  CFC4 FF83          	movff	4036,3971	;volatile
   240  007ED6  C00B  F001         	movff	main@conv,___awmod@dividend
   241  007EDA  C00C  F002         	movff	main@conv+1,___awmod@dividend+1
   242  007EDE  0E00               	movlw	0
   243  007EE0  6E04               	movwf	(___awmod@divisor+1)^0,c
   244  007EE2  0E0A               	movlw	10
   245  007EE4  6E03               	movwf	___awmod@divisor^0,c
   246  007EE6  ECE5  F03E         	call	___awmod	;wreg free
   247  007EEA  C001  F009         	movff	?___awmod,??_main
   248  007EEE  C002  F00A         	movff	?___awmod+1,??_main+1
   249  007EF2  C00B  F001         	movff	main@conv,___awdiv@dividend
   250  007EF6  C00C  F002         	movff	main@conv+1,___awdiv@dividend+1
   251  007EFA  0E00               	movlw	0
   252  007EFC  6E04               	movwf	(___awdiv@divisor+1)^0,c
   253  007EFE  0E0A               	movlw	10
   254  007F00  6E03               	movwf	___awdiv@divisor^0,c
   255  007F02  EC9E  F03F         	call	___awdiv	;wreg free
   256  007F06  5001               	movf	?___awdiv^0,w,c
   257  007F08  0D10               	mullw	16
   258  007F0A  50F3               	movf	243,w,c
   259  007F0C  2409               	addwf	??_main^0,w,c
   260  007F0E  6E81               	movwf	129,c	;volatile
   261  007F10  BE0C               	btfsc	(main@conv+1)^0,7,c
   262  007F12  EF94  F03F         	goto	u261
   263  007F16  500C               	movf	(main@conv+1)^0,w,c
   264  007F18  E109               	bnz	u260
   265  007F1A  0E1A               	movlw	26
   266  007F1C  5C0B               	subwf	main@conv^0,w,c
   267  007F1E  A0D8               	btfss	status,0,c
   268  007F20  EF94  F03F         	goto	u261
   269  007F24  EF96  F03F         	goto	u260
   270  007F28                     u261:
   271  007F28  EF99  F03F         	goto	l32
   272  007F2C                     u260:
   273  007F2C  8084               	bsf	132,0,c	;volatile
   274  007F2E  EF57  F03F         	goto	l31
   275  007F32                     l32:
   276  007F32  9084               	bcf	132,0,c	;volatile
   277  007F34  EF57  F03F         	goto	l31
   278  007F38  EF00  F000         	goto	start
   279  007F3C                     __end_of_main:
   280                           	callstack 0
   281                           
   282 ;; *************** function ___awmod *****************
   283 ;; Defined at:
   284 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;  dividend        2    0[COMRAM] int 
   287 ;;  divisor         2    2[COMRAM] int 
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  sign            1    5[COMRAM] unsigned char 
   290 ;;  counter         1    4[COMRAM] unsigned char 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  2    0[COMRAM] int 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   300 ;;      Params:         4       0       0       0       0       0       0       0       0
   301 ;;      Locals:         2       0       0       0       0       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0       0       0
   303 ;;      Totals:         6       0       0       0       0       0       0       0       0
   304 ;;Total ram usage:        6 bytes
   305 ;; Hardware stack levels used:    1
   306 ;; This function calls:
   307 ;;		Nothing
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text1
   314  007DCA                     __ptext1:
   315                           	callstack 0
   316  007DCA                     ___awmod:
   317                           	callstack 30
   318  007DCA  0E00               	movlw	0
   319  007DCC  6E06               	movwf	___awmod@sign^0,c
   320  007DCE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   321  007DD0  EFEE  F03E         	goto	u200
   322  007DD4  EFEC  F03E         	goto	u201
   323  007DD8                     u201:
   324  007DD8  EFF4  F03E         	goto	l870
   325  007DDC                     u200:
   326  007DDC  6C01               	negf	___awmod@dividend^0,c
   327  007DDE  1E02               	comf	(___awmod@dividend+1)^0,f,c
   328  007DE0  B0D8               	btfsc	status,0,c
   329  007DE2  2A02               	incf	(___awmod@dividend+1)^0,f,c
   330  007DE4  0E01               	movlw	1
   331  007DE6  6E06               	movwf	___awmod@sign^0,c
   332  007DE8                     l870:
   333  007DE8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   334  007DEA  EFFB  F03E         	goto	u210
   335  007DEE  EFF9  F03E         	goto	u211
   336  007DF2                     u211:
   337  007DF2  EFFF  F03E         	goto	l874
   338  007DF6                     u210:
   339  007DF6  6C03               	negf	___awmod@divisor^0,c
   340  007DF8  1E04               	comf	(___awmod@divisor+1)^0,f,c
   341  007DFA  B0D8               	btfsc	status,0,c
   342  007DFC  2A04               	incf	(___awmod@divisor+1)^0,f,c
   343  007DFE                     l874:
   344  007DFE  5003               	movf	___awmod@divisor^0,w,c
   345  007E00  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   346  007E02  B4D8               	btfsc	status,2,c
   347  007E04  EF06  F03F         	goto	u221
   348  007E08  EF08  F03F         	goto	u220
   349  007E0C                     u221:
   350  007E0C  EF2C  F03F         	goto	l890
   351  007E10                     u220:
   352  007E10  0E01               	movlw	1
   353  007E12  6E05               	movwf	___awmod@counter^0,c
   354  007E14  EF10  F03F         	goto	l880
   355  007E18                     l878:
   356  007E18  90D8               	bcf	status,0,c
   357  007E1A  3603               	rlcf	___awmod@divisor^0,f,c
   358  007E1C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   359  007E1E  2A05               	incf	___awmod@counter^0,f,c
   360  007E20                     l880:
   361  007E20  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   362  007E22  EF15  F03F         	goto	u231
   363  007E26  EF17  F03F         	goto	u230
   364  007E2A                     u231:
   365  007E2A  EF0C  F03F         	goto	l878
   366  007E2E                     u230:
   367  007E2E                     l882:
   368  007E2E  5003               	movf	___awmod@divisor^0,w,c
   369  007E30  5C01               	subwf	___awmod@dividend^0,w,c
   370  007E32  5004               	movf	(___awmod@divisor+1)^0,w,c
   371  007E34  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   372  007E36  A0D8               	btfss	status,0,c
   373  007E38  EF20  F03F         	goto	u241
   374  007E3C  EF22  F03F         	goto	u240
   375  007E40                     u241:
   376  007E40  EF26  F03F         	goto	l886
   377  007E44                     u240:
   378  007E44  5003               	movf	___awmod@divisor^0,w,c
   379  007E46  5E01               	subwf	___awmod@dividend^0,f,c
   380  007E48  5004               	movf	(___awmod@divisor+1)^0,w,c
   381  007E4A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   382  007E4C                     l886:
   383  007E4C  90D8               	bcf	status,0,c
   384  007E4E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   385  007E50  3203               	rrcf	___awmod@divisor^0,f,c
   386  007E52  2E05               	decfsz	___awmod@counter^0,f,c
   387  007E54  EF17  F03F         	goto	l882
   388  007E58                     l890:
   389  007E58  5006               	movf	___awmod@sign^0,w,c
   390  007E5A  B4D8               	btfsc	status,2,c
   391  007E5C  EF32  F03F         	goto	u251
   392  007E60  EF34  F03F         	goto	u250
   393  007E64                     u251:
   394  007E64  EF38  F03F         	goto	l894
   395  007E68                     u250:
   396  007E68  6C01               	negf	___awmod@dividend^0,c
   397  007E6A  1E02               	comf	(___awmod@dividend+1)^0,f,c
   398  007E6C  B0D8               	btfsc	status,0,c
   399  007E6E  2A02               	incf	(___awmod@dividend+1)^0,f,c
   400  007E70                     l894:
   401  007E70  C001  F001         	movff	___awmod@dividend,?___awmod
   402  007E74  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   403  007E78  0012               	return		;funcret
   404  007E7A                     __end_of___awmod:
   405                           	callstack 0
   406                           
   407 ;; *************** function ___awdiv *****************
   408 ;; Defined at:
   409 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  dividend        2    0[COMRAM] int 
   412 ;;  divisor         2    2[COMRAM] int 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  quotient        2    6[COMRAM] int 
   415 ;;  sign            1    5[COMRAM] unsigned char 
   416 ;;  counter         1    4[COMRAM] unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  2    0[COMRAM] int 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   426 ;;      Params:         4       0       0       0       0       0       0       0       0
   427 ;;      Locals:         4       0       0       0       0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0
   429 ;;      Totals:         8       0       0       0       0       0       0       0       0
   430 ;;Total ram usage:        8 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text2
   440  007F3C                     __ptext2:
   441                           	callstack 0
   442  007F3C                     ___awdiv:
   443                           	callstack 30
   444  007F3C  0E00               	movlw	0
   445  007F3E  6E06               	movwf	___awdiv@sign^0,c
   446  007F40  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   447  007F42  EFA7  F03F         	goto	u140
   448  007F46  EFA5  F03F         	goto	u141
   449  007F4A                     u141:
   450  007F4A  EFAD  F03F         	goto	l826
   451  007F4E                     u140:
   452  007F4E  6C03               	negf	___awdiv@divisor^0,c
   453  007F50  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   454  007F52  B0D8               	btfsc	status,0,c
   455  007F54  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   456  007F56  0E01               	movlw	1
   457  007F58  6E06               	movwf	___awdiv@sign^0,c
   458  007F5A                     l826:
   459  007F5A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   460  007F5C  EFB4  F03F         	goto	u150
   461  007F60  EFB2  F03F         	goto	u151
   462  007F64                     u151:
   463  007F64  EFBA  F03F         	goto	l832
   464  007F68                     u150:
   465  007F68  6C01               	negf	___awdiv@dividend^0,c
   466  007F6A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   467  007F6C  B0D8               	btfsc	status,0,c
   468  007F6E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   469  007F70  0E01               	movlw	1
   470  007F72  1A06               	xorwf	___awdiv@sign^0,f,c
   471  007F74                     l832:
   472  007F74  0E00               	movlw	0
   473  007F76  6E08               	movwf	(___awdiv@quotient+1)^0,c
   474  007F78  0E00               	movlw	0
   475  007F7A  6E07               	movwf	___awdiv@quotient^0,c
   476  007F7C  5003               	movf	___awdiv@divisor^0,w,c
   477  007F7E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   478  007F80  B4D8               	btfsc	status,2,c
   479  007F82  EFC5  F03F         	goto	u161
   480  007F86  EFC7  F03F         	goto	u160
   481  007F8A                     u161:
   482  007F8A  EFEF  F03F         	goto	l854
   483  007F8E                     u160:
   484  007F8E  0E01               	movlw	1
   485  007F90  6E05               	movwf	___awdiv@counter^0,c
   486  007F92  EFCF  F03F         	goto	l840
   487  007F96                     l838:
   488  007F96  90D8               	bcf	status,0,c
   489  007F98  3603               	rlcf	___awdiv@divisor^0,f,c
   490  007F9A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   491  007F9C  2A05               	incf	___awdiv@counter^0,f,c
   492  007F9E                     l840:
   493  007F9E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   494  007FA0  EFD4  F03F         	goto	u171
   495  007FA4  EFD6  F03F         	goto	u170
   496  007FA8                     u171:
   497  007FA8  EFCB  F03F         	goto	l838
   498  007FAC                     u170:
   499  007FAC                     l842:
   500  007FAC  90D8               	bcf	status,0,c
   501  007FAE  3607               	rlcf	___awdiv@quotient^0,f,c
   502  007FB0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   503  007FB2  5003               	movf	___awdiv@divisor^0,w,c
   504  007FB4  5C01               	subwf	___awdiv@dividend^0,w,c
   505  007FB6  5004               	movf	(___awdiv@divisor+1)^0,w,c
   506  007FB8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   507  007FBA  A0D8               	btfss	status,0,c
   508  007FBC  EFE2  F03F         	goto	u181
   509  007FC0  EFE4  F03F         	goto	u180
   510  007FC4                     u181:
   511  007FC4  EFE9  F03F         	goto	l850
   512  007FC8                     u180:
   513  007FC8  5003               	movf	___awdiv@divisor^0,w,c
   514  007FCA  5E01               	subwf	___awdiv@dividend^0,f,c
   515  007FCC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   516  007FCE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   517  007FD0  8007               	bsf	___awdiv@quotient^0,0,c
   518  007FD2                     l850:
   519  007FD2  90D8               	bcf	status,0,c
   520  007FD4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   521  007FD6  3203               	rrcf	___awdiv@divisor^0,f,c
   522  007FD8  2E05               	decfsz	___awdiv@counter^0,f,c
   523  007FDA  EFD6  F03F         	goto	l842
   524  007FDE                     l854:
   525  007FDE  5006               	movf	___awdiv@sign^0,w,c
   526  007FE0  B4D8               	btfsc	status,2,c
   527  007FE2  EFF5  F03F         	goto	u191
   528  007FE6  EFF7  F03F         	goto	u190
   529  007FEA                     u191:
   530  007FEA  EFFB  F03F         	goto	l858
   531  007FEE                     u190:
   532  007FEE  6C07               	negf	___awdiv@quotient^0,c
   533  007FF0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   534  007FF2  B0D8               	btfsc	status,0,c
   535  007FF4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   536  007FF6                     l858:
   537  007FF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   538  007FFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   539  007FFE  0012               	return		;funcret
   540  008000                     __end_of___awdiv:
   541                           	callstack 0
   542  0000                     
   543                           	psect	rparam
   544  0000                     
   545                           	psect	idloc
   546                           
   547                           ;Config register IDLOC0 @ 0x200000
   548                           ;	unspecified, using default values
   549  200000                     	org	2097152
   550  200000  FF                 	db	255
   551                           
   552                           ;Config register IDLOC1 @ 0x200001
   553                           ;	unspecified, using default values
   554  200001                     	org	2097153
   555  200001  FF                 	db	255
   556                           
   557                           ;Config register IDLOC2 @ 0x200002
   558                           ;	unspecified, using default values
   559  200002                     	org	2097154
   560  200002  FF                 	db	255
   561                           
   562                           ;Config register IDLOC3 @ 0x200003
   563                           ;	unspecified, using default values
   564  200003                     	org	2097155
   565  200003  FF                 	db	255
   566                           
   567                           ;Config register IDLOC4 @ 0x200004
   568                           ;	unspecified, using default values
   569  200004                     	org	2097156
   570  200004  FF                 	db	255
   571                           
   572                           ;Config register IDLOC5 @ 0x200005
   573                           ;	unspecified, using default values
   574  200005                     	org	2097157
   575  200005  FF                 	db	255
   576                           
   577                           ;Config register IDLOC6 @ 0x200006
   578                           ;	unspecified, using default values
   579  200006                     	org	2097158
   580  200006  FF                 	db	255
   581                           
   582                           ;Config register IDLOC7 @ 0x200007
   583                           ;	unspecified, using default values
   584  200007                     	org	2097159
   585  200007  FF                 	db	255
   586                           
   587                           	psect	config
   588                           
   589                           ;Config register CONFIG1L @ 0x300000
   590                           ;	unspecified, using default values
   591                           ;	PLL Prescaler Selection bits
   592                           ;	PLLDIV = 0x0, unprogrammed default
   593                           ;	System Clock Postscaler Selection bits
   594                           ;	CPUDIV = 0x0, unprogrammed default
   595                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   596                           ;	USBDIV = 0x0, unprogrammed default
   597  300000                     	org	3145728
   598  300000  00                 	db	0
   599                           
   600                           ;Config register CONFIG1H @ 0x300001
   601                           ;	Oscillator Selection bits
   602                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
   603                           ;	Fail-Safe Clock Monitor Enable bit
   604                           ;	FCMEN = 0x0, unprogrammed default
   605                           ;	Internal/External Oscillator Switchover bit
   606                           ;	IESO = 0x0, unprogrammed default
   607  300001                     	org	3145729
   608  300001  08                 	db	8
   609                           
   610                           ;Config register CONFIG2L @ 0x300002
   611                           ;	unspecified, using default values
   612                           ;	Power-up Timer Enable bit
   613                           ;	PWRT = 0x1, unprogrammed default
   614                           ;	Brown-out Reset Enable bits
   615                           ;	BOR = 0x3, unprogrammed default
   616                           ;	Brown-out Reset Voltage bits
   617                           ;	BORV = 0x3, unprogrammed default
   618                           ;	USB Voltage Regulator Enable bit
   619                           ;	VREGEN = 0x0, unprogrammed default
   620  300002                     	org	3145730
   621  300002  1F                 	db	31
   622                           
   623                           ;Config register CONFIG2H @ 0x300003
   624                           ;	unspecified, using default values
   625                           ;	Watchdog Timer Enable bit
   626                           ;	WDT = 0x1, unprogrammed default
   627                           ;	Watchdog Timer Postscale Select bits
   628                           ;	WDTPS = 0xF, unprogrammed default
   629  300003                     	org	3145731
   630  300003  1F                 	db	31
   631                           
   632                           ; Padding undefined space
   633  300004                     	org	3145732
   634  300004  FF                 	db	255
   635                           
   636                           ;Config register CONFIG3H @ 0x300005
   637                           ;	unspecified, using default values
   638                           ;	CCP2 MUX bit
   639                           ;	CCP2MX = 0x1, unprogrammed default
   640                           ;	PORTB A/D Enable bit
   641                           ;	PBADEN = 0x1, unprogrammed default
   642                           ;	Low-Power Timer 1 Oscillator Enable bit
   643                           ;	LPT1OSC = 0x0, unprogrammed default
   644                           ;	MCLR Pin Enable bit
   645                           ;	MCLRE = 0x1, unprogrammed default
   646  300005                     	org	3145733
   647  300005  83                 	db	131
   648                           
   649                           ;Config register CONFIG4L @ 0x300006
   650                           ;	unspecified, using default values
   651                           ;	Stack Full/Underflow Reset Enable bit
   652                           ;	STVREN = 0x1, unprogrammed default
   653                           ;	Single-Supply ICSP Enable bit
   654                           ;	LVP = 0x1, unprogrammed default
   655                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   656                           ;	ICPRT = 0x0, unprogrammed default
   657                           ;	Extended Instruction Set Enable bit
   658                           ;	XINST = 0x0, unprogrammed default
   659                           ;	Background Debugger Enable bit
   660                           ;	DEBUG = 0x1, unprogrammed default
   661  300006                     	org	3145734
   662  300006  85                 	db	133
   663                           
   664                           ; Padding undefined space
   665  300007                     	org	3145735
   666  300007  FF                 	db	255
   667                           
   668                           ;Config register CONFIG5L @ 0x300008
   669                           ;	unspecified, using default values
   670                           ;	Code Protection bit
   671                           ;	CP0 = 0x1, unprogrammed default
   672                           ;	Code Protection bit
   673                           ;	CP1 = 0x1, unprogrammed default
   674                           ;	Code Protection bit
   675                           ;	CP2 = 0x1, unprogrammed default
   676                           ;	Code Protection bit
   677                           ;	CP3 = 0x1, unprogrammed default
   678  300008                     	org	3145736
   679  300008  0F                 	db	15
   680                           
   681                           ;Config register CONFIG5H @ 0x300009
   682                           ;	unspecified, using default values
   683                           ;	Boot Block Code Protection bit
   684                           ;	CPB = 0x1, unprogrammed default
   685                           ;	Data EEPROM Code Protection bit
   686                           ;	CPD = 0x1, unprogrammed default
   687  300009                     	org	3145737
   688  300009  C0                 	db	192
   689                           
   690                           ;Config register CONFIG6L @ 0x30000A
   691                           ;	unspecified, using default values
   692                           ;	Write Protection bit
   693                           ;	WRT0 = 0x1, unprogrammed default
   694                           ;	Write Protection bit
   695                           ;	WRT1 = 0x1, unprogrammed default
   696                           ;	Write Protection bit
   697                           ;	WRT2 = 0x1, unprogrammed default
   698                           ;	Write Protection bit
   699                           ;	WRT3 = 0x1, unprogrammed default
   700  30000A                     	org	3145738
   701  30000A  0F                 	db	15
   702                           
   703                           ;Config register CONFIG6H @ 0x30000B
   704                           ;	unspecified, using default values
   705                           ;	Configuration Register Write Protection bit
   706                           ;	WRTC = 0x1, unprogrammed default
   707                           ;	Boot Block Write Protection bit
   708                           ;	WRTB = 0x1, unprogrammed default
   709                           ;	Data EEPROM Write Protection bit
   710                           ;	WRTD = 0x1, unprogrammed default
   711  30000B                     	org	3145739
   712  30000B  E0                 	db	224
   713                           
   714                           ;Config register CONFIG7L @ 0x30000C
   715                           ;	unspecified, using default values
   716                           ;	Table Read Protection bit
   717                           ;	EBTR0 = 0x1, unprogrammed default
   718                           ;	Table Read Protection bit
   719                           ;	EBTR1 = 0x1, unprogrammed default
   720                           ;	Table Read Protection bit
   721                           ;	EBTR2 = 0x1, unprogrammed default
   722                           ;	Table Read Protection bit
   723                           ;	EBTR3 = 0x1, unprogrammed default
   724  30000C                     	org	3145740
   725  30000C  0F                 	db	15
   726                           
   727                           ;Config register CONFIG7H @ 0x30000D
   728                           ;	unspecified, using default values
   729                           ;	Boot Block Table Read Protection bit
   730                           ;	EBTRB = 0x1, unprogrammed default
   731  30000D                     	org	3145741
   732  30000D  40                 	db	64
   733                           tosu	equ	0xFFF
   734                           tosh	equ	0xFFE
   735                           tosl	equ	0xFFD
   736                           stkptr	equ	0xFFC
   737                           pclatu	equ	0xFFB
   738                           pclath	equ	0xFFA
   739                           pcl	equ	0xFF9
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           prodh	equ	0xFF4
   745                           prodl	equ	0xFF3
   746                           indf0	equ	0xFEF
   747                           postinc0	equ	0xFEE
   748                           postdec0	equ	0xFED
   749                           preinc0	equ	0xFEC
   750                           plusw0	equ	0xFEB
   751                           fsr0h	equ	0xFEA
   752                           fsr0l	equ	0xFE9
   753                           wreg	equ	0xFE8
   754                           indf1	equ	0xFE7
   755                           postinc1	equ	0xFE6
   756                           postdec1	equ	0xFE5
   757                           preinc1	equ	0xFE4
   758                           plusw1	equ	0xFE3
   759                           fsr1h	equ	0xFE2
   760                           fsr1l	equ	0xFE1
   761                           bsr	equ	0xFE0
   762                           indf2	equ	0xFDF
   763                           postinc2	equ	0xFDE
   764                           postdec2	equ	0xFDD
   765                           preinc2	equ	0xFDC
   766                           plusw2	equ	0xFDB
   767                           fsr2h	equ	0xFDA
   768                           fsr2l	equ	0xFD9
   769                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1119
                                              8 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      C       C       1       12.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Sep 02 13:05:05 2020

                     l31 7EAE                       l32 7F32             ___awdiv@sign 0006  
                    l270 7FFE                      l283 7E78                      l820 7F40  
                    l900 7E82                      l830 7F70                      l822 7F4E  
                    l910 7EAC                      l902 7E8C                      l840 7F9E  
                    l832 7F74                      l824 7F56                      l920 7F10  
                    l912 7EB2                      l904 7E8E                      l850 7FD2  
                    l842 7FAC                      l834 7F7C                      l826 7F5A  
                    l818 7F3C                      l922 7F2C                      l914 7EB4  
                    l906 7E94                      l852 7FD8                      l844 7FB2  
                    l836 7F8E                      l828 7F68                      l916 7ED2  
                    l908 7E9A                      l846 7FC8                      l838 7F96  
                    l854 7FDE                      l870 7DE8                      l862 7DCA  
                    l918 7ED6                      l856 7FEE                      l848 7FD0  
                    l880 7E20                      l872 7DF6                      l864 7DCE  
                    l858 7FF6                      l882 7E2E                      l890 7E58  
                    l874 7DFE                      l866 7DDC                      l892 7E68  
                    l884 7E44                      l876 7E10                      l868 7DE4  
                    l894 7E70                      l886 7E4C                      l878 7E18  
                    l888 7E52                      l898 7E7A                      u200 7DDC  
                    u201 7DD8                      u210 7DF6                      u211 7DF2  
                    u140 7F4E                      u220 7E10                      u141 7F4A  
                    u221 7E0C                      u150 7F68                      u230 7E2E  
                    u151 7F64                      u231 7E2A                      u160 7F8E  
                    u240 7E44                      u161 7F8A                      u241 7E40  
                    u170 7FAC                      u250 7E68                      u171 7FA8  
                    u251 7E64                      u180 7FC8                      u260 7F2C  
                    u181 7FC4                      u261 7F28                      u190 7FEE  
                    u191 7FEA             ___awmod@sign 0006                     _main 7E7A  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000                    ?_main 0001          __end_of___awdiv 8000  
        __end_of___awmod 7E7A          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _PORTB 000F81                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISD 000F95                    status 000FD8          __initialization 7DC4  
           __end_of_main 7F3C                   ??_main 0009            __activetblptr 000000  
                 _ADCON1 000FC1                   _ADRESH 000FC4         ___awdiv@dividend 0001  
              ??___awdiv 0005                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005               __accesstop 0060  
__end_of__initialization 7DC4            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7F3C  
                ___awmod 7DCA                  __pcinit 7DC4                  __ramtop 0800  
                __ptext0 7E7A                  __ptext1 7DCA                  __ptext2 7F3C  
       ___awmod@dividend 0001     end_of_initialization 7DC4                _PORTAbits 000F80  
              _PORTEbits 000F84                _TRISAbits 000F92                _TRISEbits 000F96  
    start_initialization 7DC4                 ?___awdiv 0001                 ?___awmod 0001  
             _ADCON0bits 000FC2               _ADCON2bits 000FC0                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 00C4         __size_of___awmod 00B0  
          __size_of_main 00C2                 main@conv 000B               _OSCCONbits 000FD3  
