

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Oct 12 18:15:29 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataBANK0
    82  001B06                     __pidataBANK0:
    83                           	callstack 0
    84                           
    85                           ;initializer for main@F3532
    86  001B06  0006               	dw	6
    87  001B08  0000               	dw	0
    88  001B0A  0008               	dw	8
    89  001B0C  0007               	dw	7
    90                           
    91                           ;initializer for main@F3530
    92  001B0E  000A               	dw	10
    93  001B10  000A               	dw	10
    94  001B12  000A               	dw	10
    95  001B14  000A               	dw	10
    96  0000                     _PORTB	set	3969
    97  0000                     _TRISB	set	3987
    98  0000                     _ADCON1	set	4033
    99  0000                     _OSCCONbits	set	4051
   100  0000                     _INTCON3bits	set	4080
   101  0000                     _INTCON2bits	set	4081
   102  0000                     _INTCONbits	set	4082
   103  0000                     _LATC	set	3979
   104  0000                     _LATEbits	set	3981
   105  0000                     _TRISC	set	3988
   106  0000                     _TRISEbits	set	3990
   107                           
   108                           	psect	smallconst
   109  000800                     __psmallconst:
   110                           	callstack 0
   111  000800  00                 	db	0
   112  000801                     STR_1:
   113  000801  41                 	db	65	;'A'
   114  000802  6C                 	db	108	;'l'
   115  000803  65                 	db	101	;'e'
   116  000804  61                 	db	97	;'a'
   117  000805  74                 	db	116	;'t'
   118  000806  6F                 	db	111	;'o'
   119  000807  72                 	db	114	;'r'
   120  000808  69                 	db	105	;'i'
   121  000809  6F                 	db	111	;'o'
   122  00080A  00                 	db	0
   123  00080B                     STR_3:
   124  00080B  65                 	db	101	;'e'
   125  00080C  73                 	db	115	;'s'
   126  00080D  3A                 	db	58	;':'
   127  00080E  20                 	db	32
   128  00080F  00                 	db	0
   129  000810                     STR_2:
   130  000810  25                 	db	37
   131  000811  69                 	db	105	;'i'
   132  000812  00                 	db	0
   133  000813  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           ; #config settings
   136                           
   137                           	psect	cinit
   138  001992                     __pcinit:
   139                           	callstack 0
   140  001992                     start_initialization:
   141                           	callstack 0
   142  001992                     __initialization:
   143                           	callstack 0
   144                           
   145                           ; Initialize objects allocated to BANK0 (16 bytes)
   146                           ; load TBLPTR registers with __pidataBANK0
   147  001992  0E06               	movlw	low __pidataBANK0
   148  001994  6EF6               	movwf	tblptrl,c
   149  001996  0E1B               	movlw	high __pidataBANK0
   150  001998  6EF7               	movwf	tblptrh,c
   151  00199A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   152  00199C  6EF8               	movwf	tblptru,c
   153  00199E  EE00  F0C4         	lfsr	0,__pdataBANK0
   154  0019A2  EE10 F010          	lfsr	1,16
   155  0019A6                     copy_data0:
   156  0019A6  0009               	tblrd		*+
   157  0019A8  CFF5 FFEE          	movff	tablat,postinc0
   158  0019AC  50E5               	movf	postdec1,w,c
   159  0019AE  50E1               	movf	fsr1l,w,c
   160  0019B0  E1FA               	bnz	copy_data0
   161                           
   162                           ; Clear objects allocated to BANK0 (50 bytes)
   163  0019B2  EE00  F060         	lfsr	0,__pbssBANK0
   164  0019B6  0E32               	movlw	50
   165  0019B8                     clear_0:
   166  0019B8  6AEE               	clrf	postinc0,c
   167  0019BA  06E8               	decf	wreg,f,c
   168  0019BC  E1FD               	bnz	clear_0
   169  0019BE                     end_of_initialization:
   170                           	callstack 0
   171  0019BE                     __end_of__initialization:
   172                           	callstack 0
   173  0019BE  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   174  0019C0  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   175  0019C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   176  0019C4  6EF8               	movwf	tblptru,c
   177  0019C6  0100               	movlb	0
   178  0019C8  EF0A  F004         	goto	_main	;jump to C main() function
   179                           
   180                           	psect	bssBANK0
   181  000060                     __pbssBANK0:
   182                           	callstack 0
   183  000060                     _nout:
   184                           	callstack 0
   185  000060                     	ds	2
   186  000062                     _width:
   187                           	callstack 0
   188  000062                     	ds	2
   189  000064                     _prec:
   190                           	callstack 0
   191  000064                     	ds	2
   192  000066                     _flags:
   193                           	callstack 0
   194  000066                     	ds	2
   195  000068                     _flag:
   196                           	callstack 0
   197  000068                     	ds	2
   198  00006A                     _dbuf:
   199                           	callstack 0
   200  00006A                     	ds	32
   201  00008A                     _seed:
   202                           	callstack 0
   203  00008A                     	ds	8
   204                           
   205                           	psect	dataBANK0
   206  0000C4                     __pdataBANK0:
   207                           	callstack 0
   208  0000C4                     main@F3532:
   209                           	callstack 0
   210  0000C4                     	ds	8
   211  0000CC                     main@F3530:
   212                           	callstack 0
   213  0000CC                     	ds	8
   214                           
   215                           	psect	cstackBANK0
   216  000092                     __pcstackBANK0:
   217                           	callstack 0
   218  000092                     	ds	2
   219  000094                     sprintf@ap:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x2
   223  000094                     	ds	2
   224  000096                     sprintf@f:
   225                           	callstack 0
   226                           
   227                           ; 6 bytes @ 0x4
   228  000096                     	ds	6
   229  00009C                     ??_main:
   230                           
   231                           ; 1 bytes @ 0xA
   232  00009C                     	ds	4
   233  0000A0                     main@unum:
   234                           	callstack 0
   235                           
   236                           ; 8 bytes @ 0xE
   237  0000A0                     	ds	8
   238  0000A8                     main@picas:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x16
   242  0000A8                     	ds	2
   243  0000AA                     main@fijas:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x18
   247  0000AA                     	ds	2
   248  0000AC                     main@str:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0x1A
   252  0000AC                     	ds	4
   253  0000B0                     main@rnum:
   254                           	callstack 0
   255                           
   256                           ; 8 bytes @ 0x1E
   257  0000B0                     	ds	8
   258  0000B8                     main@i_355:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x26
   262  0000B8                     	ds	2
   263  0000BA                     main@i:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x28
   267  0000BA                     	ds	2
   268  0000BC                     main@i_357:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x2A
   272  0000BC                     	ds	2
   273  0000BE                     main@x:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x2C
   277  0000BE                     	ds	2
   278  0000C0                     main@i_359:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x2E
   282  0000C0                     	ds	2
   283  0000C2                     main@j:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x30
   287  0000C2                     	ds	2
   288                           
   289                           	psect	cstackCOMRAM
   290  000001                     __pcstackCOMRAM:
   291                           	callstack 0
   292  000001                     ??_lcd_control:
   293  000001                     ??_lcd_dato:
   294  000001                     ?_strlen:
   295                           	callstack 0
   296  000001                     ?___omul:
   297                           	callstack 0
   298  000001                     ?___aodiv:
   299                           	callstack 0
   300  000001                     ?___aomod:
   301                           	callstack 0
   302  000001                     fputc@c:
   303                           	callstack 0
   304  000001                     strlen@s:
   305                           	callstack 0
   306  000001                     ___omul@multiplier:
   307                           	callstack 0
   308  000001                     ___aodiv@dividend:
   309                           	callstack 0
   310  000001                     ___aomod@dividend:
   311                           	callstack 0
   312                           
   313                           ; 8 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     lcd_control@dato:
   316                           	callstack 0
   317  000002                     lcd_dato@dato:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  000002                     	ds	1
   322  000003                     ??_lcd_init:
   323  000003                     lcd_print@dato:
   324                           	callstack 0
   325  000003                     fputc@fp:
   326                           	callstack 0
   327  000003                     strlen@a:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x2
   331  000003                     	ds	2
   332  000005                     ??_fputc:
   333  000005                     lcd_print_with_position@x:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x4
   337  000005                     	ds	2
   338  000007                     lcd_print_with_position@y:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x6
   342  000007                     	ds	2
   343  000009                     lcd_print_with_position@dato:
   344                           	callstack 0
   345  000009                     ___omul@multiplicand:
   346                           	callstack 0
   347  000009                     ___aodiv@divisor:
   348                           	callstack 0
   349  000009                     ___aomod@divisor:
   350                           	callstack 0
   351                           
   352                           ; 8 bytes @ 0x8
   353  000009                     	ds	1
   354  00000A                     fputs@s:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x9
   358  00000A                     	ds	1
   359  00000B                     ??_lcd_print_with_position:
   360                           
   361                           ; 1 bytes @ 0xA
   362  00000B                     	ds	1
   363  00000C                     fputs@fp:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xB
   367  00000C                     	ds	1
   368  00000D                     lcd_print_with_position@posicion:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0xC
   372  00000D                     	ds	1
   373  00000E                     fputs@c:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0xD
   377  00000E                     	ds	1
   378  00000F                     fputs@i:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0xE
   382  00000F                     	ds	2
   383  000011                     ?_pad:
   384                           	callstack 0
   385  000011                     ___aodiv@counter:
   386                           	callstack 0
   387  000011                     ___aomod@counter:
   388                           	callstack 0
   389  000011                     pad@fp:
   390                           	callstack 0
   391  000011                     ___omul@product:
   392                           	callstack 0
   393                           
   394                           ; 8 bytes @ 0x10
   395  000011                     	ds	1
   396  000012                     ___aodiv@sign:
   397                           	callstack 0
   398  000012                     ___aomod@sign:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x11
   402  000012                     	ds	1
   403  000013                     ?_abs:
   404                           	callstack 0
   405  000013                     pad@buf:
   406                           	callstack 0
   407  000013                     abs@a:
   408                           	callstack 0
   409  000013                     ___aodiv@quotient:
   410                           	callstack 0
   411                           
   412                           ; 8 bytes @ 0x12
   413  000013                     	ds	2
   414  000015                     ??_abs:
   415  000015                     pad@p:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x14
   419  000015                     	ds	2
   420  000017                     ??_pad:
   421                           
   422                           ; 1 bytes @ 0x16
   423  000017                     	ds	1
   424  000018                     pad@i:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x17
   428  000018                     	ds	1
   429  000019                     ?_rand:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x18
   433  000019                     	ds	1
   434  00001A                     pad@w:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x19
   438  00001A                     	ds	1
   439  00001B                     ??_rand:
   440                           
   441                           ; 1 bytes @ 0x1A
   442  00001B                     	ds	1
   443  00001C                     ?_dtoa:
   444                           	callstack 0
   445  00001C                     dtoa@fp:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x1B
   449  00001C                     	ds	2
   450  00001E                     dtoa@d:
   451                           	callstack 0
   452                           
   453                           ; 8 bytes @ 0x1D
   454  00001E                     	ds	5
   455  000023                     ?___awmod:
   456                           	callstack 0
   457  000023                     ___awmod@dividend:
   458                           	callstack 0
   459  000023                     srand@s:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x22
   463  000023                     	ds	2
   464  000025                     ??_srand:
   465  000025                     ___awmod@divisor:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x24
   469  000025                     	ds	1
   470  000026                     ??_dtoa:
   471                           
   472                           ; 1 bytes @ 0x25
   473  000026                     	ds	1
   474  000027                     ___awmod@counter:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x26
   478  000027                     	ds	1
   479  000028                     ___awmod@sign:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x27
   483  000028                     	ds	6
   484  00002E                     _dtoa$878:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x2D
   488  00002E                     	ds	2
   489  000030                     dtoa@p:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x2F
   493  000030                     	ds	2
   494  000032                     dtoa@w:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x31
   498  000032                     	ds	2
   499  000034                     dtoa@s:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x33
   503  000034                     	ds	2
   504  000036                     dtoa@n:
   505                           	callstack 0
   506                           
   507                           ; 8 bytes @ 0x35
   508  000036                     	ds	8
   509  00003E                     dtoa@i:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x3D
   513  00003E                     	ds	2
   514  000040                     ?_vfpfcnvrt:
   515                           	callstack 0
   516  000040                     vfpfcnvrt@fp:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x3F
   520  000040                     	ds	2
   521  000042                     vfpfcnvrt@fmt:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x41
   525  000042                     	ds	2
   526  000044                     vfpfcnvrt@ap:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x43
   530  000044                     	ds	2
   531  000046                     ??_vfpfcnvrt:
   532                           
   533                           ; 1 bytes @ 0x45
   534  000046                     	ds	2
   535  000048                     vfpfcnvrt@ll:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x47
   539  000048                     	ds	8
   540  000050                     ?_vfprintf:
   541                           	callstack 0
   542  000050                     vfprintf@fp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x4F
   546  000050                     	ds	2
   547  000052                     vfprintf@fmt:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x51
   551  000052                     	ds	2
   552  000054                     vfprintf@ap:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x53
   556  000054                     	ds	2
   557  000056                     vfprintf@cfmt:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x55
   561  000056                     	ds	2
   562  000058                     ?_sprintf:
   563                           	callstack 0
   564  000058                     sprintf@s:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x57
   568  000058                     	ds	2
   569  00005A                     sprintf@fmt:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x59
   573  00005A                     	ds	4
   574  00005E                     
   575                           ; 1 bytes @ 0x5D
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 39 in file "newmain.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  j               2   48[BANK0 ] int 
   586 ;;  x               2   44[BANK0 ] int 
   587 ;;  i               2   46[BANK0 ] int 
   588 ;;  i               2   42[BANK0 ] int 
   589 ;;  i               2   38[BANK0 ] int 
   590 ;;  fijas           2   24[BANK0 ] int 
   591 ;;  picas           2   22[BANK0 ] int 
   592 ;;  i               2   40[BANK0 ] int 
   593 ;;  rnum            8   30[BANK0 ] int [4]
   594 ;;  unum            8   14[BANK0 ] int [4]
   595 ;;  str             4   26[BANK0 ] unsigned char [4]
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   605 ;;      Params:         0       0       0       0       0       0       0       0       0
   606 ;;      Locals:         0      36       0       0       0       0       0       0       0
   607 ;;      Temps:          0       4       0       0       0       0       0       0       0
   608 ;;      Totals:         0      40       0       0       0       0       0       0       0
   609 ;;Total ram usage:       40 bytes
   610 ;; Hardware stack levels required when called:    9
   611 ;; This function calls:
   612 ;;		_ExtInt_Init
   613 ;;		_Port_Init
   614 ;;		___awmod
   615 ;;		_lcd_clear_display
   616 ;;		_lcd_init
   617 ;;		_lcd_print
   618 ;;		_lcd_print_with_position
   619 ;;		_rand
   620 ;;		_sprintf
   621 ;;		_srand
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text0
   628  000814                     __ptext0:
   629                           	callstack 0
   630  000814                     _main:
   631                           	callstack 22
   632  000814                     
   633                           ;newmain.c: 40:     int rnum[4]={10,10,10,10};
   634  000814  EE20  F0CC         	lfsr	2,main@F3530
   635  000818  EE10  F0B0         	lfsr	1,main@rnum
   636  00081C  0E07               	movlw	7
   637  00081E                     u1361:
   638  00081E  CFDB FFE3          	movff	plusw2,plusw1
   639  000822  06E8               	decf	wreg,f,c
   640  000824  E2FC               	bc	u1361
   641                           
   642                           ;newmain.c: 41:     int unum[4]={6,0,8,7};
   643  000826  EE20  F0C4         	lfsr	2,main@F3532
   644  00082A  EE10  F0A0         	lfsr	1,main@unum
   645  00082E  0E07               	movlw	7
   646  000830                     u1371:
   647  000830  CFDB FFE3          	movff	plusw2,plusw1
   648  000834  06E8               	decf	wreg,f,c
   649  000836  E2FC               	bc	u1371
   650  000838                     
   651                           ;newmain.c: 42:     char str[4];;newmain.c: 43:     ExtInt_Init();
   652  000838  EC63  F00D         	call	_ExtInt_Init	;wreg free
   653  00083C                     
   654                           ;newmain.c: 44:     Port_Init();
   655  00083C  EC7A  F00D         	call	_Port_Init	;wreg free
   656  000840                     
   657                           ;newmain.c: 45:     lcd_init();
   658  000840  ECE6  F00C         	call	_lcd_init	;wreg free
   659  000844                     
   660                           ;newmain.c: 46:     lcd_clear_display();
   661  000844  EC8B  F00D         	call	_lcd_clear_display	;wreg free
   662  000848                     
   663                           ;newmain.c: 47:     lcd_print("Aleatorio");
   664  000848  0E01               	movlw	low STR_1
   665  00084A  6E03               	movwf	lcd_print@dato^0,c
   666  00084C  0E08               	movlw	high STR_1
   667  00084E  6E04               	movwf	(lcd_print@dato+1)^0,c
   668  000850  ECE1  F00B         	call	_lcd_print	;wreg free
   669  000854                     
   670                           ;newmain.c: 48:     lcd_clear_display();
   671  000854  EC8B  F00D         	call	_lcd_clear_display	;wreg free
   672  000858                     
   673                           ;newmain.c: 49:     for(int i=5;i<9;i++){
   674  000858  0E00               	movlw	0
   675  00085A  0100               	movlb	0	; () banked
   676  00085C  6FBB               	movwf	(main@i+1)& (0+255),b
   677  00085E  0E05               	movlw	5
   678  000860  6FBA               	movwf	main@i& (0+255),b
   679  000862                     l1970:
   680                           
   681                           ; BSR set to: 0
   682                           ;newmain.c: 50:             sprintf(str,"%i",unum[i-5]);
   683  000862  0EAC               	movlw	low main@str
   684  000864  6E58               	movwf	sprintf@s^0,c
   685  000866  0E00               	movlw	high main@str
   686  000868  6E59               	movwf	(sprintf@s+1)^0,c
   687  00086A  0E10               	movlw	low STR_2
   688  00086C  6E5A               	movwf	sprintf@fmt^0,c
   689  00086E  0E08               	movlw	high STR_2
   690  000870  6E5B               	movwf	(sprintf@fmt+1)^0,c
   691  000872  0EF6               	movlw	246
   692  000874  6F9C               	movwf	??_main& (0+255),b
   693  000876  0EFF               	movlw	255
   694  000878  6F9D               	movwf	(??_main+1)& (0+255),b
   695  00087A  C0BA  F09E         	movff	main@i,??_main+2
   696  00087E  C0BB  F09F         	movff	main@i+1,??_main+3
   697  000882  90D8               	bcf	status,0,c
   698  000884  379E               	rlcf	(??_main+2)& (0+255),f,b
   699  000886  379F               	rlcf	(??_main+3)& (0+255),f,b
   700  000888  519C               	movf	??_main& (0+255),w,b
   701  00088A  279E               	addwf	(??_main+2)& (0+255),f,b
   702  00088C  519D               	movf	(??_main+1)& (0+255),w,b
   703  00088E  239F               	addwfc	(??_main+3)& (0+255),f,b
   704  000890  0EA0               	movlw	low main@unum
   705  000892  259E               	addwf	(??_main+2)& (0+255),w,b
   706  000894  6ED9               	movwf	fsr2l,c
   707  000896  0E00               	movlw	high main@unum
   708  000898  219F               	addwfc	(??_main+3)& (0+255),w,b
   709  00089A  6EDA               	movwf	fsr2h,c
   710  00089C  CFDE F05C          	movff	postinc2,?_sprintf+4
   711  0008A0  CFDD F05D          	movff	postdec2,?_sprintf+5
   712  0008A4  EC3C  F00C         	call	_sprintf	;wreg free
   713  0008A8                     
   714                           ;newmain.c: 51:             lcd_print_with_position(i,1,str);
   715  0008A8  C0BA  F005         	movff	main@i,lcd_print_with_position@x
   716  0008AC  C0BB  F006         	movff	main@i+1,lcd_print_with_position@x+1
   717  0008B0  0E00               	movlw	0
   718  0008B2  6E08               	movwf	(lcd_print_with_position@y+1)^0,c
   719  0008B4  0E01               	movlw	1
   720  0008B6  6E07               	movwf	lcd_print_with_position@y^0,c
   721  0008B8  0EAC               	movlw	low main@str
   722  0008BA  6E09               	movwf	lcd_print_with_position@dato^0,c
   723  0008BC  0E00               	movlw	high main@str
   724  0008BE  6E0A               	movwf	(lcd_print_with_position@dato+1)^0,c
   725  0008C0  EC10  F00C         	call	_lcd_print_with_position	;wreg free
   726  0008C4                     
   727                           ;newmain.c: 53:     }
   728  0008C4  0100               	movlb	0	; () banked
   729  0008C6  4BBA               	infsnz	main@i& (0+255),f,b
   730  0008C8  2BBB               	incf	(main@i+1)& (0+255),f,b
   731  0008CA                     
   732                           ; BSR set to: 0
   733  0008CA  BFBB               	btfsc	(main@i+1)& (0+255),7,b
   734  0008CC  EF71  F004         	goto	u1381
   735  0008D0  51BB               	movf	(main@i+1)& (0+255),w,b
   736  0008D2  E109               	bnz	u1380
   737  0008D4  0E09               	movlw	9
   738  0008D6  5DBA               	subwf	main@i& (0+255),w,b
   739  0008D8  A0D8               	btfss	status,0,c
   740  0008DA  EF71  F004         	goto	u1381
   741  0008DE  EF73  F004         	goto	u1380
   742  0008E2                     u1381:
   743  0008E2  EF31  F004         	goto	l1970
   744  0008E6                     u1380:
   745  0008E6                     
   746                           ; BSR set to: 0
   747                           ;newmain.c: 54:     lcd_print_with_position(0,2,"es: ");
   748  0008E6  0E00               	movlw	0
   749  0008E8  6E06               	movwf	(lcd_print_with_position@x+1)^0,c
   750  0008EA  0E00               	movlw	0
   751  0008EC  6E05               	movwf	lcd_print_with_position@x^0,c
   752  0008EE  0E00               	movlw	0
   753  0008F0  6E08               	movwf	(lcd_print_with_position@y+1)^0,c
   754  0008F2  0E02               	movlw	2
   755  0008F4  6E07               	movwf	lcd_print_with_position@y^0,c
   756  0008F6  0E0B               	movlw	low STR_3
   757  0008F8  6E09               	movwf	lcd_print_with_position@dato^0,c
   758  0008FA  0E08               	movlw	high STR_3
   759  0008FC  6E0A               	movwf	(lcd_print_with_position@dato+1)^0,c
   760  0008FE  EC10  F00C         	call	_lcd_print_with_position	;wreg free
   761  000902                     l1980:
   762                           
   763                           ;newmain.c: 57:         int picas=0;
   764  000902  0E00               	movlw	0
   765  000904  0100               	movlb	0	; () banked
   766  000906  6FA9               	movwf	(main@picas+1)& (0+255),b
   767  000908  0E00               	movlw	0
   768  00090A  6FA8               	movwf	main@picas& (0+255),b
   769  00090C                     
   770                           ; BSR set to: 0
   771                           ;newmain.c: 58:         int fijas=0;
   772  00090C  0E00               	movlw	0
   773  00090E  6FAB               	movwf	(main@fijas+1)& (0+255),b
   774  000910  0E00               	movlw	0
   775  000912  6FAA               	movwf	main@fijas& (0+255),b
   776  000914                     
   777                           ; BSR set to: 0
   778                           ;newmain.c: 59:         srand(rand());
   779  000914  ECD2  F009         	call	_rand	;wreg free
   780  000918  C019  F023         	movff	?_rand,srand@s
   781  00091C  C01A  F024         	movff	?_rand+1,srand@s+1
   782  000920  EC36  F00D         	call	_srand	;wreg free
   783  000924                     
   784                           ;newmain.c: 60:         for(int i=0;i<4;i++){
   785  000924  0E00               	movlw	0
   786  000926  0100               	movlb	0	; () banked
   787  000928  6FB9               	movwf	(main@i_355+1)& (0+255),b
   788  00092A  0E00               	movlw	0
   789  00092C  6FB8               	movwf	main@i_355& (0+255),b
   790  00092E                     l1992:
   791                           
   792                           ; BSR set to: 0
   793                           ;newmain.c: 61:             int x=rand()%10;
   794  00092E  ECD2  F009         	call	_rand	;wreg free
   795  000932  C019  F023         	movff	?_rand,___awmod@dividend
   796  000936  C01A  F024         	movff	?_rand+1,___awmod@dividend+1
   797  00093A  0E00               	movlw	0
   798  00093C  6E26               	movwf	(___awmod@divisor+1)^0,c
   799  00093E  0E0A               	movlw	10
   800  000940  6E25               	movwf	___awmod@divisor^0,c
   801  000942  EC09  F00B         	call	___awmod	;wreg free
   802  000946  C023  F0BE         	movff	?___awmod,main@x
   803  00094A  C024  F0BF         	movff	?___awmod+1,main@x+1
   804  00094E                     
   805                           ;newmain.c: 62:             while((x==rnum[0])||(x==rnum[1])||(x==rnum[2])||(x==rnum[3])
      +                          ){
   806  00094E  0100               	movlb	0	; () banked
   807  000950  51BE               	movf	main@x& (0+255),w,b
   808  000952  19B0               	xorwf	main@rnum& (0+255),w,b
   809  000954  E109               	bnz	u1390
   810  000956  51BF               	movf	(main@x+1)& (0+255),w,b
   811  000958  19B1               	xorwf	(main@rnum+1)& (0+255),w,b
   812  00095A  B4D8               	btfsc	status,2,c
   813  00095C  EFB2  F004         	goto	u1391
   814  000960  EFB4  F004         	goto	u1390
   815  000964                     u1391:
   816  000964  EF97  F004         	goto	l1992
   817  000968                     u1390:
   818  000968                     
   819                           ; BSR set to: 0
   820  000968  51BE               	movf	main@x& (0+255),w,b
   821  00096A  19B2               	xorwf	(main@rnum+2)& (0+255),w,b
   822  00096C  E109               	bnz	u1400
   823  00096E  51BF               	movf	(main@x+1)& (0+255),w,b
   824  000970  19B3               	xorwf	(main@rnum+3)& (0+255),w,b
   825  000972  B4D8               	btfsc	status,2,c
   826  000974  EFBE  F004         	goto	u1401
   827  000978  EFC0  F004         	goto	u1400
   828  00097C                     u1401:
   829  00097C  EF97  F004         	goto	l1992
   830  000980                     u1400:
   831  000980                     
   832                           ; BSR set to: 0
   833  000980  51BE               	movf	main@x& (0+255),w,b
   834  000982  19B4               	xorwf	(main@rnum+4)& (0+255),w,b
   835  000984  E109               	bnz	u1410
   836  000986  51BF               	movf	(main@x+1)& (0+255),w,b
   837  000988  19B5               	xorwf	(main@rnum+5)& (0+255),w,b
   838  00098A  B4D8               	btfsc	status,2,c
   839  00098C  EFCA  F004         	goto	u1411
   840  000990  EFCC  F004         	goto	u1410
   841  000994                     u1411:
   842  000994  EF97  F004         	goto	l1992
   843  000998                     u1410:
   844  000998                     
   845                           ; BSR set to: 0
   846  000998  51BE               	movf	main@x& (0+255),w,b
   847  00099A  19B6               	xorwf	(main@rnum+6)& (0+255),w,b
   848  00099C  E109               	bnz	u1420
   849  00099E  51BF               	movf	(main@x+1)& (0+255),w,b
   850  0009A0  19B7               	xorwf	(main@rnum+7)& (0+255),w,b
   851  0009A2  B4D8               	btfsc	status,2,c
   852  0009A4  EFD6  F004         	goto	u1421
   853  0009A8  EFD8  F004         	goto	u1420
   854  0009AC                     u1421:
   855  0009AC  EF97  F004         	goto	l1992
   856  0009B0                     u1420:
   857  0009B0                     
   858                           ; BSR set to: 0
   859                           ;newmain.c: 65:             rnum[i]=x;
   860  0009B0  90D8               	bcf	status,0,c
   861  0009B2  35B8               	rlcf	main@i_355& (0+255),w,b
   862  0009B4  6ED9               	movwf	fsr2l,c
   863  0009B6  35B9               	rlcf	(main@i_355+1)& (0+255),w,b
   864  0009B8  6EDA               	movwf	fsr2h,c
   865  0009BA  0EB0               	movlw	low main@rnum
   866  0009BC  26D9               	addwf	fsr2l,f,c
   867  0009BE  0E00               	movlw	high main@rnum
   868  0009C0  22DA               	addwfc	fsr2h,f,c
   869  0009C2  C0BE  FFDE         	movff	main@x,postinc2
   870  0009C6  C0BF  FFDD         	movff	main@x+1,postdec2
   871  0009CA                     
   872                           ; BSR set to: 0
   873                           ;newmain.c: 66:         }
   874  0009CA  4BB8               	infsnz	main@i_355& (0+255),f,b
   875  0009CC  2BB9               	incf	(main@i_355+1)& (0+255),f,b
   876  0009CE                     
   877                           ; BSR set to: 0
   878  0009CE  BFB9               	btfsc	(main@i_355+1)& (0+255),7,b
   879  0009D0  EFF3  F004         	goto	u1431
   880  0009D4  51B9               	movf	(main@i_355+1)& (0+255),w,b
   881  0009D6  E109               	bnz	u1430
   882  0009D8  0E04               	movlw	4
   883  0009DA  5DB8               	subwf	main@i_355& (0+255),w,b
   884  0009DC  A0D8               	btfss	status,0,c
   885  0009DE  EFF3  F004         	goto	u1431
   886  0009E2  EFF5  F004         	goto	u1430
   887  0009E6                     u1431:
   888  0009E6  EF97  F004         	goto	l1992
   889  0009EA                     u1430:
   890  0009EA                     
   891                           ; BSR set to: 0
   892                           ;newmain.c: 67:         for(int i=5;i<9;i++){
   893  0009EA  0E00               	movlw	0
   894  0009EC  6FBD               	movwf	(main@i_357+1)& (0+255),b
   895  0009EE  0E05               	movlw	5
   896  0009F0  6FBC               	movwf	main@i_357& (0+255),b
   897  0009F2                     l2016:
   898                           
   899                           ; BSR set to: 0
   900                           ;newmain.c: 68:             sprintf(str,"%i",rnum[i-5]);
   901  0009F2  0EAC               	movlw	low main@str
   902  0009F4  6E58               	movwf	sprintf@s^0,c
   903  0009F6  0E00               	movlw	high main@str
   904  0009F8  6E59               	movwf	(sprintf@s+1)^0,c
   905  0009FA  0E10               	movlw	low STR_2
   906  0009FC  6E5A               	movwf	sprintf@fmt^0,c
   907  0009FE  0E08               	movlw	high STR_2
   908  000A00  6E5B               	movwf	(sprintf@fmt+1)^0,c
   909  000A02  0EF6               	movlw	246
   910  000A04  6F9C               	movwf	??_main& (0+255),b
   911  000A06  0EFF               	movlw	255
   912  000A08  6F9D               	movwf	(??_main+1)& (0+255),b
   913  000A0A  C0BC  F09E         	movff	main@i_357,??_main+2
   914  000A0E  C0BD  F09F         	movff	main@i_357+1,??_main+3
   915  000A12  90D8               	bcf	status,0,c
   916  000A14  379E               	rlcf	(??_main+2)& (0+255),f,b
   917  000A16  379F               	rlcf	(??_main+3)& (0+255),f,b
   918  000A18  519C               	movf	??_main& (0+255),w,b
   919  000A1A  279E               	addwf	(??_main+2)& (0+255),f,b
   920  000A1C  519D               	movf	(??_main+1)& (0+255),w,b
   921  000A1E  239F               	addwfc	(??_main+3)& (0+255),f,b
   922  000A20  0EB0               	movlw	low main@rnum
   923  000A22  259E               	addwf	(??_main+2)& (0+255),w,b
   924  000A24  6ED9               	movwf	fsr2l,c
   925  000A26  0E00               	movlw	high main@rnum
   926  000A28  219F               	addwfc	(??_main+3)& (0+255),w,b
   927  000A2A  6EDA               	movwf	fsr2h,c
   928  000A2C  CFDE F05C          	movff	postinc2,?_sprintf+4
   929  000A30  CFDD F05D          	movff	postdec2,?_sprintf+5
   930  000A34  EC3C  F00C         	call	_sprintf	;wreg free
   931  000A38                     
   932                           ;newmain.c: 69:             lcd_print_with_position(i,2,str);
   933  000A38  C0BC  F005         	movff	main@i_357,lcd_print_with_position@x
   934  000A3C  C0BD  F006         	movff	main@i_357+1,lcd_print_with_position@x+1
   935  000A40  0E00               	movlw	0
   936  000A42  6E08               	movwf	(lcd_print_with_position@y+1)^0,c
   937  000A44  0E02               	movlw	2
   938  000A46  6E07               	movwf	lcd_print_with_position@y^0,c
   939  000A48  0EAC               	movlw	low main@str
   940  000A4A  6E09               	movwf	lcd_print_with_position@dato^0,c
   941  000A4C  0E00               	movlw	high main@str
   942  000A4E  6E0A               	movwf	(lcd_print_with_position@dato+1)^0,c
   943  000A50  EC10  F00C         	call	_lcd_print_with_position	;wreg free
   944  000A54                     
   945                           ;newmain.c: 70:             _delay((unsigned long)((1000)*(8000000/4000.0)));
   946  000A54  0E0B               	movlw	11
   947  000A56  0100               	movlb	0	; () banked
   948  000A58  6F9D               	movwf	(??_main+1)& (0+255),b
   949  000A5A  0E26               	movlw	38
   950  000A5C  6F9C               	movwf	??_main& (0+255),b
   951  000A5E  0E5D               	movlw	93
   952  000A60                     u1537:
   953  000A60  2EE8               	decfsz	wreg,f,c
   954  000A62  D7FE               	bra	u1537
   955  000A64  2F9C               	decfsz	??_main& (0+255),f,b
   956  000A66  D7FC               	bra	u1537
   957  000A68  2F9D               	decfsz	(??_main+1)& (0+255),f,b
   958  000A6A  D7FA               	bra	u1537
   959  000A6C  D000               	nop2	
   960  000A6E                     
   961                           ;newmain.c: 71:         }
   962  000A6E  0100               	movlb	0	; () banked
   963  000A70  4BBC               	infsnz	main@i_357& (0+255),f,b
   964  000A72  2BBD               	incf	(main@i_357+1)& (0+255),f,b
   965  000A74                     
   966                           ; BSR set to: 0
   967  000A74  BFBD               	btfsc	(main@i_357+1)& (0+255),7,b
   968  000A76  EF46  F005         	goto	u1441
   969  000A7A  51BD               	movf	(main@i_357+1)& (0+255),w,b
   970  000A7C  E109               	bnz	u1440
   971  000A7E  0E09               	movlw	9
   972  000A80  5DBC               	subwf	main@i_357& (0+255),w,b
   973  000A82  A0D8               	btfss	status,0,c
   974  000A84  EF46  F005         	goto	u1441
   975  000A88  EF48  F005         	goto	u1440
   976  000A8C                     u1441:
   977  000A8C  EFF9  F004         	goto	l2016
   978  000A90                     u1440:
   979  000A90                     
   980                           ; BSR set to: 0
   981                           ;newmain.c: 74:         for(int i=0;i<4;i++){
   982  000A90  0E00               	movlw	0
   983  000A92  6FC1               	movwf	(main@i_359+1)& (0+255),b
   984  000A94  0E00               	movlw	0
   985  000A96  6FC0               	movwf	main@i_359& (0+255),b
   986  000A98                     l2032:
   987                           
   988                           ; BSR set to: 0
   989                           ;newmain.c: 75:             for(int j=0;j<4;j++){
   990  000A98  0E00               	movlw	0
   991  000A9A  6FC3               	movwf	(main@j+1)& (0+255),b
   992  000A9C  0E00               	movlw	0
   993  000A9E  6FC2               	movwf	main@j& (0+255),b
   994  000AA0                     l2038:
   995                           
   996                           ; BSR set to: 0
   997                           ;newmain.c: 76:                 if((i==j)&&(rnum[i]==unum[j])){
   998  000AA0  51C2               	movf	main@j& (0+255),w,b
   999  000AA2  19C0               	xorwf	main@i_359& (0+255),w,b
  1000  000AA4  E107               	bnz	u1451
  1001  000AA6  51C3               	movf	(main@j+1)& (0+255),w,b
  1002  000AA8  19C1               	xorwf	(main@i_359+1)& (0+255),w,b
  1003  000AAA  A4D8               	btfss	status,2,c
  1004  000AAC  EF5A  F005         	goto	u1451
  1005  000AB0  EF5C  F005         	goto	u1450
  1006  000AB4                     u1451:
  1007  000AB4  EF7C  F005         	goto	l2044
  1008  000AB8                     u1450:
  1009  000AB8                     
  1010                           ; BSR set to: 0
  1011  000AB8  90D8               	bcf	status,0,c
  1012  000ABA  35C2               	rlcf	main@j& (0+255),w,b
  1013  000ABC  6ED9               	movwf	fsr2l,c
  1014  000ABE  35C3               	rlcf	(main@j+1)& (0+255),w,b
  1015  000AC0  6EDA               	movwf	fsr2h,c
  1016  000AC2  0EA0               	movlw	low main@unum
  1017  000AC4  26D9               	addwf	fsr2l,f,c
  1018  000AC6  0E00               	movlw	high main@unum
  1019  000AC8  22DA               	addwfc	fsr2h,f,c
  1020  000ACA  90D8               	bcf	status,0,c
  1021  000ACC  35C0               	rlcf	main@i_359& (0+255),w,b
  1022  000ACE  6EE1               	movwf	fsr1l,c
  1023  000AD0  35C1               	rlcf	(main@i_359+1)& (0+255),w,b
  1024  000AD2  6EE2               	movwf	fsr1h,c
  1025  000AD4  0EB0               	movlw	low main@rnum
  1026  000AD6  26E1               	addwf	fsr1l,f,c
  1027  000AD8  0E00               	movlw	high main@rnum
  1028  000ADA  22E2               	addwfc	fsr1h,f,c
  1029  000ADC  50DE               	movf	postinc2,w,c
  1030  000ADE  18E6               	xorwf	postinc1,w,c
  1031  000AE0  E107               	bnz	u1461
  1032  000AE2  50DE               	movf	postinc2,w,c
  1033  000AE4  18E6               	xorwf	postinc1,w,c
  1034  000AE6  A4D8               	btfss	status,2,c
  1035  000AE8  EF78  F005         	goto	u1461
  1036  000AEC  EF7A  F005         	goto	u1460
  1037  000AF0                     u1461:
  1038  000AF0  EF7C  F005         	goto	l2044
  1039  000AF4                     u1460:
  1040  000AF4                     
  1041                           ; BSR set to: 0
  1042                           ;newmain.c: 77:                     fijas++;
  1043  000AF4  4BAA               	infsnz	main@fijas& (0+255),f,b
  1044  000AF6  2BAB               	incf	(main@fijas+1)& (0+255),f,b
  1045  000AF8                     l2044:
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;newmain.c: 79:                 if((i!=j)&&(rnum[i]==unum[j])){
  1049  000AF8  51C2               	movf	main@j& (0+255),w,b
  1050  000AFA  19C0               	xorwf	main@i_359& (0+255),w,b
  1051  000AFC  E109               	bnz	u1470
  1052  000AFE  51C3               	movf	(main@j+1)& (0+255),w,b
  1053  000B00  19C1               	xorwf	(main@i_359+1)& (0+255),w,b
  1054  000B02  B4D8               	btfsc	status,2,c
  1055  000B04  EF86  F005         	goto	u1471
  1056  000B08  EF88  F005         	goto	u1470
  1057  000B0C                     u1471:
  1058  000B0C  EFA8  F005         	goto	l120
  1059  000B10                     u1470:
  1060  000B10                     
  1061                           ; BSR set to: 0
  1062  000B10  90D8               	bcf	status,0,c
  1063  000B12  35C2               	rlcf	main@j& (0+255),w,b
  1064  000B14  6ED9               	movwf	fsr2l,c
  1065  000B16  35C3               	rlcf	(main@j+1)& (0+255),w,b
  1066  000B18  6EDA               	movwf	fsr2h,c
  1067  000B1A  0EA0               	movlw	low main@unum
  1068  000B1C  26D9               	addwf	fsr2l,f,c
  1069  000B1E  0E00               	movlw	high main@unum
  1070  000B20  22DA               	addwfc	fsr2h,f,c
  1071  000B22  90D8               	bcf	status,0,c
  1072  000B24  35C0               	rlcf	main@i_359& (0+255),w,b
  1073  000B26  6EE1               	movwf	fsr1l,c
  1074  000B28  35C1               	rlcf	(main@i_359+1)& (0+255),w,b
  1075  000B2A  6EE2               	movwf	fsr1h,c
  1076  000B2C  0EB0               	movlw	low main@rnum
  1077  000B2E  26E1               	addwf	fsr1l,f,c
  1078  000B30  0E00               	movlw	high main@rnum
  1079  000B32  22E2               	addwfc	fsr1h,f,c
  1080  000B34  50DE               	movf	postinc2,w,c
  1081  000B36  18E6               	xorwf	postinc1,w,c
  1082  000B38  E107               	bnz	u1481
  1083  000B3A  50DE               	movf	postinc2,w,c
  1084  000B3C  18E6               	xorwf	postinc1,w,c
  1085  000B3E  A4D8               	btfss	status,2,c
  1086  000B40  EFA4  F005         	goto	u1481
  1087  000B44  EFA6  F005         	goto	u1480
  1088  000B48                     u1481:
  1089  000B48  EFA8  F005         	goto	l120
  1090  000B4C                     u1480:
  1091  000B4C                     
  1092                           ; BSR set to: 0
  1093                           ;newmain.c: 80:                     picas++;
  1094  000B4C  4BA8               	infsnz	main@picas& (0+255),f,b
  1095  000B4E  2BA9               	incf	(main@picas+1)& (0+255),f,b
  1096  000B50                     l120:
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;newmain.c: 82:             }
  1100  000B50  4BC2               	infsnz	main@j& (0+255),f,b
  1101  000B52  2BC3               	incf	(main@j+1)& (0+255),f,b
  1102  000B54                     
  1103                           ; BSR set to: 0
  1104  000B54  BFC3               	btfsc	(main@j+1)& (0+255),7,b
  1105  000B56  EFB6  F005         	goto	u1491
  1106  000B5A  51C3               	movf	(main@j+1)& (0+255),w,b
  1107  000B5C  E109               	bnz	u1490
  1108  000B5E  0E04               	movlw	4
  1109  000B60  5DC2               	subwf	main@j& (0+255),w,b
  1110  000B62  A0D8               	btfss	status,0,c
  1111  000B64  EFB6  F005         	goto	u1491
  1112  000B68  EFB8  F005         	goto	u1490
  1113  000B6C                     u1491:
  1114  000B6C  EF50  F005         	goto	l2038
  1115  000B70                     u1490:
  1116  000B70                     
  1117                           ; BSR set to: 0
  1118                           ;newmain.c: 83:         }
  1119  000B70  4BC0               	infsnz	main@i_359& (0+255),f,b
  1120  000B72  2BC1               	incf	(main@i_359+1)& (0+255),f,b
  1121  000B74                     
  1122                           ; BSR set to: 0
  1123  000B74  BFC1               	btfsc	(main@i_359+1)& (0+255),7,b
  1124  000B76  EFC6  F005         	goto	u1501
  1125  000B7A  51C1               	movf	(main@i_359+1)& (0+255),w,b
  1126  000B7C  E109               	bnz	u1500
  1127  000B7E  0E04               	movlw	4
  1128  000B80  5DC0               	subwf	main@i_359& (0+255),w,b
  1129  000B82  A0D8               	btfss	status,0,c
  1130  000B84  EFC6  F005         	goto	u1501
  1131  000B88  EFC8  F005         	goto	u1500
  1132  000B8C                     u1501:
  1133  000B8C  EF4C  F005         	goto	l2032
  1134  000B90                     u1500:
  1135  000B90                     
  1136                           ; BSR set to: 0
  1137                           ;newmain.c: 84:         sprintf(str,"%i",fijas);
  1138  000B90  0EAC               	movlw	low main@str
  1139  000B92  6E58               	movwf	sprintf@s^0,c
  1140  000B94  0E00               	movlw	high main@str
  1141  000B96  6E59               	movwf	(sprintf@s+1)^0,c
  1142  000B98  0E10               	movlw	low STR_2
  1143  000B9A  6E5A               	movwf	sprintf@fmt^0,c
  1144  000B9C  0E08               	movlw	high STR_2
  1145  000B9E  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1146  000BA0  C0AA  F05C         	movff	main@fijas,?_sprintf+4
  1147  000BA4  C0AB  F05D         	movff	main@fijas+1,?_sprintf+5
  1148  000BA8  EC3C  F00C         	call	_sprintf	;wreg free
  1149  000BAC                     
  1150                           ;newmain.c: 85:         lcd_print_with_position(0,1,str);
  1151  000BAC  0E00               	movlw	0
  1152  000BAE  6E06               	movwf	(lcd_print_with_position@x+1)^0,c
  1153  000BB0  0E00               	movlw	0
  1154  000BB2  6E05               	movwf	lcd_print_with_position@x^0,c
  1155  000BB4  0E00               	movlw	0
  1156  000BB6  6E08               	movwf	(lcd_print_with_position@y+1)^0,c
  1157  000BB8  0E01               	movlw	1
  1158  000BBA  6E07               	movwf	lcd_print_with_position@y^0,c
  1159  000BBC  0EAC               	movlw	low main@str
  1160  000BBE  6E09               	movwf	lcd_print_with_position@dato^0,c
  1161  000BC0  0E00               	movlw	high main@str
  1162  000BC2  6E0A               	movwf	(lcd_print_with_position@dato+1)^0,c
  1163  000BC4  EC10  F00C         	call	_lcd_print_with_position	;wreg free
  1164  000BC8                     
  1165                           ;newmain.c: 86:         sprintf(str,"%i",picas);
  1166  000BC8  0EAC               	movlw	low main@str
  1167  000BCA  6E58               	movwf	sprintf@s^0,c
  1168  000BCC  0E00               	movlw	high main@str
  1169  000BCE  6E59               	movwf	(sprintf@s+1)^0,c
  1170  000BD0  0E10               	movlw	low STR_2
  1171  000BD2  6E5A               	movwf	sprintf@fmt^0,c
  1172  000BD4  0E08               	movlw	high STR_2
  1173  000BD6  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1174  000BD8  C0A8  F05C         	movff	main@picas,?_sprintf+4
  1175  000BDC  C0A9  F05D         	movff	main@picas+1,?_sprintf+5
  1176  000BE0  EC3C  F00C         	call	_sprintf	;wreg free
  1177                           
  1178                           ;newmain.c: 87:         lcd_print_with_position(3,1,str);
  1179  000BE4  0E00               	movlw	0
  1180  000BE6  6E06               	movwf	(lcd_print_with_position@x+1)^0,c
  1181  000BE8  0E03               	movlw	3
  1182  000BEA  6E05               	movwf	lcd_print_with_position@x^0,c
  1183  000BEC  0E00               	movlw	0
  1184  000BEE  6E08               	movwf	(lcd_print_with_position@y+1)^0,c
  1185  000BF0  0E01               	movlw	1
  1186  000BF2  6E07               	movwf	lcd_print_with_position@y^0,c
  1187  000BF4  0EAC               	movlw	low main@str
  1188  000BF6  6E09               	movwf	lcd_print_with_position@dato^0,c
  1189  000BF8  0E00               	movlw	high main@str
  1190  000BFA  6E0A               	movwf	(lcd_print_with_position@dato+1)^0,c
  1191  000BFC  EC10  F00C         	call	_lcd_print_with_position	;wreg free
  1192  000C00                     
  1193                           ;newmain.c: 88:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1194  000C00  0E15               	movlw	21
  1195  000C02  0100               	movlb	0	; () banked
  1196  000C04  6F9D               	movwf	(??_main+1)& (0+255),b
  1197  000C06  0E4B               	movlw	75
  1198  000C08  6F9C               	movwf	??_main& (0+255),b
  1199  000C0A  0EBE               	movlw	190
  1200  000C0C                     u1547:
  1201  000C0C  2EE8               	decfsz	wreg,f,c
  1202  000C0E  D7FE               	bra	u1547
  1203  000C10  2F9C               	decfsz	??_main& (0+255),f,b
  1204  000C12  D7FC               	bra	u1547
  1205  000C14  2F9D               	decfsz	(??_main+1)& (0+255),f,b
  1206  000C16  D7FA               	bra	u1547
  1207  000C18  F000               	nop	
  1208  000C1A  EF81  F004         	goto	l1980
  1209  000C1E  EF07  F000         	goto	start
  1210  000C22                     __end_of_main:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _srand *****************
  1214 ;; Defined at:
  1215 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\rand.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  s               2   34[COMRAM] unsigned int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1229 ;;      Params:         2       0       0       0       0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1231 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1232 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1233 ;;Total ram usage:        6 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text1
  1244  001A6C                     __ptext1:
  1245                           	callstack 0
  1246  001A6C                     _srand:
  1247                           	callstack 29
  1248  001A6C  0EFF               	movlw	255
  1249  001A6E  6E25               	movwf	??_srand^0,c
  1250  001A70  0EFF               	movlw	255
  1251  001A72  6E26               	movwf	(??_srand+1)^0,c
  1252  001A74  C023  F027         	movff	srand@s,??_srand+2
  1253  001A78  C024  F028         	movff	srand@s+1,??_srand+3
  1254  001A7C  5025               	movf	??_srand^0,w,c
  1255  001A7E  2627               	addwf	(??_srand+2)^0,f,c
  1256  001A80  5026               	movf	(??_srand+1)^0,w,c
  1257  001A82  2228               	addwfc	(??_srand+3)^0,f,c
  1258  001A84  C027  F08A         	movff	??_srand+2,_seed
  1259  001A88  C028  F08B         	movff	??_srand+3,_seed+1
  1260  001A8C  0100               	movlb	0	; () banked
  1261  001A8E  6B8C               	clrf	(_seed+2)& (0+255),b
  1262  001A90  6B8D               	clrf	(_seed+3)& (0+255),b
  1263  001A92  6B8E               	clrf	(_seed+4)& (0+255),b
  1264  001A94  6B8F               	clrf	(_seed+5)& (0+255),b
  1265  001A96  6B90               	clrf	(_seed+6)& (0+255),b
  1266  001A98  6B91               	clrf	(_seed+7)& (0+255),b
  1267  001A9A                     
  1268                           ; BSR set to: 0
  1269  001A9A  0012               	return		;funcret
  1270  001A9C                     __end_of_srand:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _sprintf *****************
  1274 ;; Defined at:
  1275 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  s               2   87[COMRAM] PTR unsigned char 
  1278 ;;		 -> main@str(4), 
  1279 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1280 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_2(3), 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1283 ;;  ap              2    2[BANK0 ] PTR void [1]
  1284 ;;		 -> ?_sprintf(2), 
  1285 ;;  ret             2    0        int 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  2   87[COMRAM] int 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1295 ;;      Params:         6       0       0       0       0       0       0       0       0
  1296 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1298 ;;      Totals:         6      10       0       0       0       0       0       0       0
  1299 ;;Total ram usage:       16 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    8
  1302 ;; This function calls:
  1303 ;;		_vfprintf
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text2
  1310  001878                     __ptext2:
  1311                           	callstack 0
  1312  001878                     _sprintf:
  1313                           	callstack 22
  1314  001878  0E5C               	movlw	low (?_sprintf+4)
  1315  00187A  0100               	movlb	0	; () banked
  1316  00187C  6F94               	movwf	sprintf@ap& (0+255),b
  1317  00187E  0E00               	movlw	high (?_sprintf+4)
  1318  001880  6F95               	movwf	(sprintf@ap+1)& (0+255),b
  1319  001882  C058  F096         	movff	sprintf@s,sprintf@f
  1320  001886  C059  F097         	movff	sprintf@s+1,sprintf@f+1
  1321  00188A                     
  1322                           ; BSR set to: 0
  1323  00188A  0E00               	movlw	0
  1324  00188C  6F99               	movwf	(sprintf@f+3)& (0+255),b
  1325  00188E  0E00               	movlw	0
  1326  001890  6F98               	movwf	(sprintf@f+2)& (0+255),b
  1327  001892                     
  1328                           ; BSR set to: 0
  1329  001892  0E00               	movlw	0
  1330  001894  6F9B               	movwf	(sprintf@f+5)& (0+255),b
  1331  001896  0E00               	movlw	0
  1332  001898  6F9A               	movwf	(sprintf@f+4)& (0+255),b
  1333  00189A                     
  1334                           ; BSR set to: 0
  1335  00189A  0E96               	movlw	low sprintf@f
  1336  00189C  6E50               	movwf	vfprintf@fp^0,c
  1337  00189E  0E00               	movlw	high sprintf@f
  1338  0018A0  6E51               	movwf	(vfprintf@fp+1)^0,c
  1339  0018A2  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1340  0018A6  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1341  0018AA  0E94               	movlw	low sprintf@ap
  1342  0018AC  6E54               	movwf	vfprintf@ap^0,c
  1343  0018AE  0E00               	movlw	high sprintf@ap
  1344  0018B0  6E55               	movwf	(vfprintf@ap+1)^0,c
  1345  0018B2  ECB0  F00B         	call	_vfprintf	;wreg free
  1346  0018B6  0100               	movlb	0	; () banked
  1347  0018B8  5198               	movf	(sprintf@f+2)& (0+255),w,b
  1348  0018BA  2458               	addwf	sprintf@s^0,w,c
  1349  0018BC  6ED9               	movwf	fsr2l,c
  1350  0018BE  5199               	movf	(sprintf@f+3)& (0+255),w,b
  1351  0018C0  2059               	addwfc	(sprintf@s+1)^0,w,c
  1352  0018C2  6EDA               	movwf	fsr2h,c
  1353  0018C4  0E00               	movlw	0
  1354  0018C6  6EDF               	movwf	indf2,c
  1355  0018C8                     
  1356                           ; BSR set to: 0
  1357  0018C8  0012               	return		;funcret
  1358  0018CA                     __end_of_sprintf:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _vfprintf *****************
  1362 ;; Defined at:
  1363 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1366 ;;		 -> sprintf@f(6), 
  1367 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1368 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_2(3), 
  1369 ;;  ap              2   83[COMRAM] PTR PTR void 
  1370 ;;		 -> sprintf@ap(2), 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1373 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_2(3), 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  2   79[COMRAM] int 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1383 ;;      Params:         6       0       0       0       0       0       0       0       0
  1384 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1386 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1387 ;;Total ram usage:        8 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    7
  1390 ;; This function calls:
  1391 ;;		_vfpfcnvrt
  1392 ;; This function is called by:
  1393 ;;		_sprintf
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text3
  1398  001760                     __ptext3:
  1399                           	callstack 0
  1400  001760                     _vfprintf:
  1401                           	callstack 22
  1402  001760                     
  1403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1404  001760  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1405  001764  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1406  001768                     
  1407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1408  001768  0E00               	movlw	0
  1409  00176A  0100               	movlb	0	; () banked
  1410  00176C  6F61               	movwf	(_nout+1)& (0+255),b
  1411  00176E  0E00               	movlw	0
  1412  001770  6F60               	movwf	_nout& (0+255),b
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1415  001772  EFCE  F00B         	goto	l1804
  1416  001776                     l1802:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1420  001776  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1421  00177A  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1422  00177E  0E56               	movlw	low vfprintf@cfmt
  1423  001780  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1424  001782  0E00               	movlw	high vfprintf@cfmt
  1425  001784  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1426  001786  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1427  00178A  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1428  00178E  EC82  F007         	call	_vfpfcnvrt	;wreg free
  1429  001792  5040               	movf	?_vfpfcnvrt^0,w,c
  1430  001794  0100               	movlb	0	; () banked
  1431  001796  2760               	addwf	_nout& (0+255),f,b
  1432  001798  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1433  00179A  2361               	addwfc	(_nout+1)& (0+255),f,b
  1434  00179C                     l1804:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1438  00179C  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1439  0017A0  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1440  0017A4                     	if	0	;tblptru may be non-zero
  1441  0017A4                     	endif
  1442  0017A4                     	if	0	;tblptru may be non-zero
  1443  0017A4                     	endif
  1444  0017A4  0008               	tblrd		*
  1445  0017A6  50F5               	movf	tablat,w,c
  1446  0017A8  0900               	iorlw	0
  1447  0017AA  A4D8               	btfss	status,2,c
  1448  0017AC  EFDA  F00B         	goto	u1261
  1449  0017B0  EFDC  F00B         	goto	u1260
  1450  0017B4                     u1261:
  1451  0017B4  EFBB  F00B         	goto	l1802
  1452  0017B8                     u1260:
  1453  0017B8                     
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1456  0017B8  C060  F050         	movff	_nout,?_vfprintf
  1457  0017BC  C061  F051         	movff	_nout+1,?_vfprintf+1
  1458  0017C0                     
  1459                           ; BSR set to: 0
  1460  0017C0  0012               	return		;funcret
  1461  0017C2                     __end_of_vfprintf:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _vfpfcnvrt *****************
  1465 ;; Defined at:
  1466 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1469 ;;		 -> sprintf@f(6), 
  1470 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1471 ;;		 -> vfprintf@cfmt(2), 
  1472 ;;  ap              2   67[COMRAM] PTR PTR void 
  1473 ;;		 -> sprintf@ap(2), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  ll              8   71[COMRAM] long long 
  1476 ;;  llu             8    0        unsigned long long 
  1477 ;;  f               4    0        unsigned long long 
  1478 ;;  vp              3    0        PTR void 
  1479 ;;  ct              3    0        unsigned char [3]
  1480 ;;  cp              3    0        PTR unsigned char 
  1481 ;;  i               2    0        int 
  1482 ;;  done            2    0        int 
  1483 ;;  c               1    0        unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2   63[COMRAM] int 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1493 ;;      Params:         6       0       0       0       0       0       0       0       0
  1494 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1495 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1496 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1497 ;;Total ram usage:       16 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    6
  1500 ;; This function calls:
  1501 ;;		_dtoa
  1502 ;;		_fputc
  1503 ;; This function is called by:
  1504 ;;		_vfprintf
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text4
  1509  000F04                     __ptext4:
  1510                           	callstack 0
  1511  000F04                     _vfpfcnvrt:
  1512                           	callstack 22
  1513  000F04                     
  1514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1515  000F04  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1516  000F08  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1517  000F0C  CFDE FFF6          	movff	postinc2,tblptrl
  1518  000F10  CFDD FFF7          	movff	postdec2,tblptrh
  1519  000F14                     	if	0	;tblptru may be non-zero
  1520  000F14                     	endif
  1521  000F14                     	if	0	;tblptru may be non-zero
  1522  000F14                     	endif
  1523  000F14  0008               	tblrd		*
  1524  000F16  50F5               	movf	tablat,w,c
  1525  000F18  0A25               	xorlw	37
  1526  000F1A  A4D8               	btfss	status,2,c
  1527  000F1C  EF92  F007         	goto	u1161
  1528  000F20  EF94  F007         	goto	u1160
  1529  000F24                     u1161:
  1530  000F24  EF40  F008         	goto	l1762
  1531  000F28                     u1160:
  1532  000F28                     
  1533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1534  000F28  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1535  000F2C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1536  000F30  2ADE               	incf	postinc2,f,c
  1537  000F32  0E00               	movlw	0
  1538  000F34  22DD               	addwfc	postdec2,f,c
  1539  000F36                     
  1540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1541  000F36  0E00               	movlw	0
  1542  000F38  0100               	movlb	0	; () banked
  1543  000F3A  6F63               	movwf	(_width+1)& (0+255),b
  1544  000F3C  0E00               	movlw	0
  1545  000F3E  6F62               	movwf	_width& (0+255),b
  1546  000F40  C062  F066         	movff	_width,_flags
  1547  000F44  C063  F067         	movff	_width+1,_flags+1
  1548  000F48                     
  1549                           ; BSR set to: 0
  1550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1551  000F48  6964               	setf	_prec& (0+255),b
  1552  000F4A  6965               	setf	(_prec+1)& (0+255),b
  1553  000F4C                     
  1554                           ; BSR set to: 0
  1555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1556  000F4C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1557  000F50  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1558  000F54  CFDE FFF6          	movff	postinc2,tblptrl
  1559  000F58  CFDD FFF7          	movff	postdec2,tblptrh
  1560  000F5C                     	if	0	;tblptru may be non-zero
  1561  000F5C                     	endif
  1562  000F5C                     	if	0	;tblptru may be non-zero
  1563  000F5C                     	endif
  1564  000F5C  0008               	tblrd		*
  1565  000F5E  50F5               	movf	tablat,w,c
  1566  000F60  0A64               	xorlw	100
  1567  000F62  B4D8               	btfsc	status,2,c
  1568  000F64  EFB6  F007         	goto	u1171
  1569  000F68  EFB8  F007         	goto	u1170
  1570  000F6C                     u1171:
  1571  000F6C  EFCA  F007         	goto	l1740
  1572  000F70                     u1170:
  1573  000F70                     
  1574                           ; BSR set to: 0
  1575  000F70  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1576  000F74  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1577  000F78  CFDE FFF6          	movff	postinc2,tblptrl
  1578  000F7C  CFDD FFF7          	movff	postdec2,tblptrh
  1579  000F80                     	if	0	;tblptru may be non-zero
  1580  000F80                     	endif
  1581  000F80                     	if	0	;tblptru may be non-zero
  1582  000F80                     	endif
  1583  000F80  0008               	tblrd		*
  1584  000F82  50F5               	movf	tablat,w,c
  1585  000F84  0A69               	xorlw	105
  1586  000F86  A4D8               	btfss	status,2,c
  1587  000F88  EFC8  F007         	goto	u1181
  1588  000F8C  EFCA  F007         	goto	u1180
  1589  000F90                     u1181:
  1590  000F90  EF0A  F008         	goto	l1746
  1591  000F94                     u1180:
  1592  000F94                     l1740:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  1596  000F94  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1597  000F98  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1598  000F9C  2ADE               	incf	postinc2,f,c
  1599  000F9E  0E00               	movlw	0
  1600  000FA0  22DD               	addwfc	postdec2,f,c
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1603  000FA2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1604  000FA6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1605  000FAA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1606  000FAE  0E02               	movlw	2
  1607  000FB0  26DE               	addwf	postinc2,f,c
  1608  000FB2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1609  000FB6  0E00               	movlw	0
  1610  000FB8  22DD               	addwfc	postdec2,f,c
  1611  000FBA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1612  000FBE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1613  000FC2  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1614  000FC6  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1615  000FCA  0E00               	movlw	0
  1616  000FCC  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1617  000FCE  0EFF               	movlw	-1
  1618  000FD0  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1619  000FD2  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1620  000FD4  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1621  000FD6  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1622  000FD8  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1623  000FDA  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1624  000FDC                     
  1625                           ; BSR set to: 0
  1626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  1627  000FDC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1628  000FE0  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1629  000FE4  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1630  000FE8  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1631  000FEC  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1632  000FF0  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1633  000FF4  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1634  000FF8  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1635  000FFC  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1636  001000  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1637  001004  EC11  F006         	call	_dtoa	;wreg free
  1638  001008  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1639  00100C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1640  001010  EF5B  F008         	goto	l877
  1641  001014                     l1746:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1645  001014  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1646  001018  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1647  00101C  CFDE FFF6          	movff	postinc2,tblptrl
  1648  001020  CFDD FFF7          	movff	postdec2,tblptrh
  1649  001024                     	if	0	;tblptru may be non-zero
  1650  001024                     	endif
  1651  001024                     	if	0	;tblptru may be non-zero
  1652  001024                     	endif
  1653  001024  0008               	tblrd		*
  1654  001026  50F5               	movf	tablat,w,c
  1655  001028  0A25               	xorlw	37
  1656  00102A  A4D8               	btfss	status,2,c
  1657  00102C  EF1A  F008         	goto	u1191
  1658  001030  EF1C  F008         	goto	u1190
  1659  001034                     u1191:
  1660  001034  EF33  F008         	goto	l1756
  1661  001038                     u1190:
  1662  001038                     
  1663                           ; BSR set to: 0
  1664                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1665  001038  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1666  00103C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1667  001040  2ADE               	incf	postinc2,f,c
  1668  001042  0E00               	movlw	0
  1669  001044  22DD               	addwfc	postdec2,f,c
  1670  001046                     
  1671                           ; BSR set to: 0
  1672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1673  001046  0E00               	movlw	0
  1674  001048  6E02               	movwf	(fputc@c+1)^0,c
  1675  00104A  0E25               	movlw	37
  1676  00104C  6E01               	movwf	fputc@c^0,c
  1677  00104E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1678  001052  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1679  001056  EC41  F00A         	call	_fputc	;wreg free
  1680  00105A                     l1752:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1683  00105A  0E00               	movlw	0
  1684  00105C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1685  00105E  0E01               	movlw	1
  1686  001060  6E40               	movwf	?_vfpfcnvrt^0,c
  1687  001062  EF5B  F008         	goto	l877
  1688  001066                     l1756:
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1692  001066  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1693  00106A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1694  00106E  2ADE               	incf	postinc2,f,c
  1695  001070  0E00               	movlw	0
  1696  001072  22DD               	addwfc	postdec2,f,c
  1697  001074                     
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1700  001074  0E00               	movlw	0
  1701  001076  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1702  001078  0E00               	movlw	0
  1703  00107A  6E40               	movwf	?_vfpfcnvrt^0,c
  1704  00107C  EF5B  F008         	goto	l877
  1705  001080                     l1762:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1708  001080  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1709  001084  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1710  001088  CFDE FFF6          	movff	postinc2,tblptrl
  1711  00108C  CFDD FFF7          	movff	postdec2,tblptrh
  1712  001090                     	if	0	;tblptru may be non-zero
  1713  001090                     	endif
  1714  001090                     	if	0	;tblptru may be non-zero
  1715  001090                     	endif
  1716  001090  0008               	tblrd		*
  1717  001092  50F5               	movf	tablat,w,c
  1718  001094  6E01               	movwf	fputc@c^0,c
  1719  001096  6A02               	clrf	(fputc@c+1)^0,c
  1720  001098  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1721  00109C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1722  0010A0  EC41  F00A         	call	_fputc	;wreg free
  1723  0010A4                     
  1724                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1725  0010A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1726  0010A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1727  0010AC  2ADE               	incf	postinc2,f,c
  1728  0010AE  0E00               	movlw	0
  1729  0010B0  22DD               	addwfc	postdec2,f,c
  1730  0010B2  EF2D  F008         	goto	l1752
  1731  0010B6                     l877:
  1732  0010B6  0012               	return		;funcret
  1733  0010B8                     __end_of_vfpfcnvrt:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function _dtoa *****************
  1737 ;; Defined at:
  1738 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1741 ;;		 -> sprintf@f(6), 
  1742 ;;  d               8   29[COMRAM] long long 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  n               8   53[COMRAM] long long 
  1745 ;;  i               2   61[COMRAM] int 
  1746 ;;  s               2   51[COMRAM] int 
  1747 ;;  w               2   49[COMRAM] int 
  1748 ;;  p               2   47[COMRAM] int 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  2   27[COMRAM] int 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1758 ;;      Params:        10       0       0       0       0       0       0       0       0
  1759 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1760 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1761 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1762 ;;Total ram usage:       36 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    5
  1765 ;; This function calls:
  1766 ;;		___aodiv
  1767 ;;		___aomod
  1768 ;;		_abs
  1769 ;;		_pad
  1770 ;; This function is called by:
  1771 ;;		_vfpfcnvrt
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text5
  1776  000C22                     __ptext5:
  1777                           	callstack 0
  1778  000C22                     _dtoa:
  1779                           	callstack 22
  1780  000C22                     
  1781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  1782  000C22  C01E  F036         	movff	dtoa@d,dtoa@n
  1783  000C26  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1784  000C2A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1785  000C2E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1786  000C32  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1787  000C36  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1788  000C3A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1789  000C3E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1790  000C42                     
  1791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  1792  000C42  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1793  000C44  EF26  F006         	goto	u1011
  1794  000C48  EF29  F006         	goto	u1010
  1795  000C4C                     u1011:
  1796  000C4C  0E01               	movlw	1
  1797  000C4E  EF2A  F006         	goto	u1020
  1798  000C52                     u1010:
  1799  000C52  0E00               	movlw	0
  1800  000C54                     u1020:
  1801  000C54  6E34               	movwf	dtoa@s^0,c
  1802  000C56  6A35               	clrf	(dtoa@s+1)^0,c
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  1805  000C58  5034               	movf	dtoa@s^0,w,c
  1806  000C5A  1035               	iorwf	(dtoa@s+1)^0,w,c
  1807  000C5C  B4D8               	btfsc	status,2,c
  1808  000C5E  EF33  F006         	goto	u1031
  1809  000C62  EF35  F006         	goto	u1030
  1810  000C66                     u1031:
  1811  000C66  EF45  F006         	goto	l1662
  1812  000C6A                     u1030:
  1813  000C6A                     
  1814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  1815  000C6A  1E3D               	comf	(dtoa@n+7)^0,f,c
  1816  000C6C  1E3C               	comf	(dtoa@n+6)^0,f,c
  1817  000C6E  1E3B               	comf	(dtoa@n+5)^0,f,c
  1818  000C70  1E3A               	comf	(dtoa@n+4)^0,f,c
  1819  000C72  1E39               	comf	(dtoa@n+3)^0,f,c
  1820  000C74  1E38               	comf	(dtoa@n+2)^0,f,c
  1821  000C76  1E37               	comf	(dtoa@n+1)^0,f,c
  1822  000C78  6C36               	negf	dtoa@n^0,c
  1823  000C7A  0E00               	movlw	0
  1824  000C7C  2237               	addwfc	(dtoa@n+1)^0,f,c
  1825  000C7E  2238               	addwfc	(dtoa@n+2)^0,f,c
  1826  000C80  2239               	addwfc	(dtoa@n+3)^0,f,c
  1827  000C82  223A               	addwfc	(dtoa@n+4)^0,f,c
  1828  000C84  223B               	addwfc	(dtoa@n+5)^0,f,c
  1829  000C86  223C               	addwfc	(dtoa@n+6)^0,f,c
  1830  000C88  223D               	addwfc	(dtoa@n+7)^0,f,c
  1831  000C8A                     l1662:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  1834  000C8A  0100               	movlb	0	; () banked
  1835  000C8C  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1836  000C8E  EF4B  F006         	goto	u1041
  1837  000C92  EF4D  F006         	goto	u1040
  1838  000C96                     u1041:
  1839  000C96  EF4E  F006         	goto	l1666
  1840  000C9A                     u1040:
  1841  000C9A                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  1844  000C9A  9366               	bcf	_flags& (0+255),1,b
  1845  000C9C                     l1666:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  1849  000C9C  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1850  000C9E  EF5B  F006         	goto	u1050
  1851  000CA2  5165               	movf	(_prec+1)& (0+255),w,b
  1852  000CA4  E106               	bnz	u1051
  1853  000CA6  0564               	decf	_prec& (0+255),w,b
  1854  000CA8  B0D8               	btfsc	status,0,c
  1855  000CAA  EF59  F006         	goto	u1051
  1856  000CAE  EF5B  F006         	goto	u1050
  1857  000CB2                     u1051:
  1858  000CB2  EF61  F006         	goto	l850
  1859  000CB6                     u1050:
  1860  000CB6                     
  1861                           ; BSR set to: 0
  1862  000CB6  0E00               	movlw	0
  1863  000CB8  6E31               	movwf	(dtoa@p+1)^0,c
  1864  000CBA  0E01               	movlw	1
  1865  000CBC  6E30               	movwf	dtoa@p^0,c
  1866  000CBE  EF65  F006         	goto	l852
  1867  000CC2                     l850:
  1868                           
  1869                           ; BSR set to: 0
  1870  000CC2  C064  F030         	movff	_prec,dtoa@p
  1871  000CC6  C065  F031         	movff	_prec+1,dtoa@p+1
  1872  000CCA                     l852:
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  1876  000CCA  C062  F032         	movff	_width,dtoa@w
  1877  000CCE  C063  F033         	movff	_width+1,dtoa@w+1
  1878  000CD2                     
  1879                           ; BSR set to: 0
  1880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  1881  000CD2  5034               	movf	dtoa@s^0,w,c
  1882  000CD4  1035               	iorwf	(dtoa@s+1)^0,w,c
  1883  000CD6  A4D8               	btfss	status,2,c
  1884  000CD8  EF70  F006         	goto	u1061
  1885  000CDC  EF72  F006         	goto	u1060
  1886  000CE0                     u1061:
  1887  000CE0  EF79  F006         	goto	l1674
  1888  000CE4                     u1060:
  1889  000CE4                     
  1890                           ; BSR set to: 0
  1891  000CE4  A566               	btfss	_flags& (0+255),2,b
  1892  000CE6  EF77  F006         	goto	u1071
  1893  000CEA  EF79  F006         	goto	u1070
  1894  000CEE                     u1071:
  1895  000CEE  EF7C  F006         	goto	l1676
  1896  000CF2                     u1070:
  1897  000CF2                     l1674:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  1901  000CF2  0632               	decf	dtoa@w^0,f,c
  1902  000CF4  A0D8               	btfss	status,0,c
  1903  000CF6  0633               	decf	(dtoa@w+1)^0,f,c
  1904  000CF8                     l1676:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  1908  000CF8  0E00               	movlw	0
  1909  000CFA  6E3F               	movwf	(dtoa@i+1)^0,c
  1910  000CFC  0E1F               	movlw	31
  1911  000CFE  6E3E               	movwf	dtoa@i^0,c
  1912  000D00                     
  1913                           ; BSR set to: 0
  1914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  1915  000D00  0E00               	movlw	0
  1916  000D02  6F89               	movwf	(_dbuf+31)& (0+255),b
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1919  000D04  EF00  F007         	goto	l1690
  1920  000D08                     l1680:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  1923  000D08  063E               	decf	dtoa@i^0,f,c
  1924  000D0A  A0D8               	btfss	status,0,c
  1925  000D0C  063F               	decf	(dtoa@i+1)^0,f,c
  1926  000D0E                     
  1927                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  1928  000D0E  0E6A               	movlw	low _dbuf
  1929  000D10  243E               	addwf	dtoa@i^0,w,c
  1930  000D12  6ED9               	movwf	fsr2l,c
  1931  000D14  0E00               	movlw	high _dbuf
  1932  000D16  203F               	addwfc	(dtoa@i+1)^0,w,c
  1933  000D18  6EDA               	movwf	fsr2h,c
  1934  000D1A  C036  F001         	movff	dtoa@n,___aomod@dividend
  1935  000D1E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1936  000D22  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1937  000D26  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1938  000D2A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1939  000D2E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1940  000D32  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1941  000D36  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1942  000D3A  0E0A               	movlw	10
  1943  000D3C  6E09               	movwf	___aomod@divisor^0,c
  1944  000D3E  0E00               	movlw	0
  1945  000D40  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1946  000D42  0E00               	movlw	0
  1947  000D44  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1948  000D46  0E00               	movlw	0
  1949  000D48  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1950  000D4A  0E00               	movlw	0
  1951  000D4C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1952  000D4E  0E00               	movlw	0
  1953  000D50  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1954  000D52  0E00               	movlw	0
  1955  000D54  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1956  000D56  0E00               	movlw	0
  1957  000D58  6E10               	movwf	(___aomod@divisor+7)^0,c
  1958  000D5A  EC20  F009         	call	___aomod	;wreg free
  1959  000D5E  C001  F026         	movff	?___aomod,??_dtoa
  1960  000D62  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1961  000D66  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1962  000D6A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1963  000D6E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1964  000D72  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1965  000D76  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1966  000D7A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1967  000D7E  C026  F013         	movff	??_dtoa,abs@a
  1968  000D82  C028  F014         	movff	??_dtoa+2,abs@a+1
  1969  000D86  ECA9  F00C         	call	_abs	;wreg free
  1970  000D8A  5013               	movf	?_abs^0,w,c
  1971  000D8C  0F30               	addlw	48
  1972  000D8E  6EDF               	movwf	indf2,c
  1973  000D90                     
  1974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  1975  000D90  0630               	decf	dtoa@p^0,f,c
  1976  000D92  A0D8               	btfss	status,0,c
  1977  000D94  0631               	decf	(dtoa@p+1)^0,f,c
  1978  000D96                     
  1979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  1980  000D96  0632               	decf	dtoa@w^0,f,c
  1981  000D98  A0D8               	btfss	status,0,c
  1982  000D9A  0633               	decf	(dtoa@w+1)^0,f,c
  1983  000D9C                     
  1984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  1985  000D9C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1986  000DA0  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1987  000DA4  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1988  000DA8  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1989  000DAC  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1990  000DB0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1991  000DB4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1992  000DB8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1993  000DBC  0E0A               	movlw	10
  1994  000DBE  6E09               	movwf	___aodiv@divisor^0,c
  1995  000DC0  0E00               	movlw	0
  1996  000DC2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1997  000DC4  0E00               	movlw	0
  1998  000DC6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1999  000DC8  0E00               	movlw	0
  2000  000DCA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2001  000DCC  0E00               	movlw	0
  2002  000DCE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2003  000DD0  0E00               	movlw	0
  2004  000DD2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2005  000DD4  0E00               	movlw	0
  2006  000DD6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2007  000DD8  0E00               	movlw	0
  2008  000DDA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2009  000DDC  EC5C  F008         	call	___aodiv	;wreg free
  2010  000DE0  C001  F036         	movff	?___aodiv,dtoa@n
  2011  000DE4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2012  000DE8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2013  000DEC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2014  000DF0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2015  000DF4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2016  000DF8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2017  000DFC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2018  000E00                     l1690:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2021  000E00  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2022  000E02  EF0B  F007         	goto	u1081
  2023  000E06  503F               	movf	(dtoa@i+1)^0,w,c
  2024  000E08  E108               	bnz	u1080
  2025  000E0A  043E               	decf	dtoa@i^0,w,c
  2026  000E0C  A0D8               	btfss	status,0,c
  2027  000E0E  EF0B  F007         	goto	u1081
  2028  000E12  EF0D  F007         	goto	u1080
  2029  000E16                     u1081:
  2030  000E16  EF3E  F007         	goto	l1700
  2031  000E1A                     u1080:
  2032  000E1A  5036               	movf	dtoa@n^0,w,c
  2033  000E1C  1037               	iorwf	(dtoa@n+1)^0,w,c
  2034  000E1E  1038               	iorwf	(dtoa@n+2)^0,w,c
  2035  000E20  1039               	iorwf	(dtoa@n+3)^0,w,c
  2036  000E22  103A               	iorwf	(dtoa@n+4)^0,w,c
  2037  000E24  103B               	iorwf	(dtoa@n+5)^0,w,c
  2038  000E26  103C               	iorwf	(dtoa@n+6)^0,w,c
  2039  000E28  103D               	iorwf	(dtoa@n+7)^0,w,c
  2040  000E2A  A4D8               	btfss	status,2,c
  2041  000E2C  EF1A  F007         	goto	u1091
  2042  000E30  EF1C  F007         	goto	u1090
  2043  000E34                     u1091:
  2044  000E34  EF84  F006         	goto	l1680
  2045  000E38                     u1090:
  2046  000E38  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2047  000E3A  EF29  F007         	goto	u1100
  2048  000E3E  5031               	movf	(dtoa@p+1)^0,w,c
  2049  000E40  E106               	bnz	u1101
  2050  000E42  0430               	decf	dtoa@p^0,w,c
  2051  000E44  B0D8               	btfsc	status,0,c
  2052  000E46  EF27  F007         	goto	u1101
  2053  000E4A  EF29  F007         	goto	u1100
  2054  000E4E                     u1101:
  2055  000E4E  EF84  F006         	goto	l1680
  2056  000E52                     u1100:
  2057  000E52  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2058  000E54  EF34  F007         	goto	u1111
  2059  000E58  5033               	movf	(dtoa@w+1)^0,w,c
  2060  000E5A  E108               	bnz	u1110
  2061  000E5C  0432               	decf	dtoa@w^0,w,c
  2062  000E5E  A0D8               	btfss	status,0,c
  2063  000E60  EF34  F007         	goto	u1111
  2064  000E64  EF36  F007         	goto	u1110
  2065  000E68                     u1111:
  2066  000E68  EF3E  F007         	goto	l1700
  2067  000E6C                     u1110:
  2068  000E6C  0100               	movlb	0	; () banked
  2069  000E6E  B366               	btfsc	_flags& (0+255),1,b
  2070  000E70  EF3C  F007         	goto	u1121
  2071  000E74  EF3E  F007         	goto	u1120
  2072  000E78                     u1121:
  2073  000E78  EF84  F006         	goto	l1680
  2074  000E7C                     u1120:
  2075  000E7C                     l1700:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  2078  000E7C  5034               	movf	dtoa@s^0,w,c
  2079  000E7E  1035               	iorwf	(dtoa@s+1)^0,w,c
  2080  000E80  A4D8               	btfss	status,2,c
  2081  000E82  EF45  F007         	goto	u1131
  2082  000E86  EF47  F007         	goto	u1130
  2083  000E8A                     u1131:
  2084  000E8A  EF4F  F007         	goto	l1704
  2085  000E8E                     u1130:
  2086  000E8E  0100               	movlb	0	; () banked
  2087  000E90  A566               	btfss	_flags& (0+255),2,b
  2088  000E92  EF4D  F007         	goto	u1141
  2089  000E96  EF4F  F007         	goto	u1140
  2090  000E9A                     u1141:
  2091  000E9A  EF6D  F007         	goto	l1714
  2092  000E9E                     u1140:
  2093  000E9E                     l1704:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  2096  000E9E  063E               	decf	dtoa@i^0,f,c
  2097  000EA0  A0D8               	btfss	status,0,c
  2098  000EA2  063F               	decf	(dtoa@i+1)^0,f,c
  2099  000EA4                     
  2100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  2101  000EA4  5034               	movf	dtoa@s^0,w,c
  2102  000EA6  1035               	iorwf	(dtoa@s+1)^0,w,c
  2103  000EA8  A4D8               	btfss	status,2,c
  2104  000EAA  EF59  F007         	goto	u1151
  2105  000EAE  EF5B  F007         	goto	u1150
  2106  000EB2                     u1151:
  2107  000EB2  EF61  F007         	goto	l1710
  2108  000EB6                     u1150:
  2109  000EB6  0E00               	movlw	0
  2110  000EB8  6E2F               	movwf	(_dtoa$878+1)^0,c
  2111  000EBA  0E2B               	movlw	43
  2112  000EBC  6E2E               	movwf	_dtoa$878^0,c
  2113  000EBE  EF65  F007         	goto	l1712
  2114  000EC2                     l1710:
  2115  000EC2  0E00               	movlw	0
  2116  000EC4  6E2F               	movwf	(_dtoa$878+1)^0,c
  2117  000EC6  0E2D               	movlw	45
  2118  000EC8  6E2E               	movwf	_dtoa$878^0,c
  2119  000ECA                     l1712:
  2120  000ECA  0E6A               	movlw	low _dbuf
  2121  000ECC  243E               	addwf	dtoa@i^0,w,c
  2122  000ECE  6ED9               	movwf	fsr2l,c
  2123  000ED0  0E00               	movlw	high _dbuf
  2124  000ED2  203F               	addwfc	(dtoa@i+1)^0,w,c
  2125  000ED4  6EDA               	movwf	fsr2h,c
  2126  000ED6  C02E  FFDF         	movff	_dtoa$878,indf2
  2127  000EDA                     l1714:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  2130  000EDA  C01C  F011         	movff	dtoa@fp,pad@fp
  2131  000EDE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2132  000EE2  0E6A               	movlw	low _dbuf
  2133  000EE4  243E               	addwf	dtoa@i^0,w,c
  2134  000EE6  6E13               	movwf	pad@buf^0,c
  2135  000EE8  0E00               	movlw	high _dbuf
  2136  000EEA  203F               	addwfc	(dtoa@i+1)^0,w,c
  2137  000EEC  6E14               	movwf	(pad@buf+1)^0,c
  2138  000EEE  C032  F015         	movff	dtoa@w,pad@p
  2139  000EF2  C033  F016         	movff	dtoa@w+1,pad@p+1
  2140  000EF6  ECA6  F00A         	call	_pad	;wreg free
  2141  000EFA  C011  F01C         	movff	?_pad,?_dtoa
  2142  000EFE  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2143  000F02  0012               	return		;funcret
  2144  000F04                     __end_of_dtoa:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _pad *****************
  2148 ;; Defined at:
  2149 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2152 ;;		 -> sprintf@f(6), 
  2153 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2154 ;;		 -> dbuf(32), 
  2155 ;;  p               2   20[COMRAM] int 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  w               2   25[COMRAM] int 
  2158 ;;  i               2   23[COMRAM] int 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2   16[COMRAM] int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         6       0       0       0       0       0       0       0       0
  2169 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2171 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:       11 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    4
  2175 ;; This function calls:
  2176 ;;		_fputc
  2177 ;;		_fputs
  2178 ;;		_strlen
  2179 ;; This function is called by:
  2180 ;;		_dtoa
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text6
  2185  00154C                     __ptext6:
  2186                           	callstack 0
  2187  00154C                     _pad:
  2188                           	callstack 22
  2189  00154C                     
  2190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2191  00154C  0100               	movlb	0	; () banked
  2192  00154E  A166               	btfss	_flags& (0+255),0,b
  2193  001550  EFAC  F00A         	goto	u961
  2194  001554  EFAE  F00A         	goto	u960
  2195  001558                     u961:
  2196  001558  EFB8  F00A         	goto	l1628
  2197  00155C                     u960:
  2198  00155C                     
  2199                           ; BSR set to: 0
  2200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2201  00155C  C013  F00A         	movff	pad@buf,fputs@s
  2202  001560  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2203  001564  C011  F00C         	movff	pad@fp,fputs@fp
  2204  001568  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2205  00156C  EC65  F00C         	call	_fputs	;wreg free
  2206  001570                     l1628:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2209  001570  BE16               	btfsc	(pad@p+1)^0,7,c
  2210  001572  EFBD  F00A         	goto	u971
  2211  001576  EFBF  F00A         	goto	u970
  2212  00157A                     u971:
  2213  00157A  EFC5  F00A         	goto	l1632
  2214  00157E                     u970:
  2215  00157E  C015  F01A         	movff	pad@p,pad@w
  2216  001582  C016  F01B         	movff	pad@p+1,pad@w+1
  2217  001586  EFC9  F00A         	goto	l839
  2218  00158A                     l1632:
  2219  00158A  0E00               	movlw	0
  2220  00158C  6E1B               	movwf	(pad@w+1)^0,c
  2221  00158E  0E00               	movlw	0
  2222  001590  6E1A               	movwf	pad@w^0,c
  2223  001592                     l839:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2226  001592  0E00               	movlw	0
  2227  001594  6E19               	movwf	(pad@i+1)^0,c
  2228  001596  0E00               	movlw	0
  2229  001598  6E18               	movwf	pad@i^0,c
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2232  00159A  EFDB  F00A         	goto	l1638
  2233  00159E                     l1634:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2236  00159E  0E00               	movlw	0
  2237  0015A0  6E02               	movwf	(fputc@c+1)^0,c
  2238  0015A2  0E20               	movlw	32
  2239  0015A4  6E01               	movwf	fputc@c^0,c
  2240  0015A6  C011  F003         	movff	pad@fp,fputc@fp
  2241  0015AA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2242  0015AE  EC41  F00A         	call	_fputc	;wreg free
  2243  0015B2                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2245  0015B2  4A18               	infsnz	pad@i^0,f,c
  2246  0015B4  2A19               	incf	(pad@i+1)^0,f,c
  2247  0015B6                     l1638:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2250  0015B6  501A               	movf	pad@w^0,w,c
  2251  0015B8  5C18               	subwf	pad@i^0,w,c
  2252  0015BA  5019               	movf	(pad@i+1)^0,w,c
  2253  0015BC  0A80               	xorlw	128
  2254  0015BE  6E17               	movwf	??_pad^0,c
  2255  0015C0  501B               	movf	(pad@w+1)^0,w,c
  2256  0015C2  0A80               	xorlw	128
  2257  0015C4  5817               	subwfb	??_pad^0,w,c
  2258  0015C6  A0D8               	btfss	status,0,c
  2259  0015C8  EFE8  F00A         	goto	u981
  2260  0015CC  EFEA  F00A         	goto	u980
  2261  0015D0                     u981:
  2262  0015D0  EFCF  F00A         	goto	l1634
  2263  0015D4                     u980:
  2264  0015D4                     
  2265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2266  0015D4  0100               	movlb	0	; () banked
  2267  0015D6  B166               	btfsc	_flags& (0+255),0,b
  2268  0015D8  EFF0  F00A         	goto	u991
  2269  0015DC  EFF2  F00A         	goto	u990
  2270  0015E0                     u991:
  2271  0015E0  EFFC  F00A         	goto	l1642
  2272  0015E4                     u990:
  2273  0015E4                     
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2276  0015E4  C013  F00A         	movff	pad@buf,fputs@s
  2277  0015E8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2278  0015EC  C011  F00C         	movff	pad@fp,fputs@fp
  2279  0015F0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2280  0015F4  EC65  F00C         	call	_fputs	;wreg free
  2281  0015F8                     l1642:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  2284  0015F8  C013  F001         	movff	pad@buf,strlen@s
  2285  0015FC  C014  F002         	movff	pad@buf+1,strlen@s+1
  2286  001600  EC02  F00D         	call	_strlen	;wreg free
  2287  001604  501A               	movf	pad@w^0,w,c
  2288  001606  2401               	addwf	?_strlen^0,w,c
  2289  001608  6E11               	movwf	?_pad^0,c
  2290  00160A  501B               	movf	(pad@w+1)^0,w,c
  2291  00160C  2002               	addwfc	(?_strlen+1)^0,w,c
  2292  00160E  6E12               	movwf	(?_pad+1)^0,c
  2293  001610  0012               	return		;funcret
  2294  001612                     __end_of_pad:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _strlen *****************
  2298 ;; Defined at:
  2299 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2302 ;;		 -> dbuf(32), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2305 ;;		 -> dbuf(32), 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  2    0[COMRAM] unsigned int 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2315 ;;      Params:         2       0       0       0       0       0       0       0       0
  2316 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2318 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2319 ;;Total ram usage:        4 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_pad
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text7
  2330  001A04                     __ptext7:
  2331                           	callstack 0
  2332  001A04                     _strlen:
  2333                           	callstack 24
  2334  001A04  C001  F003         	movff	strlen@s,strlen@a
  2335  001A08  C002  F004         	movff	strlen@s+1,strlen@a+1
  2336  001A0C  EF0A  F00D         	goto	l1538
  2337  001A10                     l1536:
  2338  001A10  4A01               	infsnz	strlen@s^0,f,c
  2339  001A12  2A02               	incf	(strlen@s+1)^0,f,c
  2340  001A14                     l1538:
  2341  001A14  C001  FFD9         	movff	strlen@s,fsr2l
  2342  001A18  C002  FFDA         	movff	strlen@s+1,fsr2h
  2343  001A1C  50DF               	movf	indf2,w,c
  2344  001A1E  A4D8               	btfss	status,2,c
  2345  001A20  EF14  F00D         	goto	u821
  2346  001A24  EF16  F00D         	goto	u820
  2347  001A28                     u821:
  2348  001A28  EF08  F00D         	goto	l1536
  2349  001A2C                     u820:
  2350  001A2C  5003               	movf	strlen@a^0,w,c
  2351  001A2E  5C01               	subwf	strlen@s^0,w,c
  2352  001A30  6E01               	movwf	?_strlen^0,c
  2353  001A32  5004               	movf	(strlen@a+1)^0,w,c
  2354  001A34  5802               	subwfb	(strlen@s+1)^0,w,c
  2355  001A36  6E02               	movwf	(?_strlen+1)^0,c
  2356  001A38  0012               	return		;funcret
  2357  001A3A                     __end_of_strlen:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _fputs *****************
  2361 ;; Defined at:
  2362 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2365 ;;		 -> dbuf(32), 
  2366 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2367 ;;		 -> sprintf@f(6), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  i               2   14[COMRAM] int 
  2370 ;;  c               1   13[COMRAM] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2    9[COMRAM] int 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2380 ;;      Params:         4       0       0       0       0       0       0       0       0
  2381 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2383 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2384 ;;Total ram usage:        7 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    3
  2387 ;; This function calls:
  2388 ;;		_fputc
  2389 ;; This function is called by:
  2390 ;;		_pad
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text8
  2395  0018CA                     __ptext8:
  2396                           	callstack 0
  2397  0018CA                     _fputs:
  2398                           	callstack 22
  2399  0018CA  0E00               	movlw	0
  2400  0018CC  6E10               	movwf	(fputs@i+1)^0,c
  2401  0018CE  0E00               	movlw	0
  2402  0018D0  6E0F               	movwf	fputs@i^0,c
  2403  0018D2  EF76  F00C         	goto	l1532
  2404  0018D6                     l1528:
  2405  0018D6  C00E  F001         	movff	fputs@c,fputc@c
  2406  0018DA  6A02               	clrf	(fputc@c+1)^0,c
  2407  0018DC  C00C  F003         	movff	fputs@fp,fputc@fp
  2408  0018E0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2409  0018E4  EC41  F00A         	call	_fputc	;wreg free
  2410  0018E8  4A0F               	infsnz	fputs@i^0,f,c
  2411  0018EA  2A10               	incf	(fputs@i+1)^0,f,c
  2412  0018EC                     l1532:
  2413  0018EC  500F               	movf	fputs@i^0,w,c
  2414  0018EE  240A               	addwf	fputs@s^0,w,c
  2415  0018F0  6ED9               	movwf	fsr2l,c
  2416  0018F2  5010               	movf	(fputs@i+1)^0,w,c
  2417  0018F4  200B               	addwfc	(fputs@s+1)^0,w,c
  2418  0018F6  6EDA               	movwf	fsr2h,c
  2419  0018F8  50DF               	movf	indf2,w,c
  2420  0018FA  6E0E               	movwf	fputs@c^0,c
  2421  0018FC  500E               	movf	fputs@c^0,w,c
  2422  0018FE  A4D8               	btfss	status,2,c
  2423  001900  EF84  F00C         	goto	u811
  2424  001904  EF86  F00C         	goto	u810
  2425  001908                     u811:
  2426  001908  EF6B  F00C         	goto	l1528
  2427  00190C                     u810:
  2428  00190C  0012               	return		;funcret
  2429  00190E                     __end_of_fputs:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _fputc *****************
  2433 ;; Defined at:
  2434 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  c               2    0[COMRAM] int 
  2437 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2438 ;;		 -> sprintf@f(6), 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2    0[COMRAM] int 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2450 ;;      Params:         4       0       0       0       0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2452 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2453 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2454 ;;Total ram usage:        9 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    2
  2457 ;; This function calls:
  2458 ;;		_putch
  2459 ;; This function is called by:
  2460 ;;		_pad
  2461 ;;		_vfpfcnvrt
  2462 ;;		_fputs
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text9
  2467  001482                     __ptext9:
  2468                           	callstack 0
  2469  001482                     _fputc:
  2470                           	callstack 25
  2471  001482  5003               	movf	fputc@fp^0,w,c
  2472  001484  1004               	iorwf	(fputc@fp+1)^0,w,c
  2473  001486  B4D8               	btfsc	status,2,c
  2474  001488  EF48  F00A         	goto	u771
  2475  00148C  EF4A  F00A         	goto	u770
  2476  001490                     u771:
  2477  001490  EF53  F00A         	goto	l1516
  2478  001494                     u770:
  2479  001494  5003               	movf	fputc@fp^0,w,c
  2480  001496  1004               	iorwf	(fputc@fp+1)^0,w,c
  2481  001498  A4D8               	btfss	status,2,c
  2482  00149A  EF51  F00A         	goto	u781
  2483  00149E  EF53  F00A         	goto	u780
  2484  0014A2                     u781:
  2485  0014A2  EF58  F00A         	goto	l1518
  2486  0014A6                     u780:
  2487  0014A6                     l1516:
  2488  0014A6  5001               	movf	fputc@c^0,w,c
  2489  0014A8  EC8F  F00D         	call	_putch
  2490  0014AC  EFA5  F00A         	goto	l903
  2491  0014B0                     l1518:
  2492  0014B0  EE20 F004          	lfsr	2,4
  2493  0014B4  5003               	movf	fputc@fp^0,w,c
  2494  0014B6  26D9               	addwf	fsr2l,f,c
  2495  0014B8  5004               	movf	(fputc@fp+1)^0,w,c
  2496  0014BA  22DA               	addwfc	fsr2h,f,c
  2497  0014BC  50DE               	movf	postinc2,w,c
  2498  0014BE  10DE               	iorwf	postinc2,w,c
  2499  0014C0  B4D8               	btfsc	status,2,c
  2500  0014C2  EF65  F00A         	goto	u791
  2501  0014C6  EF67  F00A         	goto	u790
  2502  0014CA                     u791:
  2503  0014CA  EF82  F00A         	goto	l1522
  2504  0014CE                     u790:
  2505  0014CE  EE20 F004          	lfsr	2,4
  2506  0014D2  5003               	movf	fputc@fp^0,w,c
  2507  0014D4  26D9               	addwf	fsr2l,f,c
  2508  0014D6  5004               	movf	(fputc@fp+1)^0,w,c
  2509  0014D8  22DA               	addwfc	fsr2h,f,c
  2510  0014DA  EE10 F002          	lfsr	1,2
  2511  0014DE  5003               	movf	fputc@fp^0,w,c
  2512  0014E0  26E1               	addwf	fsr1l,f,c
  2513  0014E2  5004               	movf	(fputc@fp+1)^0,w,c
  2514  0014E4  22E2               	addwfc	fsr1h,f,c
  2515  0014E6  50DE               	movf	postinc2,w,c
  2516  0014E8  5CE6               	subwf	postinc1,w,c
  2517  0014EA  50E6               	movf	postinc1,w,c
  2518  0014EC  0A80               	xorlw	128
  2519  0014EE  6E09               	movwf	(??_fputc+4)^0,c
  2520  0014F0  50DE               	movf	postinc2,w,c
  2521  0014F2  0A80               	xorlw	128
  2522  0014F4  5809               	subwfb	(??_fputc+4)^0,w,c
  2523  0014F6  B0D8               	btfsc	status,0,c
  2524  0014F8  EF80  F00A         	goto	u801
  2525  0014FC  EF82  F00A         	goto	u800
  2526  001500                     u801:
  2527  001500  EFA5  F00A         	goto	l903
  2528  001504                     u800:
  2529  001504                     l1522:
  2530  001504  EE20 F002          	lfsr	2,2
  2531  001508  5003               	movf	fputc@fp^0,w,c
  2532  00150A  26D9               	addwf	fsr2l,f,c
  2533  00150C  5004               	movf	(fputc@fp+1)^0,w,c
  2534  00150E  22DA               	addwfc	fsr2h,f,c
  2535  001510  CFDE F005          	movff	postinc2,??_fputc
  2536  001514  CFDD F006          	movff	postdec2,??_fputc+1
  2537  001518  C003  FFD9         	movff	fputc@fp,fsr2l
  2538  00151C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2539  001520  CFDE F007          	movff	postinc2,??_fputc+2
  2540  001524  CFDD F008          	movff	postdec2,??_fputc+3
  2541  001528  5005               	movf	??_fputc^0,w,c
  2542  00152A  2407               	addwf	(??_fputc+2)^0,w,c
  2543  00152C  6ED9               	movwf	fsr2l,c
  2544  00152E  5006               	movf	(??_fputc+1)^0,w,c
  2545  001530  2008               	addwfc	(??_fputc+3)^0,w,c
  2546  001532  6EDA               	movwf	fsr2h,c
  2547  001534  C001  FFDF         	movff	fputc@c,indf2
  2548  001538  EE20 F002          	lfsr	2,2
  2549  00153C  5003               	movf	fputc@fp^0,w,c
  2550  00153E  26D9               	addwf	fsr2l,f,c
  2551  001540  5004               	movf	(fputc@fp+1)^0,w,c
  2552  001542  22DA               	addwfc	fsr2h,f,c
  2553  001544  2ADE               	incf	postinc2,f,c
  2554  001546  0E00               	movlw	0
  2555  001548  22DD               	addwfc	postdec2,f,c
  2556  00154A                     l903:
  2557  00154A  0012               	return		;funcret
  2558  00154C                     __end_of_fputc:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _putch *****************
  2562 ;; Defined at:
  2563 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  c               1    wreg     unsigned char 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  c               1    0[COMRAM] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_fputc
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text10
  2592  001B1E                     __ptext10:
  2593                           	callstack 0
  2594  001B1E                     _putch:
  2595                           	callstack 25
  2596  001B1E  0012               	return		;funcret
  2597  001B20                     __end_of_putch:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _abs *****************
  2601 ;; Defined at:
  2602 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  a               2   18[COMRAM] int 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  2   18[COMRAM] int 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2616 ;;      Params:         2       0       0       0       0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2618 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2619 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2620 ;;Total ram usage:        4 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_dtoa
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text11
  2631  001952                     __ptext11:
  2632                           	callstack 0
  2633  001952                     _abs:
  2634                           	callstack 25
  2635  001952  BE14               	btfsc	(abs@a+1)^0,7,c
  2636  001954  EFB6  F00C         	goto	u1000
  2637  001958  5014               	movf	(abs@a+1)^0,w,c
  2638  00195A  E106               	bnz	u1001
  2639  00195C  0413               	decf	abs@a^0,w,c
  2640  00195E  B0D8               	btfsc	status,0,c
  2641  001960  EFB4  F00C         	goto	u1001
  2642  001964  EFB6  F00C         	goto	u1000
  2643  001968                     u1001:
  2644  001968  EFC4  F00C         	goto	l888
  2645  00196C                     u1000:
  2646  00196C  C013  F015         	movff	abs@a,??_abs
  2647  001970  C014  F016         	movff	abs@a+1,??_abs+1
  2648  001974  1E15               	comf	??_abs^0,f,c
  2649  001976  1E16               	comf	(??_abs+1)^0,f,c
  2650  001978  4A15               	infsnz	??_abs^0,f,c
  2651  00197A  2A16               	incf	(??_abs+1)^0,f,c
  2652  00197C  C015  F013         	movff	??_abs,?_abs
  2653  001980  C016  F014         	movff	??_abs+1,?_abs+1
  2654  001984  EFC8  F00C         	goto	l891
  2655  001988                     l888:
  2656  001988  C013  F013         	movff	abs@a,?_abs
  2657  00198C  C014  F014         	movff	abs@a+1,?_abs+1
  2658  001990                     l891:
  2659  001990  0012               	return		;funcret
  2660  001992                     __end_of_abs:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function ___aomod *****************
  2664 ;; Defined at:
  2665 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  dividend        8    0[COMRAM] long long 
  2668 ;;  divisor         8    8[COMRAM] long long 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  sign            1   17[COMRAM] unsigned char 
  2671 ;;  counter         1   16[COMRAM] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  8    0[COMRAM] long long 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2681 ;;      Params:        16       0       0       0       0       0       0       0       0
  2682 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2684 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2685 ;;Total ram usage:       18 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_dtoa
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text12
  2696  001240                     __ptext12:
  2697                           	callstack 0
  2698  001240                     ___aomod:
  2699                           	callstack 25
  2700  001240  0E00               	movlw	0
  2701  001242  6E12               	movwf	___aomod@sign^0,c
  2702  001244  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2703  001246  EF29  F009         	goto	u900
  2704  00124A  EF27  F009         	goto	u901
  2705  00124E                     u901:
  2706  00124E  EF3B  F009         	goto	l1596
  2707  001252                     u900:
  2708  001252  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2709  001254  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2710  001256  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2711  001258  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2712  00125A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2713  00125C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2714  00125E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2715  001260  6C01               	negf	___aomod@dividend^0,c
  2716  001262  0E00               	movlw	0
  2717  001264  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2718  001266  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2719  001268  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2720  00126A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2721  00126C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2722  00126E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2723  001270  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2724  001272  0E01               	movlw	1
  2725  001274  6E12               	movwf	___aomod@sign^0,c
  2726  001276                     l1596:
  2727  001276  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2728  001278  EF42  F009         	goto	u910
  2729  00127C  EF40  F009         	goto	u911
  2730  001280                     u911:
  2731  001280  EF52  F009         	goto	l1600
  2732  001284                     u910:
  2733  001284  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2734  001286  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2735  001288  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2736  00128A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2737  00128C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2738  00128E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2739  001290  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2740  001292  6C09               	negf	___aomod@divisor^0,c
  2741  001294  0E00               	movlw	0
  2742  001296  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2743  001298  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2744  00129A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2745  00129C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2746  00129E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2747  0012A0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2748  0012A2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2749  0012A4                     l1600:
  2750  0012A4  5009               	movf	___aomod@divisor^0,w,c
  2751  0012A6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2752  0012A8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2753  0012AA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2754  0012AC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2755  0012AE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2756  0012B0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2757  0012B2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2758  0012B4  B4D8               	btfsc	status,2,c
  2759  0012B6  EF5F  F009         	goto	u921
  2760  0012BA  EF61  F009         	goto	u920
  2761  0012BE                     u921:
  2762  0012BE  EFA9  F009         	goto	l1616
  2763  0012C2                     u920:
  2764  0012C2  0E01               	movlw	1
  2765  0012C4  6E11               	movwf	___aomod@counter^0,c
  2766  0012C6  EF6F  F009         	goto	l1606
  2767  0012CA                     l1604:
  2768  0012CA  90D8               	bcf	status,0,c
  2769  0012CC  3609               	rlcf	___aomod@divisor^0,f,c
  2770  0012CE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2771  0012D0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2772  0012D2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2773  0012D4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2774  0012D6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2775  0012D8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2776  0012DA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2777  0012DC  2A11               	incf	___aomod@counter^0,f,c
  2778  0012DE                     l1606:
  2779  0012DE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2780  0012E0  EF74  F009         	goto	u931
  2781  0012E4  EF76  F009         	goto	u930
  2782  0012E8                     u931:
  2783  0012E8  EF65  F009         	goto	l1604
  2784  0012EC                     u930:
  2785  0012EC                     l1608:
  2786  0012EC  5009               	movf	___aomod@divisor^0,w,c
  2787  0012EE  5C01               	subwf	___aomod@dividend^0,w,c
  2788  0012F0  500A               	movf	(___aomod@divisor+1)^0,w,c
  2789  0012F2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2790  0012F4  500B               	movf	(___aomod@divisor+2)^0,w,c
  2791  0012F6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2792  0012F8  500C               	movf	(___aomod@divisor+3)^0,w,c
  2793  0012FA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2794  0012FC  500D               	movf	(___aomod@divisor+4)^0,w,c
  2795  0012FE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2796  001300  500E               	movf	(___aomod@divisor+5)^0,w,c
  2797  001302  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2798  001304  500F               	movf	(___aomod@divisor+6)^0,w,c
  2799  001306  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2800  001308  5010               	movf	(___aomod@divisor+7)^0,w,c
  2801  00130A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2802  00130C  A0D8               	btfss	status,0,c
  2803  00130E  EF8B  F009         	goto	u941
  2804  001312  EF8D  F009         	goto	u940
  2805  001316                     u941:
  2806  001316  EF9D  F009         	goto	l1612
  2807  00131A                     u940:
  2808  00131A  5009               	movf	___aomod@divisor^0,w,c
  2809  00131C  5E01               	subwf	___aomod@dividend^0,f,c
  2810  00131E  500A               	movf	(___aomod@divisor+1)^0,w,c
  2811  001320  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2812  001322  500B               	movf	(___aomod@divisor+2)^0,w,c
  2813  001324  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2814  001326  500C               	movf	(___aomod@divisor+3)^0,w,c
  2815  001328  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2816  00132A  500D               	movf	(___aomod@divisor+4)^0,w,c
  2817  00132C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2818  00132E  500E               	movf	(___aomod@divisor+5)^0,w,c
  2819  001330  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2820  001332  500F               	movf	(___aomod@divisor+6)^0,w,c
  2821  001334  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2822  001336  5010               	movf	(___aomod@divisor+7)^0,w,c
  2823  001338  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2824  00133A                     l1612:
  2825  00133A  90D8               	bcf	status,0,c
  2826  00133C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2827  00133E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2828  001340  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2829  001342  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2830  001344  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2831  001346  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2832  001348  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2833  00134A  3209               	rrcf	___aomod@divisor^0,f,c
  2834  00134C  2E11               	decfsz	___aomod@counter^0,f,c
  2835  00134E  EF76  F009         	goto	l1608
  2836  001352                     l1616:
  2837  001352  5012               	movf	___aomod@sign^0,w,c
  2838  001354  B4D8               	btfsc	status,2,c
  2839  001356  EFAF  F009         	goto	u951
  2840  00135A  EFB1  F009         	goto	u950
  2841  00135E                     u951:
  2842  00135E  EFC1  F009         	goto	l1620
  2843  001362                     u950:
  2844  001362  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2845  001364  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2846  001366  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2847  001368  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2848  00136A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2849  00136C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2850  00136E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2851  001370  6C01               	negf	___aomod@dividend^0,c
  2852  001372  0E00               	movlw	0
  2853  001374  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2854  001376  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2855  001378  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2856  00137A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2857  00137C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2858  00137E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2859  001380  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2860  001382                     l1620:
  2861  001382  C001  F001         	movff	___aomod@dividend,?___aomod
  2862  001386  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2863  00138A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2864  00138E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2865  001392  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2866  001396  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2867  00139A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2868  00139E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2869  0013A2  0012               	return		;funcret
  2870  0013A4                     __end_of___aomod:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function ___aodiv *****************
  2874 ;; Defined at:
  2875 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  dividend        8    0[COMRAM] long long 
  2878 ;;  divisor         8    8[COMRAM] long long 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  quotient        8   18[COMRAM] long long 
  2881 ;;  sign            1   17[COMRAM] unsigned char 
  2882 ;;  counter         1   16[COMRAM] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  8    0[COMRAM] long long 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2892 ;;      Params:        16       0       0       0       0       0       0       0       0
  2893 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2895 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2896 ;;Total ram usage:       26 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_dtoa
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text13
  2907  0010B8                     __ptext13:
  2908                           	callstack 0
  2909  0010B8                     ___aodiv:
  2910                           	callstack 25
  2911  0010B8  0E00               	movlw	0
  2912  0010BA  6E12               	movwf	___aodiv@sign^0,c
  2913  0010BC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2914  0010BE  EF65  F008         	goto	u830
  2915  0010C2  EF63  F008         	goto	u831
  2916  0010C6                     u831:
  2917  0010C6  EF77  F008         	goto	l1552
  2918  0010CA                     u830:
  2919  0010CA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2920  0010CC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2921  0010CE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2922  0010D0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2923  0010D2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2924  0010D4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2925  0010D6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2926  0010D8  6C09               	negf	___aodiv@divisor^0,c
  2927  0010DA  0E00               	movlw	0
  2928  0010DC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2929  0010DE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2930  0010E0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2931  0010E2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2932  0010E4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2933  0010E6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2934  0010E8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2935  0010EA  0E01               	movlw	1
  2936  0010EC  6E12               	movwf	___aodiv@sign^0,c
  2937  0010EE                     l1552:
  2938  0010EE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2939  0010F0  EF7E  F008         	goto	u840
  2940  0010F4  EF7C  F008         	goto	u841
  2941  0010F8                     u841:
  2942  0010F8  EF90  F008         	goto	l1558
  2943  0010FC                     u840:
  2944  0010FC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2945  0010FE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2946  001100  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2947  001102  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2948  001104  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2949  001106  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2950  001108  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2951  00110A  6C01               	negf	___aodiv@dividend^0,c
  2952  00110C  0E00               	movlw	0
  2953  00110E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2954  001110  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2955  001112  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2956  001114  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2957  001116  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2958  001118  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2959  00111A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2960  00111C  0E01               	movlw	1
  2961  00111E  1A12               	xorwf	___aodiv@sign^0,f,c
  2962  001120                     l1558:
  2963  001120  EE20  F013         	lfsr	2,___aodiv@quotient
  2964  001124  0E07               	movlw	7
  2965  001126                     u851:
  2966  001126  6ADE               	clrf	postinc2,c
  2967  001128  06E8               	decf	wreg,f,c
  2968  00112A  E2FD               	bc	u851
  2969  00112C  5009               	movf	___aodiv@divisor^0,w,c
  2970  00112E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2971  001130  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2972  001132  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2973  001134  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2974  001136  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2975  001138  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2976  00113A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2977  00113C  B4D8               	btfsc	status,2,c
  2978  00113E  EFA3  F008         	goto	u861
  2979  001142  EFA5  F008         	goto	u860
  2980  001146                     u861:
  2981  001146  EFF7  F008         	goto	l1580
  2982  00114A                     u860:
  2983  00114A  0E01               	movlw	1
  2984  00114C  6E11               	movwf	___aodiv@counter^0,c
  2985  00114E  EFB3  F008         	goto	l1566
  2986  001152                     l1564:
  2987  001152  90D8               	bcf	status,0,c
  2988  001154  3609               	rlcf	___aodiv@divisor^0,f,c
  2989  001156  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2990  001158  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2991  00115A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2992  00115C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2993  00115E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2994  001160  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2995  001162  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2996  001164  2A11               	incf	___aodiv@counter^0,f,c
  2997  001166                     l1566:
  2998  001166  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2999  001168  EFB8  F008         	goto	u871
  3000  00116C  EFBA  F008         	goto	u870
  3001  001170                     u871:
  3002  001170  EFA9  F008         	goto	l1564
  3003  001174                     u870:
  3004  001174                     l1568:
  3005  001174  90D8               	bcf	status,0,c
  3006  001176  3613               	rlcf	___aodiv@quotient^0,f,c
  3007  001178  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3008  00117A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3009  00117C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3010  00117E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3011  001180  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3012  001182  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3013  001184  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3014  001186  5009               	movf	___aodiv@divisor^0,w,c
  3015  001188  5C01               	subwf	___aodiv@dividend^0,w,c
  3016  00118A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3017  00118C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3018  00118E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3019  001190  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3020  001192  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3021  001194  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3022  001196  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3023  001198  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3024  00119A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3025  00119C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3026  00119E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3027  0011A0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3028  0011A2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3029  0011A4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3030  0011A6  A0D8               	btfss	status,0,c
  3031  0011A8  EFD8  F008         	goto	u881
  3032  0011AC  EFDA  F008         	goto	u880
  3033  0011B0                     u881:
  3034  0011B0  EFEB  F008         	goto	l1576
  3035  0011B4                     u880:
  3036  0011B4  5009               	movf	___aodiv@divisor^0,w,c
  3037  0011B6  5E01               	subwf	___aodiv@dividend^0,f,c
  3038  0011B8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3039  0011BA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3040  0011BC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3041  0011BE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3042  0011C0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3043  0011C2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3044  0011C4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3045  0011C6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3046  0011C8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3047  0011CA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3048  0011CC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3049  0011CE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3050  0011D0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3051  0011D2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3052  0011D4  8013               	bsf	___aodiv@quotient^0,0,c
  3053  0011D6                     l1576:
  3054  0011D6  90D8               	bcf	status,0,c
  3055  0011D8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3056  0011DA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3057  0011DC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3058  0011DE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3059  0011E0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3060  0011E2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3061  0011E4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3062  0011E6  3209               	rrcf	___aodiv@divisor^0,f,c
  3063  0011E8  2E11               	decfsz	___aodiv@counter^0,f,c
  3064  0011EA  EFBA  F008         	goto	l1568
  3065  0011EE                     l1580:
  3066  0011EE  5012               	movf	___aodiv@sign^0,w,c
  3067  0011F0  B4D8               	btfsc	status,2,c
  3068  0011F2  EFFD  F008         	goto	u891
  3069  0011F6  EFFF  F008         	goto	u890
  3070  0011FA                     u891:
  3071  0011FA  EF0F  F009         	goto	l1584
  3072  0011FE                     u890:
  3073  0011FE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3074  001200  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3075  001202  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3076  001204  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3077  001206  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3078  001208  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3079  00120A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3080  00120C  6C13               	negf	___aodiv@quotient^0,c
  3081  00120E  0E00               	movlw	0
  3082  001210  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3083  001212  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3084  001214  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3085  001216  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3086  001218  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3087  00121A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3088  00121C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3089  00121E                     l1584:
  3090  00121E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3091  001222  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3092  001226  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3093  00122A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3094  00122E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3095  001232  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3096  001236  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3097  00123A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3098  00123E  0012               	return		;funcret
  3099  001240                     __end_of___aodiv:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function _rand *****************
  3103 ;; Defined at:
  3104 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\rand.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  2   24[COMRAM] int 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3118 ;;      Params:         2       0       0       0       0       0       0       0       0
  3119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3120 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3121 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3122 ;;Total ram usage:       10 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    2
  3125 ;; This function calls:
  3126 ;;		___omul
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text14
  3133  0013A4                     __ptext14:
  3134                           	callstack 0
  3135  0013A4                     _rand:
  3136                           	callstack 28
  3137  0013A4  C08A  F001         	movff	_seed,___omul@multiplier
  3138  0013A8  C08B  F002         	movff	_seed+1,___omul@multiplier+1
  3139  0013AC  C08C  F003         	movff	_seed+2,___omul@multiplier+2
  3140  0013B0  C08D  F004         	movff	_seed+3,___omul@multiplier+3
  3141  0013B4  C08E  F005         	movff	_seed+4,___omul@multiplier+4
  3142  0013B8  C08F  F006         	movff	_seed+5,___omul@multiplier+5
  3143  0013BC  C090  F007         	movff	_seed+6,___omul@multiplier+6
  3144  0013C0  C091  F008         	movff	_seed+7,___omul@multiplier+7
  3145  0013C4  0E2D               	movlw	45
  3146  0013C6  6E09               	movwf	___omul@multiplicand^0,c
  3147  0013C8  0E7F               	movlw	127
  3148  0013CA  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  3149  0013CC  0E95               	movlw	149
  3150  0013CE  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  3151  0013D0  0E4C               	movlw	76
  3152  0013D2  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  3153  0013D4  0E2D               	movlw	45
  3154  0013D6  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  3155  0013D8  0EF4               	movlw	244
  3156  0013DA  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  3157  0013DC  0E51               	movlw	81
  3158  0013DE  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  3159  0013E0  0E58               	movlw	88
  3160  0013E2  6E10               	movwf	(___omul@multiplicand+7)^0,c
  3161  0013E4  EC61  F00B         	call	___omul	;wreg free
  3162  0013E8  C001  F01B         	movff	?___omul,??_rand
  3163  0013EC  C002  F01C         	movff	?___omul+1,??_rand+1
  3164  0013F0  C003  F01D         	movff	?___omul+2,??_rand+2
  3165  0013F4  C004  F01E         	movff	?___omul+3,??_rand+3
  3166  0013F8  C005  F01F         	movff	?___omul+4,??_rand+4
  3167  0013FC  C006  F020         	movff	?___omul+5,??_rand+5
  3168  001400  C007  F021         	movff	?___omul+6,??_rand+6
  3169  001404  C008  F022         	movff	?___omul+7,??_rand+7
  3170  001408  0E01               	movlw	1
  3171  00140A  241B               	addwf	??_rand^0,w,c
  3172  00140C  0100               	movlb	0	; () banked
  3173  00140E  6F8A               	movwf	_seed& (0+255),b
  3174  001410  0E00               	movlw	0
  3175  001412  201C               	addwfc	(??_rand+1)^0,w,c
  3176  001414  6F8B               	movwf	(_seed+1)& (0+255),b
  3177  001416  0E00               	movlw	0
  3178  001418  201D               	addwfc	(??_rand+2)^0,w,c
  3179  00141A  6F8C               	movwf	(_seed+2)& (0+255),b
  3180  00141C  0E00               	movlw	0
  3181  00141E  201E               	addwfc	(??_rand+3)^0,w,c
  3182  001420  6F8D               	movwf	(_seed+3)& (0+255),b
  3183  001422  0E00               	movlw	0
  3184  001424  201F               	addwfc	(??_rand+4)^0,w,c
  3185  001426  6F8E               	movwf	(_seed+4)& (0+255),b
  3186  001428  0E00               	movlw	0
  3187  00142A  2020               	addwfc	(??_rand+5)^0,w,c
  3188  00142C  6F8F               	movwf	(_seed+5)& (0+255),b
  3189  00142E  0E00               	movlw	0
  3190  001430  2021               	addwfc	(??_rand+6)^0,w,c
  3191  001432  6F90               	movwf	(_seed+6)& (0+255),b
  3192  001434  0E00               	movlw	0
  3193  001436  2022               	addwfc	(??_rand+7)^0,w,c
  3194  001438  6F91               	movwf	(_seed+7)& (0+255),b
  3195  00143A                     
  3196                           ; BSR set to: 0
  3197  00143A  C08A  F01B         	movff	_seed,??_rand
  3198  00143E  C08B  F01C         	movff	_seed+1,??_rand+1
  3199  001442  C08C  F01D         	movff	_seed+2,??_rand+2
  3200  001446  C08D  F01E         	movff	_seed+3,??_rand+3
  3201  00144A  C08E  F01F         	movff	_seed+4,??_rand+4
  3202  00144E  C08F  F020         	movff	_seed+5,??_rand+5
  3203  001452  C090  F021         	movff	_seed+6,??_rand+6
  3204  001456  C091  F022         	movff	_seed+7,??_rand+7
  3205  00145A  0E32               	movlw	50
  3206  00145C  EF39  F00A         	goto	u1270
  3207  001460                     u1275:
  3208  001460  90D8               	bcf	status,0,c
  3209  001462  3222               	rrcf	(??_rand+7)^0,f,c
  3210  001464  3221               	rrcf	(??_rand+6)^0,f,c
  3211  001466  3220               	rrcf	(??_rand+5)^0,f,c
  3212  001468  321F               	rrcf	(??_rand+4)^0,f,c
  3213  00146A  321E               	rrcf	(??_rand+3)^0,f,c
  3214  00146C  321D               	rrcf	(??_rand+2)^0,f,c
  3215  00146E  321C               	rrcf	(??_rand+1)^0,f,c
  3216  001470  321B               	rrcf	??_rand^0,f,c
  3217  001472                     u1270:
  3218  001472  2EE8               	decfsz	wreg,f,c
  3219  001474  EF30  F00A         	goto	u1275
  3220  001478  C01B  F019         	movff	??_rand,?_rand
  3221  00147C  C01D  F01A         	movff	??_rand+2,?_rand+1
  3222  001480                     
  3223                           ; BSR set to: 0
  3224  001480  0012               	return		;funcret
  3225  001482                     __end_of_rand:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function ___omul *****************
  3229 ;; Defined at:
  3230 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul64.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  multiplier      8    0[COMRAM] unsigned long long 
  3233 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  product         8   16[COMRAM] unsigned long long 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  8    0[COMRAM] unsigned long long 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3245 ;;      Params:        16       0       0       0       0       0       0       0       0
  3246 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3248 ;;      Totals:        24       0       0       0       0       0       0       0       0
  3249 ;;Total ram usage:       24 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    1
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_rand
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text15
  3260  0016C2                     __ptext15:
  3261                           	callstack 0
  3262  0016C2                     ___omul:
  3263                           	callstack 28
  3264  0016C2  EE20  F011         	lfsr	2,___omul@product
  3265  0016C6  0E07               	movlw	7
  3266  0016C8                     u1231:
  3267  0016C8  6ADE               	clrf	postinc2,c
  3268  0016CA  06E8               	decf	wreg,f,c
  3269  0016CC  E2FD               	bc	u1231
  3270  0016CE                     l1790:
  3271  0016CE  A001               	btfss	___omul@multiplier^0,0,c
  3272  0016D0  EF6C  F00B         	goto	u1241
  3273  0016D4  EF6E  F00B         	goto	u1240
  3274  0016D8                     u1241:
  3275  0016D8  EF7E  F00B         	goto	l1794
  3276  0016DC                     u1240:
  3277  0016DC  5009               	movf	___omul@multiplicand^0,w,c
  3278  0016DE  2611               	addwf	___omul@product^0,f,c
  3279  0016E0  500A               	movf	(___omul@multiplicand+1)^0,w,c
  3280  0016E2  2212               	addwfc	(___omul@product+1)^0,f,c
  3281  0016E4  500B               	movf	(___omul@multiplicand+2)^0,w,c
  3282  0016E6  2213               	addwfc	(___omul@product+2)^0,f,c
  3283  0016E8  500C               	movf	(___omul@multiplicand+3)^0,w,c
  3284  0016EA  2214               	addwfc	(___omul@product+3)^0,f,c
  3285  0016EC  500D               	movf	(___omul@multiplicand+4)^0,w,c
  3286  0016EE  2215               	addwfc	(___omul@product+4)^0,f,c
  3287  0016F0  500E               	movf	(___omul@multiplicand+5)^0,w,c
  3288  0016F2  2216               	addwfc	(___omul@product+5)^0,f,c
  3289  0016F4  500F               	movf	(___omul@multiplicand+6)^0,w,c
  3290  0016F6  2217               	addwfc	(___omul@product+6)^0,f,c
  3291  0016F8  5010               	movf	(___omul@multiplicand+7)^0,w,c
  3292  0016FA  2218               	addwfc	(___omul@product+7)^0,f,c
  3293  0016FC                     l1794:
  3294  0016FC  90D8               	bcf	status,0,c
  3295  0016FE  3609               	rlcf	___omul@multiplicand^0,f,c
  3296  001700  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  3297  001702  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  3298  001704  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  3299  001706  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  3300  001708  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  3301  00170A  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  3302  00170C  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  3303  00170E  90D8               	bcf	status,0,c
  3304  001710  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  3305  001712  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  3306  001714  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  3307  001716  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  3308  001718  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  3309  00171A  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  3310  00171C  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  3311  00171E  3201               	rrcf	___omul@multiplier^0,f,c
  3312  001720  5001               	movf	___omul@multiplier^0,w,c
  3313  001722  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  3314  001724  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  3315  001726  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  3316  001728  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  3317  00172A  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  3318  00172C  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  3319  00172E  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  3320  001730  A4D8               	btfss	status,2,c
  3321  001732  EF9D  F00B         	goto	u1251
  3322  001736  EF9F  F00B         	goto	u1250
  3323  00173A                     u1251:
  3324  00173A  EF67  F00B         	goto	l1790
  3325  00173E                     u1250:
  3326  00173E  C011  F001         	movff	___omul@product,?___omul
  3327  001742  C012  F002         	movff	___omul@product+1,?___omul+1
  3328  001746  C013  F003         	movff	___omul@product+2,?___omul+2
  3329  00174A  C014  F004         	movff	___omul@product+3,?___omul+3
  3330  00174E  C015  F005         	movff	___omul@product+4,?___omul+4
  3331  001752  C016  F006         	movff	___omul@product+5,?___omul+5
  3332  001756  C017  F007         	movff	___omul@product+6,?___omul+6
  3333  00175A  C018  F008         	movff	___omul@product+7,?___omul+7
  3334  00175E  0012               	return		;funcret
  3335  001760                     __end_of___omul:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _lcd_print_with_position *****************
  3339 ;; Defined at:
  3340 ;;		line 114 in file "../../Libraries\LCD.h"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  x               2    4[COMRAM] int 
  3343 ;;  y               2    6[COMRAM] int 
  3344 ;;  dato            2    8[COMRAM] PTR unsigned char 
  3345 ;;		 -> STR_3(5), main@str(4), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  posicion        1   12[COMRAM] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3357 ;;      Params:         6       0       0       0       0       0       0       0       0
  3358 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3359 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3360 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3361 ;;Total ram usage:        9 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    4
  3364 ;; This function calls:
  3365 ;;		_lcd_control
  3366 ;;		_lcd_print
  3367 ;; This function is called by:
  3368 ;;		_main
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text16
  3373  001820                     __ptext16:
  3374                           	callstack 0
  3375  001820                     _lcd_print_with_position:
  3376                           	callstack 26
  3377  001820                     
  3378                           ;../../Libraries\LCD.h: 115:     char posicion;;../../Libraries\LCD.h: 116:     switch (
      +                          y) {
  3379  001820  EF1C  F00C         	goto	l1836
  3380  001824                     l1828:
  3381  001824  5005               	movf	lcd_print_with_position@x^0,w,c
  3382  001826  0F80               	addlw	128
  3383  001828  6E0D               	movwf	lcd_print_with_position@posicion^0,c
  3384                           
  3385                           ;../../Libraries\LCD.h: 118:             break;
  3386  00182A  EF32  F00C         	goto	l1838
  3387  00182E                     l1830:
  3388  00182E  5005               	movf	lcd_print_with_position@x^0,w,c
  3389  001830  0FC0               	addlw	192
  3390  001832  6E0D               	movwf	lcd_print_with_position@posicion^0,c
  3391                           
  3392                           ;../../Libraries\LCD.h: 120:             break;
  3393  001834  EF32  F00C         	goto	l1838
  3394  001838                     l1836:
  3395  001838  C007  F00B         	movff	lcd_print_with_position@y,??_lcd_print_with_position
  3396  00183C  C008  F00C         	movff	lcd_print_with_position@y+1,??_lcd_print_with_position+1
  3397                           
  3398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3399                           ; Switch size 1, requested type "simple"
  3400                           ; Number of cases is 1, Range of values is 0 to 0
  3401                           ; switch strategies available:
  3402                           ; Name         Instructions Cycles
  3403                           ; simple_byte            4     3 (average)
  3404                           ;	Chosen strategy is simple_byte
  3405  001840  500C               	movf	(??_lcd_print_with_position+1)^0,w,c
  3406  001842  0A00               	xorlw	0	; case 0
  3407  001844  B4D8               	btfsc	status,2,c
  3408  001846  EF27  F00C         	goto	l2094
  3409  00184A  EF12  F00C         	goto	l1828
  3410  00184E                     l2094:
  3411                           
  3412                           ; Switch size 1, requested type "simple"
  3413                           ; Number of cases is 2, Range of values is 1 to 2
  3414                           ; switch strategies available:
  3415                           ; Name         Instructions Cycles
  3416                           ; simple_byte            7     4 (average)
  3417                           ;	Chosen strategy is simple_byte
  3418  00184E  500B               	movf	??_lcd_print_with_position^0,w,c
  3419  001850  0A01               	xorlw	1	; case 1
  3420  001852  B4D8               	btfsc	status,2,c
  3421  001854  EF12  F00C         	goto	l1828
  3422  001858  0A03               	xorlw	3	; case 2
  3423  00185A  B4D8               	btfsc	status,2,c
  3424  00185C  EF17  F00C         	goto	l1830
  3425  001860  EF12  F00C         	goto	l1828
  3426  001864                     l1838:
  3427                           
  3428                           ;../../Libraries\LCD.h: 124:     lcd_control(posicion);
  3429  001864  500D               	movf	lcd_print_with_position@posicion^0,w,c
  3430  001866  EC1D  F00D         	call	_lcd_control
  3431  00186A                     
  3432                           ;../../Libraries\LCD.h: 125:     lcd_print(dato);
  3433  00186A  C009  F003         	movff	lcd_print_with_position@dato,lcd_print@dato
  3434  00186E  C00A  F004         	movff	lcd_print_with_position@dato+1,lcd_print@dato+1
  3435  001872  ECE1  F00B         	call	_lcd_print	;wreg free
  3436  001876  0012               	return		;funcret
  3437  001878                     __end_of_lcd_print_with_position:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _lcd_print *****************
  3441 ;; Defined at:
  3442 ;;		line 93 in file "../../Libraries\LCD.h"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  dato            2    2[COMRAM] PTR unsigned char 
  3445 ;;		 -> STR_3(5), main@str(4), STR_1(10), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3457 ;;      Params:         2       0       0       0       0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3460 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    3
  3464 ;; This function calls:
  3465 ;;		_lcd_dato
  3466 ;; This function is called by:
  3467 ;;		_lcd_print_with_position
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text17
  3473  0017C2                     __ptext17:
  3474                           	callstack 0
  3475  0017C2                     _lcd_print:
  3476                           	callstack 26
  3477  0017C2                     
  3478                           ;../../Libraries\LCD.h: 94:     while (*dato)
  3479  0017C2  EFF7  F00B         	goto	l1786
  3480  0017C6                     l1782:
  3481                           
  3482                           ;../../Libraries\LCD.h: 95:     {;../../Libraries\LCD.h: 96:         lcd_dato(*dato);
  3483  0017C6  C003  FFF6         	movff	lcd_print@dato,tblptrl
  3484  0017CA  C004  FFF7         	movff	lcd_print@dato+1,tblptrh
  3485  0017CE  6AF8               	clrf	tblptru,c
  3486  0017D0  0E07               	movlw	(high __ramtop+-1)
  3487  0017D2  64F7               	cpfsgt	tblptrh,c
  3488  0017D4  D003               	bra	u1207
  3489  0017D6  0008               	tblrd		*
  3490  0017D8  50F5               	movf	tablat,w,c
  3491  0017DA  D005               	bra	u1200
  3492  0017DC                     u1207:
  3493  0017DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3494  0017E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3495  0017E4  50E7               	movf	indf1,w,c
  3496  0017E6                     u1200:
  3497  0017E6  EC4E  F00D         	call	_lcd_dato
  3498  0017EA                     
  3499                           ;../../Libraries\LCD.h: 97:         dato++;
  3500  0017EA  4A03               	infsnz	lcd_print@dato^0,f,c
  3501  0017EC  2A04               	incf	(lcd_print@dato+1)^0,f,c
  3502  0017EE                     l1786:
  3503                           
  3504                           ;../../Libraries\LCD.h: 94:     while (*dato)
  3505  0017EE  C003  FFF6         	movff	lcd_print@dato,tblptrl
  3506  0017F2  C004  FFF7         	movff	lcd_print@dato+1,tblptrh
  3507  0017F6  6AF8               	clrf	tblptru,c
  3508  0017F8  0E07               	movlw	(high __ramtop+-1)
  3509  0017FA  64F7               	cpfsgt	tblptrh,c
  3510  0017FC  D003               	bra	u1217
  3511  0017FE  0008               	tblrd		*
  3512  001800  50F5               	movf	tablat,w,c
  3513  001802  D005               	bra	u1210
  3514  001804                     u1217:
  3515  001804  CFF6 FFE1          	movff	tblptrl,fsr1l
  3516  001808  CFF7 FFE2          	movff	tblptrh,fsr1h
  3517  00180C  50E7               	movf	indf1,w,c
  3518  00180E                     u1210:
  3519  00180E  0900               	iorlw	0
  3520  001810  A4D8               	btfss	status,2,c
  3521  001812  EF0D  F00C         	goto	u1221
  3522  001816  EF0F  F00C         	goto	u1220
  3523  00181A                     u1221:
  3524  00181A  EFE3  F00B         	goto	l1782
  3525  00181E                     u1220:
  3526  00181E  0012               	return		;funcret
  3527  001820                     __end_of_lcd_print:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _lcd_dato *****************
  3531 ;; Defined at:
  3532 ;;		line 67 in file "../../Libraries\LCD.h"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  dato            1    wreg     unsigned char 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  dato            1    1[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    2
  3553 ;; This function calls:
  3554 ;;		_lcd_time_control
  3555 ;; This function is called by:
  3556 ;;		_lcd_print
  3557 ;;		_lcd_print_var
  3558 ;;		_lcd_put_caracter
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text18
  3563  001A9C                     __ptext18:
  3564                           	callstack 0
  3565  001A9C                     _lcd_dato:
  3566                           	callstack 26
  3567                           
  3568                           ;incstack = 0
  3569                           ;lcd_dato@dato stored from wreg
  3570  001A9C  6E02               	movwf	lcd_dato@dato^0,c
  3571  001A9E                     
  3572                           ;../../Libraries\LCD.h: 68:     LATEbits.LATE0 = 1;
  3573  001A9E  808D               	bsf	141,0,c	;volatile
  3574  001AA0                     
  3575                           ;../../Libraries\LCD.h: 69:     LATC = dato & 0xF0;
  3576  001AA0  5002               	movf	lcd_dato@dato^0,w,c
  3577  001AA2  0BF0               	andlw	240
  3578  001AA4  6E8B               	movwf	139,c	;volatile
  3579  001AA6                     
  3580                           ;../../Libraries\LCD.h: 70:     lcd_time_control();
  3581  001AA6  EC6F  F00D         	call	_lcd_time_control	;wreg free
  3582  001AAA                     
  3583                           ;../../Libraries\LCD.h: 71:     LATC = ((dato & 0x0F) << 4);
  3584  001AAA  C002  F001         	movff	lcd_dato@dato,??_lcd_dato
  3585  001AAE  0E0F               	movlw	15
  3586  001AB0  1601               	andwf	??_lcd_dato^0,f,c
  3587  001AB2  3801               	swapf	??_lcd_dato^0,w,c
  3588  001AB4  0BF0               	andlw	240
  3589  001AB6  6E8B               	movwf	139,c	;volatile
  3590                           
  3591                           ;../../Libraries\LCD.h: 72:     lcd_time_control();
  3592  001AB8  EC6F  F00D         	call	_lcd_time_control	;wreg free
  3593  001ABC                     
  3594                           ;../../Libraries\LCD.h: 73:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  3595  001ABC  0E21               	movlw	33
  3596  001ABE                     u1557:
  3597  001ABE  2EE8               	decfsz	wreg,f,c
  3598  001AC0  D7FE               	bra	u1557
  3599  001AC2  F000               	nop	
  3600  001AC4  0012               	return		;funcret
  3601  001AC6                     __end_of_lcd_dato:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _lcd_init *****************
  3605 ;; Defined at:
  3606 ;;		line 30 in file "../../Libraries\LCD.h"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3622 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3623 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3624 ;;Total ram usage:        1 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    3
  3627 ;; This function calls:
  3628 ;;		_lcd_control
  3629 ;; This function is called by:
  3630 ;;		_main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text19
  3635  0019CC                     __ptext19:
  3636                           	callstack 0
  3637  0019CC                     _lcd_init:
  3638                           	callstack 27
  3639  0019CC                     
  3640                           ;../../Libraries\LCD.h: 32:     TRISEbits.TRISE0 = 0;
  3641  0019CC  9096               	bcf	150,0,c	;volatile
  3642                           
  3643                           ;../../Libraries\LCD.h: 33:     TRISEbits.TRISE1 = 0;
  3644  0019CE  9296               	bcf	150,1,c	;volatile
  3645  0019D0                     
  3646                           ;../../Libraries\LCD.h: 34:     TRISC = 0b00001111;
  3647  0019D0  0E0F               	movlw	15
  3648  0019D2  6E94               	movwf	148,c	;volatile
  3649  0019D4                     
  3650                           ;../../Libraries\LCD.h: 35:     LATEbits.LATE0 = 0;
  3651  0019D4  908D               	bcf	141,0,c	;volatile
  3652  0019D6                     
  3653                           ;../../Libraries\LCD.h: 36:     LATEbits.LATE1 = 0;
  3654  0019D6  928D               	bcf	141,1,c	;volatile
  3655                           
  3656                           ;../../Libraries\LCD.h: 37:     LATC = 0;
  3657  0019D8  0E00               	movlw	0
  3658  0019DA  6E8B               	movwf	139,c	;volatile
  3659  0019DC                     
  3660                           ;../../Libraries\LCD.h: 41:     _delay((unsigned long)((50)*(8000000/4000.0)));
  3661  0019DC  0E82               	movlw	130
  3662  0019DE  6E03               	movwf	??_lcd_init^0,c
  3663  0019E0  0EDE               	movlw	222
  3664  0019E2                     u1567:
  3665  0019E2  2EE8               	decfsz	wreg,f,c
  3666  0019E4  D7FE               	bra	u1567
  3667  0019E6  2E03               	decfsz	??_lcd_init^0,f,c
  3668  0019E8  D7FC               	bra	u1567
  3669  0019EA                     
  3670                           ;../../Libraries\LCD.h: 42:     lcd_control(0x02);
  3671  0019EA  0E02               	movlw	2
  3672  0019EC  EC1D  F00D         	call	_lcd_control
  3673  0019F0                     
  3674                           ;../../Libraries\LCD.h: 43:     lcd_control(0x28);
  3675  0019F0  0E28               	movlw	40
  3676  0019F2  EC1D  F00D         	call	_lcd_control
  3677  0019F6                     
  3678                           ;../../Libraries\LCD.h: 44:     lcd_control(0x0C);
  3679  0019F6  0E0C               	movlw	12
  3680  0019F8  EC1D  F00D         	call	_lcd_control
  3681  0019FC                     
  3682                           ;../../Libraries\LCD.h: 45:     lcd_control(0x06);
  3683  0019FC  0E06               	movlw	6
  3684  0019FE  EC1D  F00D         	call	_lcd_control
  3685  001A02  0012               	return		;funcret
  3686  001A04                     __end_of_lcd_init:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _lcd_clear_display *****************
  3690 ;; Defined at:
  3691 ;;		line 79 in file "../../Libraries\LCD.h"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2, status,0, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3705 ;;      Params:         0       0       0       0       0       0       0       0       0
  3706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3708 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3709 ;;Total ram usage:        0 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    3
  3712 ;; This function calls:
  3713 ;;		_lcd_control
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text20
  3720  001B16                     __ptext20:
  3721                           	callstack 0
  3722  001B16                     _lcd_clear_display:
  3723                           	callstack 27
  3724  001B16                     
  3725                           ;../../Libraries\LCD.h: 80:     lcd_control(0x01);
  3726  001B16  0E01               	movlw	1
  3727  001B18  EC1D  F00D         	call	_lcd_control
  3728  001B1C  0012               	return		;funcret
  3729  001B1E                     __end_of_lcd_clear_display:
  3730                           	callstack 0
  3731                           
  3732 ;; *************** function _lcd_control *****************
  3733 ;; Defined at:
  3734 ;;		line 53 in file "../../Libraries\LCD.h"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  dato            1    wreg     unsigned char 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  dato            1    1[COMRAM] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3748 ;;      Params:         0       0       0       0       0       0       0       0       0
  3749 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3750 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3751 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    2
  3755 ;; This function calls:
  3756 ;;		_lcd_time_control
  3757 ;; This function is called by:
  3758 ;;		_lcd_init
  3759 ;;		_lcd_clear_display
  3760 ;;		_lcd_print_with_position
  3761 ;;		_lcd_move_text
  3762 ;;		_lcd_cursor_home
  3763 ;;		_lcd_goto
  3764 ;;		_lcd_put_caracter
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text21
  3769  001A3A                     __ptext21:
  3770                           	callstack 0
  3771  001A3A                     _lcd_control:
  3772                           	callstack 27
  3773                           
  3774                           ;incstack = 0
  3775                           ;lcd_control@dato stored from wreg
  3776  001A3A  6E02               	movwf	lcd_control@dato^0,c
  3777  001A3C                     
  3778                           ;../../Libraries\LCD.h: 54:     LATEbits.LATE0 = 0;
  3779  001A3C  908D               	bcf	141,0,c	;volatile
  3780  001A3E                     
  3781                           ;../../Libraries\LCD.h: 55:     LATC = dato & 0xF0;
  3782  001A3E  5002               	movf	lcd_control@dato^0,w,c
  3783  001A40  0BF0               	andlw	240
  3784  001A42  6E8B               	movwf	139,c	;volatile
  3785  001A44                     
  3786                           ;../../Libraries\LCD.h: 56:     lcd_time_control();
  3787  001A44  EC6F  F00D         	call	_lcd_time_control	;wreg free
  3788  001A48                     
  3789                           ;../../Libraries\LCD.h: 57:     LATC = ((dato & 0x0F) << 4);
  3790  001A48  C002  F001         	movff	lcd_control@dato,??_lcd_control
  3791  001A4C  0E0F               	movlw	15
  3792  001A4E  1601               	andwf	??_lcd_control^0,f,c
  3793  001A50  3801               	swapf	??_lcd_control^0,w,c
  3794  001A52  0BF0               	andlw	240
  3795  001A54  6E8B               	movwf	139,c	;volatile
  3796                           
  3797                           ;../../Libraries\LCD.h: 58:     lcd_time_control();
  3798  001A56  EC6F  F00D         	call	_lcd_time_control	;wreg free
  3799  001A5A                     
  3800                           ;../../Libraries\LCD.h: 59:     _delay((unsigned long)((2)*(8000000/4000.0)));
  3801  001A5A  0E06               	movlw	6
  3802  001A5C  6E01               	movwf	??_lcd_control^0,c
  3803  001A5E  0E30               	movlw	48
  3804  001A60                     u1577:
  3805  001A60  2EE8               	decfsz	wreg,f,c
  3806  001A62  D7FE               	bra	u1577
  3807  001A64  2E01               	decfsz	??_lcd_control^0,f,c
  3808  001A66  D7FC               	bra	u1577
  3809  001A68  D000               	nop2	
  3810  001A6A  0012               	return		;funcret
  3811  001A6C                     __end_of_lcd_control:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function _lcd_time_control *****************
  3815 ;; Defined at:
  3816 ;;		line 158 in file "../../Libraries\LCD.h"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3833 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_lcd_control
  3841 ;;		_lcd_dato
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text22
  3846  001ADE                     __ptext22:
  3847                           	callstack 0
  3848  001ADE                     _lcd_time_control:
  3849                           	callstack 26
  3850  001ADE                     
  3851                           ;../../Libraries\LCD.h: 159:     LATEbits.LATE1 = 1;
  3852  001ADE  828D               	bsf	141,1,c	;volatile
  3853  001AE0                     
  3854                           ;../../Libraries\LCD.h: 160:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  3855  001AE0  0E03               	movlw	3
  3856  001AE2                     u1587:
  3857  001AE2  2EE8               	decfsz	wreg,f,c
  3858  001AE4  D7FE               	bra	u1587
  3859  001AE6  F000               	nop	
  3860  001AE8                     
  3861                           ;../../Libraries\LCD.h: 161:     LATEbits.LATE1 = 0;
  3862  001AE8  928D               	bcf	141,1,c	;volatile
  3863                           
  3864                           ;../../Libraries\LCD.h: 162:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  3865  001AEA  0E03               	movlw	3
  3866  001AEC                     u1597:
  3867  001AEC  2EE8               	decfsz	wreg,f,c
  3868  001AEE  D7FE               	bra	u1597
  3869  001AF0  F000               	nop	
  3870  001AF2  0012               	return		;funcret
  3871  001AF4                     __end_of_lcd_time_control:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function ___awmod *****************
  3875 ;; Defined at:
  3876 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  dividend        2   34[COMRAM] int 
  3879 ;;  divisor         2   36[COMRAM] int 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  sign            1   39[COMRAM] unsigned char 
  3882 ;;  counter         1   38[COMRAM] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  2   34[COMRAM] int 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3892 ;;      Params:         4       0       0       0       0       0       0       0       0
  3893 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3895 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3896 ;;Total ram usage:        6 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    1
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_main
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text23
  3907  001612                     __ptext23:
  3908                           	callstack 0
  3909  001612                     ___awmod:
  3910                           	callstack 29
  3911  001612  0E00               	movlw	0
  3912  001614  6E28               	movwf	___awmod@sign^0,c
  3913  001616  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  3914  001618  EF12  F00B         	goto	u1280
  3915  00161C  EF10  F00B         	goto	u1281
  3916  001620                     u1281:
  3917  001620  EF18  F00B         	goto	l1878
  3918  001624                     u1280:
  3919  001624  6C23               	negf	___awmod@dividend^0,c
  3920  001626  1E24               	comf	(___awmod@dividend+1)^0,f,c
  3921  001628  B0D8               	btfsc	status,0,c
  3922  00162A  2A24               	incf	(___awmod@dividend+1)^0,f,c
  3923  00162C  0E01               	movlw	1
  3924  00162E  6E28               	movwf	___awmod@sign^0,c
  3925  001630                     l1878:
  3926  001630  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  3927  001632  EF1F  F00B         	goto	u1290
  3928  001636  EF1D  F00B         	goto	u1291
  3929  00163A                     u1291:
  3930  00163A  EF23  F00B         	goto	l1882
  3931  00163E                     u1290:
  3932  00163E  6C25               	negf	___awmod@divisor^0,c
  3933  001640  1E26               	comf	(___awmod@divisor+1)^0,f,c
  3934  001642  B0D8               	btfsc	status,0,c
  3935  001644  2A26               	incf	(___awmod@divisor+1)^0,f,c
  3936  001646                     l1882:
  3937  001646  5025               	movf	___awmod@divisor^0,w,c
  3938  001648  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  3939  00164A  B4D8               	btfsc	status,2,c
  3940  00164C  EF2A  F00B         	goto	u1301
  3941  001650  EF2C  F00B         	goto	u1300
  3942  001654                     u1301:
  3943  001654  EF50  F00B         	goto	l1898
  3944  001658                     u1300:
  3945  001658  0E01               	movlw	1
  3946  00165A  6E27               	movwf	___awmod@counter^0,c
  3947  00165C  EF34  F00B         	goto	l1888
  3948  001660                     l1886:
  3949  001660  90D8               	bcf	status,0,c
  3950  001662  3625               	rlcf	___awmod@divisor^0,f,c
  3951  001664  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  3952  001666  2A27               	incf	___awmod@counter^0,f,c
  3953  001668                     l1888:
  3954  001668  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  3955  00166A  EF39  F00B         	goto	u1311
  3956  00166E  EF3B  F00B         	goto	u1310
  3957  001672                     u1311:
  3958  001672  EF30  F00B         	goto	l1886
  3959  001676                     u1310:
  3960  001676                     l1890:
  3961  001676  5025               	movf	___awmod@divisor^0,w,c
  3962  001678  5C23               	subwf	___awmod@dividend^0,w,c
  3963  00167A  5026               	movf	(___awmod@divisor+1)^0,w,c
  3964  00167C  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  3965  00167E  A0D8               	btfss	status,0,c
  3966  001680  EF44  F00B         	goto	u1321
  3967  001684  EF46  F00B         	goto	u1320
  3968  001688                     u1321:
  3969  001688  EF4A  F00B         	goto	l1894
  3970  00168C                     u1320:
  3971  00168C  5025               	movf	___awmod@divisor^0,w,c
  3972  00168E  5E23               	subwf	___awmod@dividend^0,f,c
  3973  001690  5026               	movf	(___awmod@divisor+1)^0,w,c
  3974  001692  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  3975  001694                     l1894:
  3976  001694  90D8               	bcf	status,0,c
  3977  001696  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  3978  001698  3225               	rrcf	___awmod@divisor^0,f,c
  3979  00169A  2E27               	decfsz	___awmod@counter^0,f,c
  3980  00169C  EF3B  F00B         	goto	l1890
  3981  0016A0                     l1898:
  3982  0016A0  5028               	movf	___awmod@sign^0,w,c
  3983  0016A2  B4D8               	btfsc	status,2,c
  3984  0016A4  EF56  F00B         	goto	u1331
  3985  0016A8  EF58  F00B         	goto	u1330
  3986  0016AC                     u1331:
  3987  0016AC  EF5C  F00B         	goto	l1902
  3988  0016B0                     u1330:
  3989  0016B0  6C23               	negf	___awmod@dividend^0,c
  3990  0016B2  1E24               	comf	(___awmod@dividend+1)^0,f,c
  3991  0016B4  B0D8               	btfsc	status,0,c
  3992  0016B6  2A24               	incf	(___awmod@dividend+1)^0,f,c
  3993  0016B8                     l1902:
  3994  0016B8  C023  F023         	movff	___awmod@dividend,?___awmod
  3995  0016BC  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  3996  0016C0  0012               	return		;funcret
  3997  0016C2                     __end_of___awmod:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _Port_Init *****************
  4001 ;; Defined at:
  4002 ;;		line 32 in file "newmain.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    1
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text24
  4031  001AF4                     __ptext24:
  4032                           	callstack 0
  4033  001AF4                     _Port_Init:
  4034                           	callstack 29
  4035  001AF4                     
  4036                           ;newmain.c: 33:     OSCCONbits.IRCF=0b111;
  4037  001AF4  0E70               	movlw	112
  4038  001AF6  12D3               	iorwf	211,f,c	;volatile
  4039                           
  4040                           ;newmain.c: 34:     ADCON1=0b00001111;
  4041  001AF8  0E0F               	movlw	15
  4042  001AFA  6EC1               	movwf	193,c	;volatile
  4043                           
  4044                           ;newmain.c: 35:     TRISB=0b00000111;
  4045  001AFC  0E07               	movlw	7
  4046  001AFE  6E93               	movwf	147,c	;volatile
  4047                           
  4048                           ;newmain.c: 36:     PORTB=0;
  4049  001B00  0E00               	movlw	0
  4050  001B02  6E81               	movwf	129,c	;volatile
  4051  001B04  0012               	return		;funcret
  4052  001B06                     __end_of_Port_Init:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function _ExtInt_Init *****************
  4056 ;; Defined at:
  4057 ;;		line 18 in file "newmain.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		None
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4074 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4075 ;;Total ram usage:        0 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_main
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text25
  4086  001AC6                     __ptext25:
  4087                           	callstack 0
  4088  001AC6                     _ExtInt_Init:
  4089                           	callstack 29
  4090  001AC6                     
  4091                           ;newmain.c: 19:     INTCONbits.GIE=0;
  4092  001AC6  9EF2               	bcf	242,7,c	;volatile
  4093                           
  4094                           ;newmain.c: 20:     INTCON2bits.INTEDG0=1;
  4095  001AC8  8CF1               	bsf	241,6,c	;volatile
  4096                           
  4097                           ;newmain.c: 21:     INTCON2bits.INTEDG1=1;
  4098  001ACA  8AF1               	bsf	241,5,c	;volatile
  4099                           
  4100                           ;newmain.c: 22:     INTCON2bits.INTEDG2=1;
  4101  001ACC  88F1               	bsf	241,4,c	;volatile
  4102                           
  4103                           ;newmain.c: 23:     INTCONbits.INT0IF=0;
  4104  001ACE  92F2               	bcf	242,1,c	;volatile
  4105                           
  4106                           ;newmain.c: 24:     INTCON3bits.INT1IF=0;
  4107  001AD0  90F0               	bcf	240,0,c	;volatile
  4108                           
  4109                           ;newmain.c: 25:     INTCON3bits.INT2IF=0;
  4110  001AD2  92F0               	bcf	240,1,c	;volatile
  4111                           
  4112                           ;newmain.c: 26:     INTCONbits.INT0IE=1;
  4113  001AD4  88F2               	bsf	242,4,c	;volatile
  4114                           
  4115                           ;newmain.c: 27:     INTCON3bits.INT1IE=1;
  4116  001AD6  86F0               	bsf	240,3,c	;volatile
  4117                           
  4118                           ;newmain.c: 28:     INTCON3bits.INT2IE=1;
  4119  001AD8  88F0               	bsf	240,4,c	;volatile
  4120                           
  4121                           ;newmain.c: 29:     INTCONbits.GIE=0;
  4122  001ADA  9EF2               	bcf	242,7,c	;volatile
  4123  001ADC  0012               	return		;funcret
  4124  001ADE                     __end_of_ExtInt_Init:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _ISR *****************
  4128 ;; Defined at:
  4129 ;;		line 93 in file "newmain.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		Interrupt level 2
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	intcode
  4157  000008                     __pintcode:
  4158                           	callstack 0
  4159  000008                     _ISR:
  4160                           	callstack 22
  4161                           
  4162                           ;incstack = 0
  4163  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4164  00000A  ED87  F00C         	call	int_func,f	;refresh shadow registers
  4165                           
  4166                           	psect	intcode_body
  4167  00190E                     __pintcode_body:
  4168                           	callstack 22
  4169  00190E                     int_func:
  4170                           	callstack 22
  4171  00190E  0006               	pop		; remove dummy address from shadow register refresh
  4172  001910                     
  4173                           ;newmain.c: 94:     if(INTCONbits.INT0IF==1){
  4174  001910  A2F2               	btfss	242,1,c	;volatile
  4175  001912  EF8D  F00C         	goto	i2u151_41
  4176  001916  EF8F  F00C         	goto	i2u151_40
  4177  00191A                     i2u151_41:
  4178  00191A  EFA7  F00C         	goto	i2l131
  4179  00191E                     i2u151_40:
  4180  00191E                     
  4181                           ;newmain.c: 95:         if(flag<2){
  4182  00191E  0100               	movlb	0	; () banked
  4183  001920  BF69               	btfsc	(_flag+1)& (0+255),7,b
  4184  001922  EF9E  F00C         	goto	i2u152_40
  4185  001926  5169               	movf	(_flag+1)& (0+255),w,b
  4186  001928  E107               	bnz	i2u152_41
  4187  00192A  0E02               	movlw	2
  4188  00192C  5D68               	subwf	_flag& (0+255),w,b
  4189  00192E  B0D8               	btfsc	status,0,c
  4190  001930  EF9C  F00C         	goto	i2u152_41
  4191  001934  EF9E  F00C         	goto	i2u152_40
  4192  001938                     i2u152_41:
  4193  001938  EFA2  F00C         	goto	i2l2070
  4194  00193C                     i2u152_40:
  4195  00193C                     
  4196                           ; BSR set to: 0
  4197                           ;newmain.c: 96:             flag++;
  4198  00193C  4B68               	infsnz	_flag& (0+255),f,b
  4199  00193E  2B69               	incf	(_flag+1)& (0+255),f,b
  4200                           
  4201                           ;newmain.c: 97:         }else{
  4202  001940  EFA6  F00C         	goto	i2l2072
  4203  001944                     i2l2070:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;newmain.c: 98:             flag=0;
  4207  001944  0E00               	movlw	0
  4208  001946  6F69               	movwf	(_flag+1)& (0+255),b
  4209  001948  0E00               	movlw	0
  4210  00194A  6F68               	movwf	_flag& (0+255),b
  4211  00194C                     i2l2072:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;newmain.c: 100:         INTCONbits.INT0IF=0;
  4215  00194C  92F2               	bcf	242,1,c	;volatile
  4216  00194E                     i2l131:
  4217  00194E  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4218  001950  0011               	retfie		f
  4219  001952                     __end_of_ISR:
  4220                           	callstack 0
  4221                           
  4222                           	psect	rparam
  4223  0000                     
  4224                           	psect	temp
  4225  00005E                     btemp:
  4226                           	callstack 0
  4227  00005E                     	ds	1
  4228  0000                     int$flags	set	btemp
  4229  0000                     wtemp8	set	btemp+1
  4230  0000                     ttemp5	set	btemp+1
  4231  0000                     ttemp6	set	btemp+4
  4232  0000                     ttemp7	set	btemp+8
  4233                           
  4234                           	psect	idloc
  4235                           
  4236                           ;Config register IDLOC0 @ 0x200000
  4237                           ;	unspecified, using default values
  4238  200000                     	org	2097152
  4239  200000  FF                 	db	255
  4240                           
  4241                           ;Config register IDLOC1 @ 0x200001
  4242                           ;	unspecified, using default values
  4243  200001                     	org	2097153
  4244  200001  FF                 	db	255
  4245                           
  4246                           ;Config register IDLOC2 @ 0x200002
  4247                           ;	unspecified, using default values
  4248  200002                     	org	2097154
  4249  200002  FF                 	db	255
  4250                           
  4251                           ;Config register IDLOC3 @ 0x200003
  4252                           ;	unspecified, using default values
  4253  200003                     	org	2097155
  4254  200003  FF                 	db	255
  4255                           
  4256                           ;Config register IDLOC4 @ 0x200004
  4257                           ;	unspecified, using default values
  4258  200004                     	org	2097156
  4259  200004  FF                 	db	255
  4260                           
  4261                           ;Config register IDLOC5 @ 0x200005
  4262                           ;	unspecified, using default values
  4263  200005                     	org	2097157
  4264  200005  FF                 	db	255
  4265                           
  4266                           ;Config register IDLOC6 @ 0x200006
  4267                           ;	unspecified, using default values
  4268  200006                     	org	2097158
  4269  200006  FF                 	db	255
  4270                           
  4271                           ;Config register IDLOC7 @ 0x200007
  4272                           ;	unspecified, using default values
  4273  200007                     	org	2097159
  4274  200007  FF                 	db	255
  4275                           
  4276                           	psect	config
  4277                           
  4278                           ;Config register CONFIG1L @ 0x300000
  4279                           ;	unspecified, using default values
  4280                           ;	PLL Prescaler Selection bits
  4281                           ;	PLLDIV = 0x0, unprogrammed default
  4282                           ;	System Clock Postscaler Selection bits
  4283                           ;	CPUDIV = 0x0, unprogrammed default
  4284                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4285                           ;	USBDIV = 0x0, unprogrammed default
  4286  300000                     	org	3145728
  4287  300000  00                 	db	0
  4288                           
  4289                           ;Config register CONFIG1H @ 0x300001
  4290                           ;	Oscillator Selection bits
  4291                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  4292                           ;	Fail-Safe Clock Monitor Enable bit
  4293                           ;	FCMEN = 0x0, unprogrammed default
  4294                           ;	Internal/External Oscillator Switchover bit
  4295                           ;	IESO = 0x0, unprogrammed default
  4296  300001                     	org	3145729
  4297  300001  08                 	db	8
  4298                           
  4299                           ;Config register CONFIG2L @ 0x300002
  4300                           ;	unspecified, using default values
  4301                           ;	Power-up Timer Enable bit
  4302                           ;	PWRT = 0x1, unprogrammed default
  4303                           ;	Brown-out Reset Enable bits
  4304                           ;	BOR = 0x3, unprogrammed default
  4305                           ;	Brown-out Reset Voltage bits
  4306                           ;	BORV = 0x3, unprogrammed default
  4307                           ;	USB Voltage Regulator Enable bit
  4308                           ;	VREGEN = 0x0, unprogrammed default
  4309  300002                     	org	3145730
  4310  300002  1F                 	db	31
  4311                           
  4312                           ;Config register CONFIG2H @ 0x300003
  4313                           ;	unspecified, using default values
  4314                           ;	Watchdog Timer Enable bit
  4315                           ;	WDT = 0x1, unprogrammed default
  4316                           ;	Watchdog Timer Postscale Select bits
  4317                           ;	WDTPS = 0xF, unprogrammed default
  4318  300003                     	org	3145731
  4319  300003  1F                 	db	31
  4320                           
  4321                           ; Padding undefined space
  4322  300004                     	org	3145732
  4323  300004  FF                 	db	255
  4324                           
  4325                           ;Config register CONFIG3H @ 0x300005
  4326                           ;	unspecified, using default values
  4327                           ;	CCP2 MUX bit
  4328                           ;	CCP2MX = 0x1, unprogrammed default
  4329                           ;	PORTB A/D Enable bit
  4330                           ;	PBADEN = 0x1, unprogrammed default
  4331                           ;	Low-Power Timer 1 Oscillator Enable bit
  4332                           ;	LPT1OSC = 0x0, unprogrammed default
  4333                           ;	MCLR Pin Enable bit
  4334                           ;	MCLRE = 0x1, unprogrammed default
  4335  300005                     	org	3145733
  4336  300005  83                 	db	131
  4337                           
  4338                           ;Config register CONFIG4L @ 0x300006
  4339                           ;	unspecified, using default values
  4340                           ;	Stack Full/Underflow Reset Enable bit
  4341                           ;	STVREN = 0x1, unprogrammed default
  4342                           ;	Single-Supply ICSP Enable bit
  4343                           ;	LVP = 0x1, unprogrammed default
  4344                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4345                           ;	ICPRT = 0x0, unprogrammed default
  4346                           ;	Extended Instruction Set Enable bit
  4347                           ;	XINST = 0x0, unprogrammed default
  4348                           ;	Background Debugger Enable bit
  4349                           ;	DEBUG = 0x1, unprogrammed default
  4350  300006                     	org	3145734
  4351  300006  85                 	db	133
  4352                           
  4353                           ; Padding undefined space
  4354  300007                     	org	3145735
  4355  300007  FF                 	db	255
  4356                           
  4357                           ;Config register CONFIG5L @ 0x300008
  4358                           ;	unspecified, using default values
  4359                           ;	Code Protection bit
  4360                           ;	CP0 = 0x1, unprogrammed default
  4361                           ;	Code Protection bit
  4362                           ;	CP1 = 0x1, unprogrammed default
  4363                           ;	Code Protection bit
  4364                           ;	CP2 = 0x1, unprogrammed default
  4365                           ;	Code Protection bit
  4366                           ;	CP3 = 0x1, unprogrammed default
  4367  300008                     	org	3145736
  4368  300008  0F                 	db	15
  4369                           
  4370                           ;Config register CONFIG5H @ 0x300009
  4371                           ;	unspecified, using default values
  4372                           ;	Boot Block Code Protection bit
  4373                           ;	CPB = 0x1, unprogrammed default
  4374                           ;	Data EEPROM Code Protection bit
  4375                           ;	CPD = 0x1, unprogrammed default
  4376  300009                     	org	3145737
  4377  300009  C0                 	db	192
  4378                           
  4379                           ;Config register CONFIG6L @ 0x30000A
  4380                           ;	unspecified, using default values
  4381                           ;	Write Protection bit
  4382                           ;	WRT0 = 0x1, unprogrammed default
  4383                           ;	Write Protection bit
  4384                           ;	WRT1 = 0x1, unprogrammed default
  4385                           ;	Write Protection bit
  4386                           ;	WRT2 = 0x1, unprogrammed default
  4387                           ;	Write Protection bit
  4388                           ;	WRT3 = 0x1, unprogrammed default
  4389  30000A                     	org	3145738
  4390  30000A  0F                 	db	15
  4391                           
  4392                           ;Config register CONFIG6H @ 0x30000B
  4393                           ;	unspecified, using default values
  4394                           ;	Configuration Register Write Protection bit
  4395                           ;	WRTC = 0x1, unprogrammed default
  4396                           ;	Boot Block Write Protection bit
  4397                           ;	WRTB = 0x1, unprogrammed default
  4398                           ;	Data EEPROM Write Protection bit
  4399                           ;	WRTD = 0x1, unprogrammed default
  4400  30000B                     	org	3145739
  4401  30000B  E0                 	db	224
  4402                           
  4403                           ;Config register CONFIG7L @ 0x30000C
  4404                           ;	unspecified, using default values
  4405                           ;	Table Read Protection bit
  4406                           ;	EBTR0 = 0x1, unprogrammed default
  4407                           ;	Table Read Protection bit
  4408                           ;	EBTR1 = 0x1, unprogrammed default
  4409                           ;	Table Read Protection bit
  4410                           ;	EBTR2 = 0x1, unprogrammed default
  4411                           ;	Table Read Protection bit
  4412                           ;	EBTR3 = 0x1, unprogrammed default
  4413  30000C                     	org	3145740
  4414  30000C  0F                 	db	15
  4415                           
  4416                           ;Config register CONFIG7H @ 0x30000D
  4417                           ;	unspecified, using default values
  4418                           ;	Boot Block Table Read Protection bit
  4419                           ;	EBTRB = 0x1, unprogrammed default
  4420  30000D                     	org	3145741
  4421  30000D  40                 	db	64
  4422                           tosu	equ	0xFFF
  4423                           tosh	equ	0xFFE
  4424                           tosl	equ	0xFFD
  4425                           stkptr	equ	0xFFC
  4426                           pclatu	equ	0xFFB
  4427                           pclath	equ	0xFFA
  4428                           pcl	equ	0xFF9
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           prodh	equ	0xFF4
  4434                           prodl	equ	0xFF3
  4435                           indf0	equ	0xFEF
  4436                           postinc0	equ	0xFEE
  4437                           postdec0	equ	0xFED
  4438                           preinc0	equ	0xFEC
  4439                           plusw0	equ	0xFEB
  4440                           fsr0h	equ	0xFEA
  4441                           fsr0l	equ	0xFE9
  4442                           wreg	equ	0xFE8
  4443                           indf1	equ	0xFE7
  4444                           postinc1	equ	0xFE6
  4445                           postdec1	equ	0xFE5
  4446                           preinc1	equ	0xFE4
  4447                           plusw1	equ	0xFE3
  4448                           fsr1h	equ	0xFE2
  4449                           fsr1l	equ	0xFE1
  4450                           bsr	equ	0xFE0
  4451                           indf2	equ	0xFDF
  4452                           postinc2	equ	0xFDE
  4453                           postdec2	equ	0xFDD
  4454                           preinc2	equ	0xFDC
  4455                           plusw2	equ	0xFDB
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        16
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     50     116
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> main@str(BANK0[4]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> main@str(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S805_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> main@str(BANK0[4]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> main@str(BANK0[4]), 

    lcd_print_with_position@dato	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), main@str(BANK0[4]), 

    lcd_print@dato	PTR unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[5]), main@str(BANK0[4]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _srand->_rand
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _rand->___omul
    _lcd_print_with_position->_lcd_print
    _lcd_print->_lcd_dato
    _lcd_init->_lcd_control
    _lcd_clear_display->_lcd_control
    ___awmod->_rand

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   10982
                                             10 BANK0     40    40      0
                        _ExtInt_Init
                          _Port_Init
                            ___awmod
                  _lcd_clear_display
                           _lcd_init
                          _lcd_print
            _lcd_print_with_position
                               _rand
                            _sprintf
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2      98
                                             34 COMRAM     6     4      2
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6912
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _lcd_print_with_position                              9     3      6    1560
                                              4 COMRAM     9     3      6
                        _lcd_control
                          _lcd_print
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            2     0      2     241
                                              2 COMRAM     2     0      2
                           _lcd_dato
 ---------------------------------------------------------------------------------
 (3) _lcd_dato                                             2     2      0      44
                                              0 COMRAM     2     2      0
                   _lcd_time_control
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _lcd_control
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_display                                    0     0      0      44
                        _lcd_control
 ---------------------------------------------------------------------------------
 (2) _lcd_control                                          2     2      0      44
                                              0 COMRAM     2     2      0
                   _lcd_time_control
 ---------------------------------------------------------------------------------
 (4) _lcd_time_control                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ExtInt_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ExtInt_Init
   _Port_Init
   ___awmod
     _rand (ARG)
       ___omul
   _lcd_clear_display
     _lcd_control
       _lcd_time_control
   _lcd_init
     _lcd_control
       _lcd_time_control
   _lcd_print
     _lcd_dato
       _lcd_time_control
   _lcd_print_with_position
     _lcd_control
       _lcd_time_control
     _lcd_print
       _lcd_dato
         _lcd_time_control
   _rand
     ___omul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _srand
     _rand (ARG)
       ___omul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      74       5       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D1      20        0.0%
DATA                 0      0      D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Oct 12 18:15:29 2020

                              l40 1A02                                l43 1A6A  
                              l46 1AC4                                l72 1876  
                              l49 1B1C                                l58 181E  
                              l93 1ADC                                l96 1B04  
                              l88 1AF2                      lcd_dato@dato 0002  
                             l120 0B50                               l151 173E  
                             l152 175E                               l261 13A2  
                             l248 123E                               l378 16C0  
                             l812 18C8                               l903 154A  
                             l911 190C                               l922 1480  
                             l914 1B1E                               l842 15D4  
                             l850 0CC2                               l844 1610  
                             l852 0CCA                               l870 0F02  
                             l839 1592                               l919 1A9A  
                             l928 1A38                               l891 1990  
                             l883 17B8                               l884 17C0  
                             l877 10B6                               l888 1988  
                             _ISR 0008                               u800 1504  
                             u801 1500                               u810 190C  
                             u811 1908                               u900 1252  
                             u820 1A2C                               u901 124E  
                             u821 1A28                               u830 10CA  
                             u910 1284                               u831 10C6  
                             u911 1280                               u840 10FC  
                             u920 12C2                               u841 10F8  
                             u921 12BE                               u930 12EC  
                             u770 1494                               u851 1126  
                             u931 12E8                               u771 1490  
                             u860 114A                               u940 131A  
                             u780 14A6                               u861 1146  
                             u941 1316                               u781 14A2  
                             u870 1174                               u950 1362  
                             u790 14CE                               u871 1170  
                             u951 135E                               u791 14CA  
                             u880 11B4                               u960 155C  
                             u881 11B0                               u961 1558  
                             u890 11FE                               u970 157E  
                             u891 11FA                               u971 157A  
                             u980 15D4                               u981 15D0  
                             u990 15E4                               u991 15E0  
                             _abs 1952                               _pad 154C  
                    ___awmod@sign 0028                               wreg 000FE8  
                            ?_ISR 0001                              l2000 0980  
                            l2010 09EA                              l2002 0998  
                            ?_abs 0013                              l2020 0A54  
                            l2004 09B0                              l2022 0A6E  
                            l2006 09CA                              l2040 0AB8  
                            l2032 0A98                              l2024 0A74  
                            l2016 09F2                              l2008 09CE  
                            l2050 0B54                              l2042 0AF4  
                            l2026 0A90                              l2018 0A38  
                            l2060 0BC8                              l2052 0B70  
                            l2044 0AF8                              l2062 0C00  
                            l2054 0B74                              l2046 0B10  
                            l2038 0AA0                              l1600 12A4  
                            l1520 14CE                              l1512 1482  
                            l2056 0B90                              l2048 0B4C  
                            l1610 131A                              l1602 12C2  
                            l1522 1504                              l1514 1494  
                            l1530 18E8                              l2058 0BAC  
                            l1620 1382                              l1612 133A  
                            l1604 12CA                              l1516 14A6  
                            l1532 18EC                              l1540 1A2C  
                            l1700 0E7C                              l2094 184E  
                            l1550 10EA                              l1614 134C  
                            l1606 12DE                              l1518 14B0  
                            l1526 18CA                              l1534 1A04  
                            l1630 157E                              l1710 0EC2  
                            l1702 0E8E                              l1720 1AA0  
                            l1560 112C                              l1552 10EE  
                            l1544 10B8                              l1608 12EC  
                            l1616 1352                              l1528 18D6  
                            l1536 1A10                              l1640 15E4  
                            l1632 158A                              l1624 154C  
                            l1712 0ECA                              l1704 0E9E  
                            l1800 1768                              l1650 1ADE  
                            l1810 19D4                              l1722 1AA6  
                            l1570 1186                              l1562 114A  
                            l1554 10FC                              l1546 10BC  
                            l1618 1362                              l1538 1A14  
                            l1642 15F8                              l1634 159E  
                            l1626 155C                              l1706 0EA4  
                            l1714 0EDA                              l1730 0F28  
                            l1802 1776                              l1900 16B0  
                            l1652 1AE0                              l1820 19F6  
                            l1812 19D6                              l1724 1AAA  
                            l1572 11B4                              l1564 1152  
                            l1580 11EE                              l1556 111C  
                            l1548 10CA                              l1636 15B2  
                            l1628 1570                              l1708 0EB6  
                            l1660 0C6A                              l1740 0F94  
                            l1732 0F36                              l1804 179C  
                            l1902 16B8                              l1654 1AE8  
                            l1822 19FC                              l1814 19DC  
                            l1806 19CC                              l1726 1ABC  
                            l1718 1A9E                              l1830 182E  
                            l1582 11FE                              l1574 11D4  
                            l1566 1166                              l1558 1120  
                            l1590 1244                              l1646 1952  
                            l1638 15B6                              l1670 0CD2  
                            l1662 0C8A                              l1750 1046  
                            l1742 0FDC                              l1734 0F48  
                            l1824 1B16                              l1816 19EA  
                            l1808 19D0                              l1840 186A  
                            l1584 121E                              l1576 11D6  
                            l1568 1174                              l1592 1252  
                            l1648 196C                              l1680 0D08  
                            l1672 0CE4                              l1664 0C9A  
                            l1656 0C22                              l1752 105A  
                            l1736 0F4C                              l1728 0F04  
                            l1770 1A3C                              l1818 19F0  
                            l1826 1820                              l1578 11E8  
                            l1594 1272                              l1682 0D0E  
                            l1690 0E00                              l1674 0CF2  
                            l1666 0C9C                              l1658 0C42  
                            l1746 1014                              l1738 0F70  
                            l1762 1080                              l1850 1878  
                            l1772 1A3E                              l1780 17C2  
                            l1828 1824                              l1836 1838  
                            l1596 1276                              l1588 1240  
                            l1692 0E1A                              l1684 0D90  
                            l1676 0CF8                              l1668 0CB6  
                            l1764 10A4                              l1748 1038  
                            l1756 1066                              l1852 188A  
                            l1846 1AC6                              l1870 1612  
                            l1774 1A44                              l1782 17C6  
                            l1838 1864                              l1790 16CE  
                            l1862 13A4                              l1598 1284  
                            l1694 0E38                              l1686 0D96  
                            l1678 0D00                              l1758 1074  
                            l1854 1892                              l1950 0814  
                            l1848 1AF4                              l1880 163E  
                            l1872 1616                              l1776 1A48  
                            l1784 17EA                              l1792 16DC  
                            l1864 143A                              l1696 0E52  
                            l1688 0D9C                              l1856 189A  
                            l1960 0848                              l1952 0838  
                            l1890 1676                              l1882 1646  
                            l1874 1624                              l1778 1A5A  
                            l1786 17EE                              l1794 16FC  
                            l1698 0E6C                              l1858 18B6  
                            l1970 0862                              l1962 0854  
                            l1954 083C                              l1892 168C  
                            l1884 1658                              l1876 162C  
                            l1796 170E                              l1788 16C2  
                            l1868 1A6C                              l1980 0902  
                            l1972 08A8                              l1964 0858  
                            l1956 0840                              l1894 1694  
                            l1886 1660                              l1878 1630  
                            l1798 1760                              l1982 090C  
                            l1974 08C4                              l1958 0844  
                            ?_pad 0011                              l1896 169A  
                            l1888 1668                              l1992 092E  
                            l1984 0914                              l1976 08CA  
                            l1898 16A0                              l1986 0924  
                            l1978 08E6                              l1996 094E  
                            l1998 0968                              STR_1 0801  
                            STR_2 0810                              STR_3 080B  
                            STR_4 0810                              STR_5 0810  
                            STR_6 0810                              u1000 196C  
                            u1001 1968                              u1010 0C52  
                            u1011 0C4C                              u1100 0E52  
                            u1020 0C54                              u1101 0E4E  
                            u1110 0E6C                              u1030 0C6A  
                            u1111 0E68                              u1031 0C66  
                            u1200 17E6                              u1120 0E7C  
                            u1040 0C9A                              u1121 0E78  
                            u1041 0C96                              u1210 180E  
                            u1130 0E8E                              u1050 0CB6  
                            u1131 0E8A                              u1051 0CB2  
                            u1300 1658                              u1220 181E  
                            u1140 0E9E                              u1060 0CE4  
                            u1301 1654                              u1221 181A  
                            u1141 0E9A                              u1061 0CE0  
                            u1310 1676                              u1150 0EB6  
                            u1070 0CF2                              u1311 1672  
                            u1207 17DC                              u1231 16C8  
                            u1151 0EB2                              u1071 0CEE  
                            u1320 168C                              u1240 16DC  
                            u1080 0E1A                              u1160 0F28  
                            u1400 0980                              u1321 1688  
                            u1217 1804                              u1241 16D8  
                            u1081 0E16                              u1161 0F24  
                            u1401 097C                              u1330 16B0  
                            u1250 173E                              u1090 0E38  
                            u1170 0F70                              u1410 0998  
                            u1331 16AC                              u1251 173A  
                            u1091 0E34                              u1171 0F6C  
                            u1411 0994                              u1180 0F94  
                            u1260 17B8                              u1500 0B90  
                            u1420 09B0                              u1181 0F90  
                            u1261 17B4                              u1501 0B8C  
                            u1421 09AC                              u1270 1472  
                            u1190 1038                              u1430 09EA  
                            u1191 1034                              u1431 09E6  
                            _LATC 000F8B                              u1280 1624  
                            u1440 0A90                              u1281 1620  
                            u1441 0A8C                              u1361 081E  
                            u1290 163E                              u1450 0AB8  
                            u1291 163A                              u1275 1460  
                            u1451 0AB4                              u1371 0830  
                            u1460 0AF4                              u1380 08E6  
                            u1461 0AF0                              u1381 08E2  
                            u1470 0B10                              u1390 0968  
                            u1471 0B0C                              u1391 0964  
                            u1480 0B4C                              u1481 0B48  
                            u1537 0A60                              u1490 0B70  
                            u1547 0C0C                              u1491 0B6C  
                            u1557 1ABE                              u1567 19E2  
                            u1577 1A60                              u1587 1AE2  
                            u1597 1AEC                              abs@a 0013  
                            _dbuf 006A                              _flag 0068  
                            _main 0814                              _dtoa 0C22  
                            _rand 13A4                              _seed 008A  
                            _prec 0064                              _nout 0060  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                              btemp 005E  
                            start 000E                      ___param_bank 000000  
                   ??_ExtInt_Init 0001                             ??_ISR 0001  
                           ??_abs 0015                             ??_pad 0017  
         _lcd_print_with_position 1820                   __end_of___aodiv 1240  
                           ?_main 0001                             ?_dtoa 001C  
                 __end_of___aomod 13A4                             ?_rand 0019  
                 __end_of___awmod 16C2                             i2l131 194E  
                    vfpfcnvrt@fmt 0042                             _PORTB 000F81  
                           _TRISB 000F93                             _TRISC 000F94  
                           _flags 0066                             _fputc 1482  
                           _fputs 18CA                             _srand 1A6C  
                           pad@fp 0011                             _width 0062  
                           _putch 1B1E                             main@i 00BA  
                           main@j 00C2                             dtoa@d 001E  
                           dtoa@i 003E                             main@x 00BE  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                           tablat 000FF5                             plusw1 000FE3  
                           plusw2 000FDB                             ttemp5 005F  
                           ttemp6 0062                             ttemp7 0066  
                           status 000FD8                             wtemp8 005F  
                 __end_of_sprintf 18CA                   __initialization 1992  
                    __end_of_main 0C22                      __end_of_dtoa 0F04  
                    __end_of_rand 1482                            ??_main 009C  
                          ??_dtoa 0026                            ??_rand 001B  
             __end_of_ExtInt_Init 1ADE                     __activetblptr 000002  
                          _ADCON1 000FC1                            ?_fputc 0001  
                          ?_fputs 000A                            ?_srand 0023  
                          ?_putch 0001                            i2l2070 1944  
                          i2l2072 194C                            i2l2064 1910  
                          i2l2066 191E                            i2l2068 193C  
               ?_lcd_time_control 0001                     lcd_print@dato 0003  
              ??_lcd_time_control 0001                  __end_of_lcd_dato 1AC6  
                    vfprintf@cfmt 0056                  __end_of_lcd_init 1A04  
            __size_of_lcd_control 0032                            ___omul 16C2  
                       ??___aodiv 0011                         ??___aomod 0011  
                       ??___awmod 0027         ??_lcd_print_with_position 000B  
               _lcd_clear_display 1B16                            clear_0 19B8  
                 ___awmod@divisor 0025                   ___awmod@counter 0027  
                          pad@buf 0013                            dtoa@fp 001C  
              ?_lcd_clear_display 0001                            _strlen 1A04  
                          fputc@c 0001                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
              __size_of_Port_Init 0012                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                            srand@s 0023  
                          putch@c 0001               ??_lcd_clear_display 0003  
                __end_of_vfprintf 17C2                         ??_sprintf 005E  
                      __accesstop 0060           __end_of__initialization 19BE  
 lcd_print_with_position@posicion 000D                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001         __end_of_lcd_clear_display 1B1E  
                    __pidataBANK0 1B06                       _ExtInt_Init 1AC6  
                   __end_of_fputc 154C                     __end_of_fputs 190E  
                   __end_of_srand 1A9C                     __end_of_putch 1B20  
     lcd_print_with_position@dato 0009                __size_of_lcd_print 005E  
                         ??_fputc 0005   __end_of_lcd_print_with_position 1878  
                         ??_fputs 000E                           ??_srand 0025  
                         ??_putch 0001                        __pbssBANK0 0060  
               __end_of_Port_Init 1B06                           ?___omul 0001  
             ___omul@multiplicand 0009                           ?_strlen 0001  
              __size_of_vfpfcnvrt 01B4                         ?_lcd_dato 0001  
                       ?_lcd_init 0001                           __Hparam 0000  
                         __Lparam 0000                   lcd_control@dato 0002  
      __size_of_lcd_clear_display 0008                           ___aodiv 10B8  
               __end_of_lcd_print 1820                           ___aomod 1240  
                         ___awmod 1612                   __size_of___omul 009E  
                       ?_vfprintf 0050                      __psmallconst 0800  
                         __pcinit 1992                           __ramtop 0800  
                         __ptext0 0814                           __ptext1 1A6C  
                         __ptext2 1878                           __ptext3 1760  
                         __ptext4 0F04                           __ptext5 0C22  
                         __ptext6 154C                           __ptext7 1A04  
                         __ptext8 18CA                           __ptext9 1482  
                 __size_of_strlen 0036                      __size_of_ISR 194A  
                    __size_of_abs 0040                      __size_of_pad 00C6  
                ___awmod@dividend 0023                        ??_lcd_dato 0001  
                         _sprintf 1878                        ??_lcd_init 0003  
                         main@str 00AC                    __pintcode_body 190E  
            end_of_initialization 19BE                    ___omul@product 0011  
                         fputc@fp 0003                     __Lmediumconst 0000  
                         int_func 190E                           fputs@fp 000C  
        lcd_print_with_position@x 0005          lcd_print_with_position@y 0007  
               __end_of_vfpfcnvrt 10B8                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                      ??_vfprintf 0056                           strlen@a 0003  
                         strlen@s 0001         __size_of_lcd_time_control 0016  
                       _TRISEbits 000F96                     ??_lcd_control 0001  
                    ?_ExtInt_Init 0001                    __end_of___omul 1760  
                     vfpfcnvrt@ap 0044                       vfpfcnvrt@fp 0040  
                     vfpfcnvrt@ll 0048                    __end_of_strlen 1A3A  
             start_initialization 1992                       __end_of_ISR 1952  
                     __end_of_abs 1992                       __end_of_pad 1612  
               ___omul@multiplier 0001          ?_lcd_print_with_position 0005  
                     vfprintf@fmt 0052                          ??___omul 0011  
                       _Port_Init 1AF4                       __pdataBANK0 00C4  
             __end_of_lcd_control 1A6C                          ??_strlen 0003  
                   __pcstackBANK0 0092                  ___aodiv@dividend 0001  
               __size_of_lcd_dato 002A                 __size_of_lcd_init 0038  
                       __pintcode 0008                          ?___aodiv 0001  
                        ?___aomod 0001                  ___aodiv@quotient 0013  
                        ?___awmod 0023                        ?_Port_Init 0001  
                       _lcd_print 17C2                 __size_of_vfprintf 0062  
                _lcd_time_control 1ADE                       __smallconst 0800  
                        ?_sprintf 0058                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                    __size_of_srand 0030  
                  __size_of_putch 0002                          _LATEbits 000F8D  
                     _lcd_control 1A3A                          i2u151_40 191E  
                        i2u151_41 191A                          i2u152_40 193C  
                        i2u152_41 1938                         main@F3530 00CC  
                       main@F3532 00C4              __size_of_ExtInt_Init 0018  
                       _vfpfcnvrt 0F04                        ?_lcd_print 0003  
                       main@i_355 00B8                         main@i_357 00BC  
                       main@i_359 00C0                         main@fijas 00AA  
                       main@picas 00A8                       _INTCON2bits 000FF1  
                     _INTCON3bits 000FF0                         copy_data0 19A6  
                        __Hrparam 0000                        vfprintf@ap 0054  
                        __Lrparam 0000                        vfprintf@fp 0050  
                     ??_Port_Init 0001                  __size_of___aodiv 0188  
                __size_of___aomod 0164                  __size_of___awmod 00B0  
                      ?_vfpfcnvrt 0040                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                        sprintf@fmt 005A  
                        _dtoa$878 002E                          __ptext10 1B1E  
                        __ptext11 1952                          __ptext20 1B16  
                        __ptext12 1240                          __ptext21 1A3A  
                        __ptext13 10B8                          __ptext22 1ADE  
                        __ptext14 13A4                          __ptext23 1612  
                        __ptext15 16C2                          __ptext24 1AF4  
                        __ptext16 1820                          __ptext25 1AC6  
                        __ptext17 17C2                          __ptext18 1A9C  
                        __ptext19 19CC                          _lcd_dato 1A9C  
                        _lcd_init 19CC                  __size_of_sprintf 0052  
                   __size_of_main 040E                     __size_of_dtoa 02E2  
                   __size_of_rand 00DE                          int$flags 005E  
                        _vfprintf 1760                          main@rnum 00B0  
                        main@unum 00A0                       ??_lcd_print 0005  
                ___aomod@dividend 0001  __size_of_lcd_print_with_position 0058  
                      _INTCONbits 000FF2                          intlevel2 0000  
                       sprintf@ap 0094          __end_of_lcd_time_control 1AF4  
                      _OSCCONbits 000FD3                   ___aomod@divisor 0009  
                     ??_vfpfcnvrt 0046                   ___aomod@counter 0011  
                        sprintf@f 0096                          sprintf@s 0058  
                    ___aodiv@sign 0012                      ___aomod@sign 0012  
                    ?_lcd_control 0001  
